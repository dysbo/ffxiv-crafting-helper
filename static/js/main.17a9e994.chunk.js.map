{"version":3,"sources":["service/localStorage.js","service/xivApi.js","components/LodestoneModal.jsx","components/CalculationsRow.jsx","components/SortableTableHeader.jsx","components/CalculationsTable.jsx","components/NavigationBar.jsx","components/ImportAlert.jsx","components/Calculations.jsx","components/App.js","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","store","key","data","localStorage","setItem","JSON","stringify","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","_map","CRAFTING_CLASSES","c","currentLevel","currentExperience","experiencePerItem","totalExperience","storedData","getItem","craftingClasses","parse","result","forEach","defaultCraftingClass","storedCraftingClass","_find","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","push","retrieveAndUpdateCharacterData","BASE_URL","searchForCharacter","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","get","concat","sent","abrupt","_get","stop","_x","_x2","apply","this","getCharacter","_ref2","_callee2","id","_context2","_set","_x3","INITIAL_STATE","characterId","loading","searchResult","LodestoneModal","state","_cloneDeep","onHide","props","setState","objectSpread","event","preventDefault","_this$state","findCharacters","alert","bind","XivApi","onSelect","characterData","handleHide","_this2","show","_this$state3","react_default","createElement","Modal","Header","closeButton","Title","Body","Form","Group","Label","Control","as","onChange","handleServerSelect","XIV_SERVERS","value","handleNameEntry","Button","onClick","handleSearch","disabled","className","Spinner","animation","variant","Check","label","Name","ID","handleSelect","src","Avatar","alt","width","height","style","marginRight","Pagination","PagePrev","handleChangePage","PageNext","Footer","handleSubmit","React","Component","CalculationsRow","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","min","max","parseInt","prevProps","prevState","snapshot","newState","_forEach","field","_isEqual","keys","fieldName","fieldValue","validatedValue","validateValue","EXP_PER_LEVEL","updateLocalStorage","levelingGuide","matchedPage","pages","p","maxLevel","minLevel","url","remainingExperience","progressPercentage","Math","floor","popover","Popover","href","getLevelingGuidePageUrl","target","OverlayTrigger","trigger","placement","overlay","index_es","icon","faIcon","handleFieldUpdate","onBlur","handleLocalStorageUpdate","ceil","ProgressBar","now","SortableTableHeader","_this$props","text","sortField","updateSorting","cursor","faSort","sortByProgress","CalculationsTable","classData","Table","hover","striped","components_SortableTableHeader","k","components_CalculationsRow","assign","defaultProps","NavigationBar","activateLodestoneModal","characterIsLoaded","clearCharacterData","clearCraftingClassData","filterData","refreshCharacterData","setFilter","Navbar","bg","sticky","Brand","Nav","NavDropdown","title","Item","Divider","_orderBy","cc","Fragment","Link","Character","ImportAlert","Calculations","lodestoneModalIsOpen","sortData","direction","criteria","LocalStorageService","removeItem","updateCharacterData","updateStoredDataWithLodestoneData","updateClassData","classJobCategories","craftingClassData","_values","_includes","lodestoneClassData","newData","newClassData","targetData","replacementData","toUpdate","_uniqBy","_concat","newSortData","components_NavigationBar","Container","fluid","components_ImportAlert","components_CalculationsTable","applyFilter","applySorting","setSorting","process","components_LodestoneModal","deactivateLodestoneModal","App","components_Calculations","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.17a9e994.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\r\nimport { applyChanges, diff } from 'diff-json'\r\nimport {\r\n  filter as _filter,\r\n  find as _find,\r\n  get as _get,\r\n  includes as _includes,\r\n  map as _map,\r\n  set as _set,\r\n  values as _values\r\n} from 'lodash'\r\n\r\nconst KEYS = {\r\n  CHARACTER_DATA: 'character',\r\n  CRAFTING_CLASS_DATA: 'craftingClasses'\r\n}\r\n\r\nfunction store (key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data))\r\n}\r\n\r\nexport function retrieveAndUpdateCraftingClassData () {\r\n  // get the default crafting class data\r\n  const defaultCraftingClasses = getDefaultCraftingClasses()\r\n\r\n  // retrieve the stored data from local storage\r\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\r\n\r\n  // if there is no stored data, return the default data\r\n  if (!storedData) {\r\n    return defaultCraftingClasses\r\n  }\r\n\r\n  // if there is stored data, convert it to JSON\r\n  const craftingClasses = JSON.parse(storedData)\r\n\r\n  // create a variable for the result\r\n  const result = []\r\n\r\n  // cycle through all \"default\" classes\r\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\r\n    // retrieve the matching stored class\r\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\r\n\r\n    // if there is no matching stored class data, add the default for this class to the result\r\n    if (!storedCraftingClass) {\r\n      result.push(defaultCraftingClass)\r\n      return\r\n    }\r\n\r\n    // get any added data to the default data set and apply it to the stored data\r\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\r\n    if (classDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, classDiffs)\r\n    }\r\n\r\n    // add this record to the result to return\r\n    result.push(storedCraftingClass)\r\n  })\r\n\r\n  // send back the updated stored data\r\n  return result\r\n}\r\n\r\nexport function retrieveAndUpdateCharacterData () {\r\n  // get the stored character data\r\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\r\n\r\n  // if there is no character data, return undefined\r\n  if (!storedData) {\r\n    return undefined\r\n  }\r\n\r\n  // if there is, update it\r\n  // TBD\r\n\r\n  // return the character data\r\n  return JSON.parse(storedData)\r\n}\r\n\r\nexport function storeCharacterData (characterData) {\r\n  // localStorage.setItem(KEYS.CHARACTER_DATA, JSON.stringify(characterData))\r\n  store(KEYS.CHARACTER_DATA, characterData)\r\n}\r\n\r\nexport function storeCraftingClassData (craftingClasses) {\r\n  // localStorage.setItem(KEYS.CRAFTING_CLASS_DATA, JSON.stringify(craftingClasses))\r\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\r\n}\r\n\r\nexport function clearCharacterData () {\r\n  if (!!localStorage.getItem(KEYS.CHARACTER_DATA)) {\r\n    localStorage.removeItem(KEYS.CHARACTER_DATA)\r\n  }\r\n}\r\n\r\nexport function clearCraftingClassData () {\r\n  if (!!localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)) {\r\n    localStorage.removeItem(KEYS.CRAFTING_CLASS_DATA)\r\n  }\r\n}\r\n\r\nexport function updateCraftingClassDataWithCharacterData () {\r\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\r\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\r\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\r\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\r\n\r\n  return _map(craftingClassData, c => {\r\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\r\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\r\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\r\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\r\n    return c\r\n  })\r\n}\r\n\r\nexport function getDefaultCraftingClasses () {\r\n  return _map(CRAFTING_CLASSES, c => {\r\n    c.currentLevel = 1\r\n    c.currentExperience = 0\r\n    c.experiencePerItem = 1\r\n    c.totalExperience = 300\r\n    return c\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { get as _get, set as _set } from 'lodash'\r\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\r\n\r\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\r\nconst BASE_URL = 'https://xivapi.com'\r\n\r\nexport const searchForCharacter = async (server, name, page = 1) => {\r\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\r\n  return _get(result, 'data', [])\r\n}\r\n\r\nexport const getCharacter = async id => {\r\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\r\n  _set(result, 'data.characterId', id)\r\n  return _get(result, 'data', {})\r\n}\r\n\r\nexport const getServers = async () => {\r\n  const result = await axios.get(`${BASE_URL}/servers`)\r\n  return _get(result, 'data', [])\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { cloneDeep as _cloneDeep, get as _get, map as _map } from 'lodash'\r\nimport { Button, Form, Modal, Spinner } from 'react-bootstrap'\r\nimport * as XivApi from '../service/xivApi'\r\nimport XIV_SERVERS from '../data/xiv-servers'\r\n\r\nconst INITIAL_STATE = {\r\n  characterId: undefined,\r\n  loading: false,\r\n  name: undefined,\r\n  searchResult: undefined,\r\n  server: undefined\r\n}\r\n\r\nclass LodestoneModal extends React.Component {\r\n  state = _cloneDeep(INITIAL_STATE)\r\n\r\n  handleHide () {\r\n    const { onHide } = this.props\r\n    onHide()\r\n    this.setState({\r\n      ...INITIAL_STATE\r\n    })\r\n  }\r\n\r\n  handleSearch (event) {\r\n    if (event) {\r\n      event.preventDefault()\r\n    }\r\n\r\n    const { name, server } = this.state\r\n    if (!name || !server) {\r\n      alert('Name and Server are required to find your character data.  Please fill out both fields and try again.')\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      loading: true,\r\n      characterId: undefined\r\n    }, this.findCharacters)\r\n  }\r\n\r\n  handleSelect (characterId) {\r\n    this.setState({\r\n      characterId\r\n    })\r\n  }\r\n\r\n  handleChangePage (page) {\r\n    this.setState({\r\n      loading: true\r\n    }, this.findCharacters.bind(this, page))\r\n  }\r\n\r\n  handleServerSelect (event) {\r\n    const server = _get(event, 'target.value', event)\r\n    this.setState({\r\n      server\r\n    })\r\n  }\r\n\r\n  handleNameEntry (event) {\r\n    const name = _get(event, 'target.value', event)\r\n    this.setState({\r\n      name\r\n    })\r\n  }\r\n\r\n  async findCharacters (page = 1) {\r\n    const { name, server } = this.state\r\n    const searchResult = await XivApi.searchForCharacter(server, name, page)\r\n    this.setState({\r\n      searchResult,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  async handleSubmit () {\r\n    const { onSelect } = this.props\r\n    const { characterId } = this.state\r\n    const characterData = await XivApi.getCharacter(characterId)\r\n    onSelect(characterData)\r\n    this.handleHide()\r\n  }\r\n\r\n  render () {\r\n    const { show } = this.props\r\n    const { characterId, loading, name, searchResult, server } = this.state\r\n    return (\r\n      <Modal show={show} onHide={this.handleHide.bind(this)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Import Character Data\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Server</Form.Label>\r\n              <Form.Control as=\"select\" onChange={this.handleServerSelect.bind(this)}>\r\n                <option>Choose a Server</option>\r\n                {_map(XIV_SERVERS, (server, key) => (\r\n                  <option key={key} value={server}>{server}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.handleNameEntry.bind(this)} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" onClick={this.handleSearch.bind(this)} disabled={!name || !server}>\r\n              Search\r\n            </Button>\r\n          </Form>\r\n          <hr />\r\n          {!!loading && (\r\n            <div className=\"fullWidth text-center\">\r\n              <Spinner animation=\"grow\" variant=\"danger\" />\r\n              <Spinner animation=\"grow\" variant=\"warning\" />\r\n              <Spinner animation=\"grow\" variant=\"success\" />\r\n            </div>\r\n          )}\r\n          {!loading && !searchResult && (\r\n            <div className=\"fullWidth text-center\">\r\n              No results to display.\r\n            </div>\r\n          )}\r\n          {!loading && !!searchResult && (\r\n            <div>\r\n              <div className=\"results\">\r\n                <table className=\"fullWidth\">\r\n                  <tbody>\r\n                  {_map(_get(searchResult, 'Results', []), (result, key) => (\r\n                    <tr key={key}>\r\n                      <td className=\"text-left\">\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          label={result.Name}\r\n                          name=\"characterData\"\r\n                          value={result.ID}\r\n                          onChange={this.handleSelect.bind(this, result.ID)}\r\n                        />\r\n                      </td>\r\n                      <td className=\"text-right\">\r\n                        <img src={result.Avatar} alt={result.Name} width={36} height={36}\r\n                             style={{ marginRight: '1em' }} />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col text-left\">\r\n                  {!!searchResult.Pagination && !!searchResult.Pagination.PagePrev && (\r\n                    <Button variant=\"dark\" onClick={this.handleChangePage.bind(this, searchResult.Pagination.PagePrev)}>\r\n                      Prev Page\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div className=\"col text-right\">\r\n                  {!!searchResult.Pagination && !!searchResult.Pagination.PageNext && (\r\n                    <Button variant=\"dark\" onClick={this.handleChangePage.bind(this, searchResult.Pagination.PageNext)}>\r\n                      Next Page\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={this.handleHide.bind(this)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={this.handleSubmit.bind(this)}\r\n            disabled={!characterId}\r\n          >\r\n            Select\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  onSelect: PropTypes.func.isRequired\r\n}\r\n\r\nexport default LodestoneModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { find as _find, forEach as _forEach, get as _get, isEqual as _isEqual, set as _set } from 'lodash'\r\nimport { Button, Form, OverlayTrigger, Popover, ProgressBar} from 'react-bootstrap'\r\nimport EXP_PER_LEVEL from '../data/exp-per-level'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass CalculationsRow extends React.Component {\r\n  static validateValue (value, min, max) {\r\n    if (!value) return 0\r\n\r\n    min = parseInt(min)\r\n    max = parseInt(max)\r\n    value = parseInt(value)\r\n\r\n    if (value < min) return min\r\n    if (value > max) return max\r\n    return value\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    const { currentLevel, currentExperience, experiencePerItem, totalExperience } = props\r\n\r\n    this.state = {\r\n      currentLevel,\r\n      currentExperience,\r\n      experiencePerItem,\r\n      totalExperience\r\n    }\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const fields = ['currentLevel', 'currentExperience', 'experiencePerItem', 'totalExperience']\r\n    const newState = {}\r\n\r\n    _forEach(fields, field => {\r\n      if (!_isEqual(this.props[field], prevProps[field])) {\r\n        _set(newState, field, this.props[field])\r\n      }\r\n    })\r\n\r\n    if (Object.keys(newState).length > 0) {\r\n      this.setState({\r\n        ...newState\r\n      })\r\n    }\r\n  }\r\n\r\n  handleFieldUpdate (event) {\r\n    const fieldName = _get(event, 'target.name')\r\n    const fieldValue = _get(event, 'target.value')\r\n    const validatedValue = CalculationsRow.validateValue(fieldValue,\r\n      _get(event, 'target.min'), _get(event, 'target.max'))\r\n\r\n    const newState = {}\r\n    _set(newState, fieldName, validatedValue)\r\n\r\n    if (fieldName === 'currentLevel') {\r\n      _set(newState, 'totalExperience', EXP_PER_LEVEL[validatedValue])\r\n    }\r\n\r\n    this.setState({\r\n      ...newState\r\n    })\r\n  }\r\n\r\n  handleLocalStorageUpdate (event) {\r\n    const { updateLocalStorage } = this.props\r\n    const fieldName = _get(event, 'target.name')\r\n    const data = {}\r\n    data[fieldName] = this.state[fieldName]\r\n    if (fieldName === 'currentLevel') {\r\n      _set(data, 'totalExperience', _get(this.state, 'totalExperience'))\r\n    }\r\n    updateLocalStorage(data)\r\n  }\r\n\r\n  getLevelingGuidePageUrl () {\r\n    const { levelingGuide } = this.props\r\n    const { currentLevel } = this.state\r\n\r\n    const matchedPage = _find(levelingGuide.pages, p => {\r\n      const { maxLevel, minLevel, page } = p\r\n\r\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\r\n        return true\r\n      }\r\n    })\r\n\r\n    return `${levelingGuide.url}/${matchedPage.page}/`\r\n  }\r\n\r\n  render () {\r\n    const { name } = this.props\r\n    const { currentLevel, currentExperience, experiencePerItem, totalExperience } = this.state\r\n    const remainingExperience = totalExperience - currentExperience\r\n    const progressPercentage = totalExperience === 0 ? 0 : Math.floor((currentExperience / totalExperience) * 100)\r\n\r\n    const popover = (\r\n      <Popover id={`links-${name}`}>\r\n        <a href={this.getLevelingGuidePageUrl()} target=\"_blank\">\r\n          Leveling Guide\r\n        </a>\r\n      </Popover>\r\n    )\r\n\r\n    return (\r\n      <tr className=\"calculations\">\r\n        <td>\r\n          {name}\r\n          &nbsp;\r\n          <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n            <FontAwesomeIcon icon={faIcon} className=\"text-primary\" />\r\n          </OverlayTrigger>\r\n        </td>\r\n        <td>\r\n          <Form.Control\r\n            type=\"number\"\r\n            min={1}\r\n            max={69}\r\n            value={currentLevel}\r\n            name=\"currentLevel\"\r\n            onChange={this.handleFieldUpdate.bind(this)}\r\n            onBlur={this.handleLocalStorageUpdate.bind(this)}\r\n          />\r\n        </td>\r\n        <td>\r\n          <Form.Control\r\n            type=\"number\"\r\n            min={0}\r\n            max={totalExperience}\r\n            value={currentExperience}\r\n            name=\"currentExperience\"\r\n            onChange={this.handleFieldUpdate.bind(this)}\r\n            onBlur={this.handleLocalStorageUpdate.bind(this)}\r\n          />\r\n        </td>\r\n        <td>\r\n          {totalExperience}\r\n        </td>\r\n        <td>\r\n          {remainingExperience}\r\n        </td>\r\n        <td>\r\n          <Form.Control\r\n            type=\"number\"\r\n            min={1}\r\n            max={totalExperience}\r\n            value={experiencePerItem}\r\n            name=\"experiencePerItem\"\r\n            onChange={this.handleFieldUpdate.bind(this)}\r\n            onBlur={this.handleLocalStorageUpdate.bind(this)}\r\n          />\r\n        </td>\r\n        <td>\r\n          {Math.max(Math.ceil(remainingExperience / experiencePerItem), 0)}\r\n        </td>\r\n        <td>\r\n          <ProgressBar\r\n            now={progressPercentage}\r\n            label={`${currentExperience} / ${totalExperience} (${progressPercentage}%)`}\r\n          />\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsRow.propTypes = {\r\n  currentLevel: PropTypes.number.isRequired,\r\n  currentExperience: PropTypes.number.isRequired,\r\n  experiencePerItem: PropTypes.number.isRequired,\r\n  totalExperience: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  abbreviation: PropTypes.string.isRequired,\r\n  updateLocalStorage: PropTypes.func.isRequired,\r\n  levelingGuide: PropTypes.shape({\r\n    url: PropTypes.string.isRequired,\r\n    pages: PropTypes.arrayOf(PropTypes.shape({\r\n      page: PropTypes.number.isRequired,\r\n      minLevel: PropTypes.number.isRequired,\r\n      maxLevel: PropTypes.number.isRequired\r\n    })).isRequired\r\n  })\r\n}\r\n\r\nexport default CalculationsRow\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortableTableHeader extends React.Component {\r\n  render () {\r\n    const { text, sortField, updateSorting } = this.props\r\n    return (\r\n      <th onClick={updateSorting.bind(this, sortField)}\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {text}\r\n        <FontAwesomeIcon\r\n          className=\"margin-left\"\r\n          icon={faSort}\r\n        />\r\n      </th>\r\n    )\r\n  }\r\n}\r\n\r\nSortableTableHeader.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  sortField: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\r\n  updateSorting: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SortableTableHeader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { map as _map } from 'lodash'\r\nimport { Table } from 'react-bootstrap'\r\nimport CalculationsRow from './CalculationsRow'\r\nimport SortableTableHeader from './SortableTableHeader'\r\n\r\nfunction sortByProgress (c) {\r\n  return !c.totalExperience ? 0 : c.currentExperience / c.totalExperience\r\n}\r\n\r\nclass CalculationsTable extends React.Component {\r\n  render () {\r\n    const { classData, updateLocalStorage, updateSorting } = this.props\r\n    return (\r\n      <div>\r\n        <Table hover striped className=\"calculations\">\r\n          <thead>\r\n          <tr>\r\n            <SortableTableHeader text=\"Class\" sortField=\"name\" updateSorting={updateSorting} />\r\n            <SortableTableHeader text=\"Level\" sortField=\"currentLevel\" updateSorting={updateSorting} />\r\n            <th>Current Exp.</th>\r\n            <th>Required Exp.</th>\r\n            <th>Remaining Exp.</th>\r\n            <th>Exp. Per Item</th>\r\n            <th>Remaining Items</th>\r\n            <SortableTableHeader text=\"Progress\" sortField={sortByProgress} updateSorting={updateSorting} />\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {!!classData && _map(classData, (c, k) => (\r\n            <CalculationsRow key={k} {...c} updateLocalStorage={updateLocalStorage.bind(this, c.abbreviation)} />\r\n          ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTable.propTypes = {\r\n  classData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  updateLocalStorage: PropTypes.func.isRequired,\r\n  updateSorting: PropTypes.func.isRequired\r\n}\r\n\r\nCalculationsTable.defaultProps = {\r\n  classData: []\r\n}\r\n\r\nexport default CalculationsTable\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { map as _map, orderBy as _orderBy } from 'lodash'\r\nimport CRAFTING_CLASSES from '../data/crafting-classes'\r\n\r\nclass NavigationBar extends React.Component {\r\n  render () {\r\n    const {\r\n      activateLodestoneModal,\r\n      characterData,\r\n      characterIsLoaded,\r\n      clearCharacterData,\r\n      clearCraftingClassData,\r\n      filterData,\r\n      refreshCharacterData,\r\n      setFilter\r\n    } = this.props\r\n\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <Navbar.Brand>\r\n          FFXIV Crafting & Gathering Helper\r\n        </Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title={`Showing ${filterData.label}`}>\r\n            <NavDropdown.Item onClick={setFilter.bind(this, 'All', undefined)}>\r\n              Show All\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item onClick={setFilter.bind(this, 'Crafting Classes', c => c.type === 'crafting')}>\r\n              Crafting Classes\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item onClick={setFilter.bind(this, 'Gathering Classes', c => c.type === 'gathering')}>\r\n              Gathering Classes\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            {_map(_orderBy(CRAFTING_CLASSES, 'name'), (cc, key) => (\r\n              <NavDropdown.Item\r\n                key={key}\r\n                onClick={setFilter.bind(this, cc.name, c => cc.abbreviation === c.abbreviation)}\r\n              >\r\n                {cc.name}\r\n              </NavDropdown.Item>\r\n            ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Nav>\r\n          {!characterIsLoaded && (\r\n            <React.Fragment>\r\n              <Nav.Link onClick={activateLodestoneModal.bind(this)}>\r\n                Import Character Data\r\n              </Nav.Link>\r\n              <Nav.Link onClick={clearCraftingClassData.bind(this)}>\r\n                Clear Crafting Class Data\r\n              </Nav.Link>\r\n            </React.Fragment>\r\n          )}\r\n          {characterIsLoaded && (\r\n            <NavDropdown\r\n              title={(\r\n                <span>\r\n                    {characterData.Character.Name}\r\n                  <img\r\n                    src={characterData.Character.Avatar}\r\n                    alt={characterData.Character.Name}\r\n                    className=\"character-icon\"\r\n                  />\r\n                    </span>)}\r\n              className=\"dropleft\"\r\n            >\r\n              <NavDropdown.Item onClick={refreshCharacterData.bind(this)}>\r\n                Refresh Character Class Data\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item onClick={activateLodestoneModal.bind(this)}>\r\n                Import Different Character Data\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={clearCharacterData.bind(this)}>\r\n                Clear Character Data\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item onClick={clearCraftingClassData.bind(this)}>\r\n                Clear Crafting Class Data\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nNavigationBar.propTypes = {\r\n  activateLodestoneModal: PropTypes.func.isRequired,\r\n  characterData: PropTypes.shape({\r\n    Character: PropTypes.shape({\r\n      Avatar: PropTypes.string.isRequired,\r\n      Name: PropTypes.string.isRequired\r\n    })\r\n  }),\r\n  characterIsLoaded: PropTypes.bool.isRequired,\r\n  clearCharacterData: PropTypes.func.isRequired,\r\n  clearCraftingClassData: PropTypes.func.isRequired,\r\n  filterData: PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    criteria: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\r\n  }).isRequired,\r\n  refreshCharacterData: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default NavigationBar\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nclass ImportAlert extends React.Component {\r\n  render () {\r\n    const { characterIsLoaded, characterData, refreshCharacterData } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        {!characterIsLoaded && !!characterData && (\r\n          <div className=\"alert alert-info text-center\">\r\n            <div>\r\n              Your character is being imported for the first time. Congratulations!<br />\r\n              Please wait a few minutes and try your import again.\r\n            </div>\r\n            <div>\r\n              {!!characterData.characterId && (\r\n                <Button variant=\"info\" onClick={refreshCharacterData.bind(this, characterData.characterId)}>\r\n                  Try Again\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nImportAlert.propTypes = {\r\n  characterData: PropTypes.shape({\r\n    characterId: PropTypes.number\r\n  }),\r\n  characterIsLoaded: PropTypes.bool.isRequired,\r\n  refreshCharacterData: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ImportAlert\r\n","import React from 'react'\r\nimport {\r\n  cloneDeep as _cloneDeep,\r\n  concat as _concat,\r\n  filter as _filter,\r\n  find as _find,\r\n  get as _get,\r\n  isEqual as _isEqual,\r\n  orderBy as _orderBy,\r\n  uniqBy as _uniqBy\r\n} from 'lodash'\r\nimport { Container } from 'react-bootstrap'\r\nimport * as LocalStorageService from '../service/localStorage'\r\nimport * as XivApi from '../service/xivApi'\r\nimport LodestoneModal from './LodestoneModal'\r\nimport CalculationsTable from './CalculationsTable'\r\nimport NavigationBar from './NavigationBar'\r\nimport ImportAlert from './ImportAlert'\r\n\r\nclass Calculations extends React.Component {\r\n  state = {\r\n    lodestoneModalIsOpen: false,\r\n    sortData: {\r\n      field: 'name',\r\n      direction: 'asc'\r\n    },\r\n    filterData: {\r\n      label: 'All',\r\n      criteria: undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const characterData = LocalStorageService.retrieveAndUpdateCharacterData()\r\n    const classData = LocalStorageService.retrieveAndUpdateCraftingClassData()\r\n\r\n    this.setState({\r\n      characterData,\r\n      classData\r\n    })\r\n  }\r\n\r\n  activateLodestoneModal () {\r\n    this.setState({\r\n      lodestoneModalIsOpen: true\r\n    })\r\n  }\r\n\r\n  deactivateLodestoneModal () {\r\n    this.setState({\r\n      lodestoneModalIsOpen: false\r\n    })\r\n  }\r\n\r\n  clearCharacterData () {\r\n    LocalStorageService.clearCharacterData()\r\n    this.setState({\r\n      characterData: undefined\r\n    })\r\n  }\r\n\r\n  clearCraftingClassData () {\r\n    LocalStorageService.clearCraftingClassData()\r\n    this.setState({\r\n      classData: LocalStorageService.retrieveAndUpdateCraftingClassData()\r\n    })\r\n  }\r\n\r\n  async refreshCharacterData (id) {\r\n    const characterId = _get(this.state, 'characterData.Character.ID', id)\r\n    const characterData = await XivApi.getCharacter(characterId)\r\n    this.updateCharacterData(characterData)\r\n    // this.updateStoredDataWithLodestoneData()\r\n  }\r\n\r\n  updateCharacterData (characterData) {\r\n    LocalStorageService.storeCharacterData(characterData)\r\n    this.setState({\r\n      characterData\r\n    }, this.updateStoredDataWithLodestoneData.bind(this))\r\n  }\r\n\r\n  updateClassData (classData) {\r\n    LocalStorageService.storeCraftingClassData(classData)\r\n    this.setState({\r\n      classData\r\n    })\r\n  }\r\n\r\n  updateStoredDataWithLodestoneData () {\r\n    this.updateClassData(LocalStorageService.updateCraftingClassDataWithCharacterData())\r\n  }\r\n\r\n  updateLocalStorage (abbreviation, newData) {\r\n    const { classData } = this.state\r\n    const newClassData = _cloneDeep(classData)\r\n    const targetData = _find(newClassData, c => c.abbreviation === abbreviation)\r\n    if (targetData) {\r\n      const replacementData = {\r\n        ...targetData,\r\n        ...newData\r\n      }\r\n\r\n      const toUpdate = _uniqBy(_concat(replacementData, newClassData), c => c.abbreviation)\r\n\r\n      this.updateClassData(toUpdate)\r\n    }\r\n  }\r\n\r\n  applySorting (classData) {\r\n    const { sortData } = this.state\r\n    return _orderBy(_cloneDeep(classData), sortData.field, sortData.direction)\r\n  }\r\n\r\n  setSorting (field) {\r\n    const { sortData } = this.state\r\n    const newSortData = {\r\n      ...sortData\r\n    }\r\n\r\n    if (_isEqual(JSON.stringify(sortData.field), JSON.stringify(field))) {\r\n      newSortData.direction = sortData.direction === 'asc' ? 'desc' : 'asc'\r\n    } else {\r\n      newSortData.field = field\r\n      newSortData.direction = 'asc'\r\n    }\r\n\r\n    this.setState({\r\n      sortData: newSortData\r\n    })\r\n  }\r\n\r\n  applyFilter (classData) {\r\n    const { filterData } = this.state\r\n    return _filter(_cloneDeep(classData), filterData.criteria)\r\n  }\r\n\r\n  setFilter (label, criteria) {\r\n    this.setState({\r\n      filterData: {\r\n        label,\r\n        criteria\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { characterData, classData, filterData, lodestoneModalIsOpen } = this.state\r\n    const characterIsLoaded = !!characterData && !!characterData.Character\r\n    return (\r\n      <React.Fragment>\r\n        <NavigationBar\r\n          activateLodestoneModal={this.activateLodestoneModal.bind(this)}\r\n          characterData={characterData}\r\n          characterIsLoaded={characterIsLoaded}\r\n          clearCharacterData={this.clearCharacterData.bind(this)}\r\n          clearCraftingClassData={this.clearCraftingClassData.bind(this)}\r\n          filterData={filterData}\r\n          refreshCharacterData={this.refreshCharacterData.bind(this)}\r\n          setFilter={this.setFilter.bind(this)}\r\n        />\r\n        <Container fluid>\r\n          <ImportAlert\r\n            characterData={characterData}\r\n            characterIsLoaded={characterIsLoaded}\r\n            refreshCharacterData={this.refreshCharacterData.bind(this)}\r\n          />\r\n          <CalculationsTable\r\n            classData={this.applyFilter(this.applySorting(classData))}\r\n            updateLocalStorage={this.updateLocalStorage.bind(this)}\r\n            updateSorting={this.setSorting.bind(this)}\r\n          />\r\n          <hr />\r\n          <div className=\"text-center text-muted\">\r\n            Version {process.env.REACT_APP_VERSION}\r\n          </div>\r\n        </Container>\r\n        <LodestoneModal\r\n          show={lodestoneModalIsOpen}\r\n          onHide={this.deactivateLodestoneModal.bind(this)}\r\n          onSelect={this.updateCharacterData.bind(this)}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Calculations\r\n","import React from 'react'\r\nimport Calculations from './Calculations'\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Calculations />\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}