{"version":3,"sources":["service/localStorage.js","service/xivApi.js","store/local/types.js","store/local/actions.js","components/navigation/LodestoneCharacterModal.jsx","components/navigation/LodestoneCharacterMenu.jsx","components/navigation/Navigation.jsx","components/recipes/RecipeSearchForm.jsx","components/common/Pagination.jsx","components/recipes/RecipeSearchResult.jsx","components/recipes/RecipeSearch.jsx","components/recipes/MyList.jsx","store/recipeList/types.js","service/recipe.js","store/recipeList/actions.js","components/common/SortableTableHeaderCell.jsx","components/common/XivIcon.jsx","components/recipes/ShoppingList.jsx","components/calculator/FilterDropdown.jsx","service/calculations.js","components/calculator/CalculationsTableHeader.jsx","components/calculator/CalculationsTableBody.jsx","components/calculator/FirstTimeImport.jsx","components/calculator/CraftingGatheringCalculator.jsx","components/RecipeHelper.jsx","components/common/LoadingOverlay.jsx","components/XivCraftingGatheringHelper.jsx","store/local/reducer.js","store/recipeList/reducer.js","store/index.js","components/App.jsx","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","MY_RECIPE_LIST","MY_SHOPPING_LIST","CURRENT_TAB","OWNED_ITEMS","get","key","defaultValue","data","localStorage","getItem","JSON","parse","store","setItem","stringify","clear","removeItem","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","getDefaultCraftingClasses","storedData","craftingClasses","result","forEach","defaultCraftingClass","storedCraftingClass","_find","c","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","levelingGuideDiffs","push","retrieveAndUpdateCharacterData","updateCraftingClassDataWithCharacterData","classJobCategories","craftingClassData","characterData","_values","_get","_includes","_map","lodestoneClassData","_set","totalExperience","CRAFTING_CLASSES","currentLevel","currentExperience","experiencePerItem","BASE_URL","getIconUrl","iconRelativePath","concat","getServerList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","sent","abrupt","stop","apply","this","arguments","findCharacterByServerAndName","_ref2","_callee2","server","name","page","_args2","_context2","undefined","_x","_x2","getCharacterById","_ref3","_callee3","id","_context3","set","_x3","recipeSearch","_ref4","_callee4","searchString","options","columns","_options$exact","exact","_options$page","_options$includeMaste","includeMasterRecipes","request","_args4","_context4","toLower","replace","indexes","body","query","bool","must","wildcard","NameCombined_en","match","ExpRewarded","ItemRequiredTargetID","size","from","sort","RecipeLevelTable.ClassJobLevel","limit","SecretRecipeBookTargetID","isArray","minimum_should_match","should","map","ClassJob.Abbreviation_en","post","getRecipesById","_ref5","_callee5","recipeIds","i","_context5","params","ids","join","_x4","getItemsById","_ref6","_callee6","itemIds","_context6","_x5","LOCAL_CLASS_DATA_RETRIEVAL","LOCAL_CLASS_DATA_STORE","LOCAL_CLASS_DATA_CLEAR","LOCAL_CHARACTER_DATA_RETRIEVAL","LOCAL_CHARACTER_DATA_STORE","LOCAL_CHARACTER_DATA_CLEAR","LODESTONE_CHARACTER_DATA_REQUEST","LODESTONE_CHARACTER_DATA_SUCCESS","API_REQUEST_FAILURE","lodestoneCharacterDataRequest","characterId","T","apiRequestSuccess","payload","getLocalClassData","dispatch","localData","localClassDataRetrieve","LocalStorage","saveLocalClassData","classData","clearLocalClassData","saveLocalCharacterData","getLocalCharacterData","localCharacterDataRetrieve","clearLocalCharacterData","getLodestoneCharacterData","XivApi","t0","error","LodestoneCharacterModal","state","sortBy","s","toString","toLowerCase","servers","setState","event","_event$target","target","value","defineProperty","preventDefault","loading","performSearch","lodestoneResults","onHide","props","handleClose","_this2","show","_this$state2","results","prevPage","nextPage","react_default","createElement","Modal","bind","Form","onSubmit","handleSearch","onReset","Header","closeButton","Title","Body","Group","Label","Control","as","onChange","handleSetField","Button","disabled","className","Spinner","animation","variant","Fragment","char","ID","Name","Avatar","Check","htmlFor","src","alt","onClick","Footer","handleSubmitCharacterSelection","React","Component","defaultProps","getDropdownTitle","_characterData$Charac","Character","LodestoneCharacterMenu","showModal","_this$props","searchLodestoneCharacterData","importText","NavDropdown","alignRight","title","Item","Divider","handleModalToggle","navigation_LodestoneCharacterModal","connect","Navigation","Navbar","bg","sticky","NavbarBrand","Nav","navigation_LodestoneCharacterMenu","RecipeSearchForm","craftingClassSelections","ButtonGroup","updateCraftingClassSelections","prevProps","prevState","snapshot","recipeSearchClasses","isEqual","handleToggleRecipeSearchClass","buttons","filter","cc","OverlayTrigger","overlay","Tooltip","includes","icon","_this$props2","handleChange","handleReset","handleSubmit","handleToggleRecipeIncludeMaster","recipeSearchIncludeMaster","handleToggleRecipeSearchExact","recipeSearchExact","recipeSearchIsInvalid","recipeSearchString","isInvalid","FormControl","Feedback","checked","Pagination","currentPage","handlePageChange","totalPages","minPage","Math","max","min","maxPage","activePage","option","paginate","RecipeSearchResult","_this","clearRecipeSearch","handleTabChange","handleToggleListItem","myList","pagination","recipeList","pageTotal","pageCurrent","Table","hover","striped","colSpan","Pagination_Pagination","r","iconUrl","craftingClassName","level","isOnList","find","item","index_es","faMinusSquare","faPlusSquare","ready","RecipeSearch","recipeSearchResults","RecipeSearchForm_RecipeSearchForm","RecipeSearchResult_RecipeSearchResult","MyList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","mapping","createItemQuantityMapping","list","l","quantity","handleUpdateQuantity","toNumber","handleClearList","Icon","ClassJob","NameEnglish","RecipeLevelTable","ClassJobLevel","handleItemQuantityUpdate","onBlur","handleQuantityFieldBlur","RECIPE_SEARCH_REQUEST","RECIPE_SEARCH_SUCCESS","RECIPE_SEARCH_FAILURE","RECIPE_SEARCH_CLEAR","RECIPE_LIST_CLEAR","RECIPE_LIST_SAVE","SHOPPING_LIST_CREATE","SHOPPING_LIST_CLEAR","SHOPPING_LIST_ERROR","getIngredientListForRecipes","ingredientsGatherable","ingredientsCrafted","ingredientsOther","ingredientsPurchased","itemData","getAndSortRecipeResults","XivApiService","foundItem","ig","io","val","addGatheringItemData","orderBy","uniqBy","ic","gatheringItemId","filteredGatheringPoints","GATHERING_ITEM_POINTS","point","startsWith","pointData","getPointData","itemId","filteredFishingSpots","FISHING_SPOTS","spot","path","pd","namePath","areaPath","regionPath","levelPath","typePath","area","region","gatheringClass","Mining","Quarrying","Logging","Harvesting","hasFishingSpotMatch","matched","fishingId","recipeResults","nextRecipeResults","recipe","t1","t2","rr","recipeListEntry","rle","_loop","itemCategory","amount","gatheringMapNode","ITEM_TO_GATHERING_ITEM_MAPPING","ingredientRecipe","fishingSpotMatch","existingIngredientGatherable","existingAmount","existingIngredientCrafted","ir","existingIngredientOther","ip","_x6","recipeSearchRequest","apiRequestFailure","saveMyRecipeList","myRecipeList","recipeListSave","createMyShoppingList","clearMyRecipeList","clearMyShoppingList","RecipeListService","myShoppingList","shoppingList","SortableTableHeaderCell","text","sortFunc","applySorting","style","cursor","faSort","XivIcon","badge","image","tooltip","htmlImage","url","altText","content","htmlBadge","Badge","cx","ShoppingList","ingredientsGatherableSort","func","direction","itemsOwned","updateGatherableIngredients","gatherableStateVars","objectSpread","ingredientsCrystals","newIngredientsGatherableSort","obtainedItems","_window","window","scrollX","scrollY","clone","pull","x","y","scrollTo","_this$props$shoppingL","_this$state","XivIcon_XivIcon","common_SortableTableHeaderCell","handleApplyIngredientsGatherableSort","handleOwnershipSort","locationSelectId","gatheringType","owned","handleLocationUpdate","handleToggleItemOwned","craftClass","craftLevel","handleClearOwnershipInfo","FilterDropdown","label","applyFilterFunc","DropdownButton","Dropdown","craftingClass","calculateRemainingExp","currentExp","totalExp","calculateRemainingItems","remainingExp","expPerItem","ceil","calculateProgressPercentage","floor","tableHeaders","CalculationsTableHeader","applySortFunc","h","CalculationsTableBody","focusedRow","levelingGuide","LEVELING_GUIDE_LINKS","g","matchedPage","pages","p","maxLevel","minLevel","updateField","focused","remainingExperience","remainingItems","progressPercentage","popover","Popover","href","getLevelingGuidePageUrl","rel","onFocus","handleRowFocus","trigger","placement","rootClose","faIcon","validateNumericFieldChange","ProgressBar","now","FirstTimeImport","timer","startTimer","endTimer","timeLeft","setInterval","executeTimer","clearInterval","timeLeftMessage","CraftingGatheringCalculator","sortDirection","filterFunc","innerText","targetCraftingClass","otherCraftingClasses","EXP_PER_LEVEL","sortedAndFilteredCraftingClassData","getSortedCraftingClassData","getFilteredCraftingClassData","FirstTimeImport_FirstTimeImport","FilterDropdown_FilterDropdown","applyFilter","CalculationsTableHeader_CalculationsTableHeader","applySort","calculator_CalculationsTableBody","RecipeHelper","lastSearch","cloneDeep","splice","indexOf","_this$setState","searchRecipes","newValue","document","getElementsByName","focus","search","currentTab","omit","myClonedList","reject","_this$props3","Tabs","activeKey","onSelect","Tab","eventKey","calculator_CraftingGatheringCalculator","RecipeSearch_RecipeSearch","handleFieldUpdate","handleClear","toggleListItem","MyList_MyList","ShoppingList_ShoppingList","recipeActions","string","LoadingOverlay","externalLink","XivCraftingGatheringHelper","toast","Navigation_Navigation","Container","fluid","components_RecipeHelper","process","Toast","onClose","handleToastClose","position","top","right","zIndex","minWidth","time","message","LoadingOverlay_LoadingOverlay","Date","toISOString","keys","actions","INITIAL_STATE","rootReducer","combineReducers","local","action","unset","createStore","applyMiddleware","thunk","App","Provider","components_XivCraftingGatheringHelper","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.d9bb7629.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\r\nimport { applyChanges, diff } from 'diff-json'\r\nimport {\r\n  filter as _filter,\r\n  find as _find,\r\n  get as _get,\r\n  includes as _includes,\r\n  map as _map,\r\n  set as _set,\r\n  values as _values\r\n} from 'lodash'\r\n\r\nconst KEYS = {\r\n  CHARACTER_DATA: 'character',\r\n  CRAFTING_CLASS_DATA: 'craftingClasses',\r\n  MY_RECIPE_LIST: 'myRecipeList',\r\n  MY_SHOPPING_LIST: 'myShoppingList',\r\n  CURRENT_TAB: 'currentTab',\r\n  OWNED_ITEMS: 'ownedItems'\r\n}\r\n\r\nfunction get (key, defaultValue) {\r\n  const data = localStorage.getItem(key)\r\n  if (!!data) {\r\n    return JSON.parse(data)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nfunction store (key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data))\r\n}\r\n\r\nfunction clear (key) {\r\n  if (!!localStorage.getItem(key)) {\r\n    localStorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport function getObtainedItems () {\r\n  return get(KEYS.OWNED_ITEMS, [])\r\n}\r\n\r\nexport function storeObtainedItems (obtainedItems) {\r\n  store(KEYS.OWNED_ITEMS, obtainedItems)\r\n}\r\n\r\nexport function getCurrentTab () {\r\n  return get(KEYS.CURRENT_TAB)\r\n}\r\n\r\nexport function storeCurrentTab (currentTab) {\r\n  store(KEYS.CURRENT_TAB, currentTab)\r\n}\r\n\r\nexport function getMyRecipeList () {\r\n  return get(KEYS.MY_RECIPE_LIST, [])\r\n}\r\n\r\nexport function getMyShoppingList () {\r\n  return get(KEYS.MY_SHOPPING_LIST, {})\r\n}\r\n\r\nexport function storeCharacterData (characterData) {\r\n  store(KEYS.CHARACTER_DATA, characterData)\r\n}\r\n\r\nexport function storeCraftingClassData (craftingClasses) {\r\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\r\n}\r\n\r\nexport function storeMyRecipeList (myRecipeList) {\r\n  store(KEYS.MY_RECIPE_LIST, myRecipeList)\r\n}\r\n\r\nexport function storeMyShoppingList (myShoppingList) {\r\n  store(KEYS.MY_SHOPPING_LIST, myShoppingList)\r\n}\r\n\r\nexport function clearCharacterData () {\r\n  clear(KEYS.CHARACTER_DATA)\r\n}\r\n\r\nexport function clearCraftingClassData () {\r\n  clear(KEYS.CRAFTING_CLASS_DATA)\r\n}\r\n\r\nexport function clearMyRecipeList () {\r\n  clear(KEYS.MY_RECIPE_LIST)\r\n}\r\n\r\nexport function clearMyShoppingList () {\r\n  clear(KEYS.MY_SHOPPING_LIST)\r\n}\r\n\r\nexport function clearObtainedItems () {\r\n  clear(KEYS.OWNED_ITEMS)\r\n}\r\n\r\nexport function retrieveAndUpdateCraftingClassData () {\r\n  // get the default crafting class data\r\n  const defaultCraftingClasses = getDefaultCraftingClasses()\r\n\r\n  // retrieve the stored data from local storage\r\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\r\n\r\n  // if there is no stored data, return the default data\r\n  if (!storedData) {\r\n    return defaultCraftingClasses\r\n  }\r\n\r\n  // if there is stored data, convert it to JSON\r\n  const craftingClasses = JSON.parse(storedData)\r\n\r\n  // create a variable for the result\r\n  const result = []\r\n\r\n  // cycle through all \"default\" classes\r\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\r\n    // retrieve the matching stored class\r\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\r\n\r\n    // if there is no matching stored class data, add the default for this class to the result\r\n    if (!storedCraftingClass) {\r\n      result.push(defaultCraftingClass)\r\n      return\r\n    }\r\n\r\n    // get any added data to the default data set and apply it to the stored data\r\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\r\n    if (classDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, classDiffs)\r\n    }\r\n\r\n    // get any leveling guide data and remove it from stored data\r\n    const levelingGuideDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.key === 'levelingGuide')\r\n    if (levelingGuideDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, levelingGuideDiffs)\r\n    }\r\n\r\n    // add this record to the result to return\r\n    result.push(storedCraftingClass)\r\n  })\r\n\r\n  // send back the updated stored data\r\n  return result\r\n}\r\n\r\nexport function retrieveAndUpdateCharacterData () {\r\n  // get the stored character data\r\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\r\n\r\n  // if there is no character data, return undefined\r\n  if (!storedData) {\r\n    return undefined\r\n  }\r\n\r\n  // if there is, update it\r\n  // TBD\r\n\r\n  // return the character data\r\n  return JSON.parse(storedData)\r\n}\r\n\r\nexport function updateCraftingClassDataWithCharacterData () {\r\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\r\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\r\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\r\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\r\n\r\n  return _map(craftingClassData, c => {\r\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\r\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\r\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\r\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\r\n    return c\r\n  })\r\n}\r\n\r\nexport function getDefaultCraftingClasses () {\r\n  return _map(CRAFTING_CLASSES, c => {\r\n    c.currentLevel = 1\r\n    c.currentExperience = 0\r\n    c.experiencePerItem = 1\r\n    c.totalExperience = 300\r\n    return c\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { map, get, isArray, set, toLower } from 'lodash'\r\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\r\n\r\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\r\nconst BASE_URL = 'https://xivapi.com'\r\n\r\n// this is for testing\r\n// let attempt = 0\r\n\r\n/**\r\n * Retrieves the URL of an icon provided in a response from XIVAPI.\r\n * @param   {string}  iconRelativePath  The relative path of the icon.\r\n * @returns {string}                    The full URL path of the icon.\r\n */\r\nexport const getIconUrl = iconRelativePath => `${BASE_URL}${iconRelativePath}`\r\n\r\n/**\r\n * Retrieves a list of servers in FFXIV.\r\n * @returns {[object]} A list of server names.\r\n */\r\nexport const getServerList = async () => {\r\n  const result = await axios.get(`${BASE_URL}/servers`)\r\n  return get(result, 'data', [])\r\n}\r\n\r\n/**\r\n * Finds a character by server and name.\r\n *\r\n * @param   {string}  server  The name of the server.\r\n * @param   {string}  name    The name of the character.\r\n * @param   {number}  page    The page of results to view.\r\n * @returns {object}          An object containing the search results.\r\n */\r\nexport const findCharacterByServerAndName = async (server, name, page = 1) => {\r\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\r\n  return get(result, 'data', [])\r\n}\r\n\r\n/**\r\n * Retrieves character data by the character's ID.\r\n *\r\n * @param   {number}  id  The ID of the character to retrieve.\r\n * @returns {object}      An object containing the character's data.\r\n */\r\nexport const getCharacterById = async id => {\r\n  // use this for normal functionality\r\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\r\n\r\n  // use this when testing the \"first import\" message\r\n  // console.log('this is attempt', attempt.toString())\r\n  // let result\r\n  // if (!attempt) {\r\n  //   result = { data: UNLOADED_CHARACTER }\r\n  // } else {\r\n  //   result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\r\n  // }\r\n  // attempt++\r\n\r\n  // use this when testing the behavior when character does not load from Lodestone\r\n  // const result = { data: UNLOADED_CHARACTER }\r\n\r\n  set(result, 'data.characterId', id)\r\n  return get(result, 'data', {})\r\n}\r\n\r\n/**\r\n * Searches for recipes via the XIPAPI.\r\n *\r\n * @param   {string}          searchString                    The string for which to search.\r\n * @param   {object}          [options]                       Options to apply to this search.\r\n * @param   {boolean}         [options.exact]                 Whether we are searching for the exact string (true) or\r\n *                                                              should substitute spaces for wildcards (false).\r\n * @param   {number}          [options.page]                  The page on which to begin the search.\r\n * @param   {string|[string]} [options.abbreviation]          Any crafting class abbreviations that should be queried.\r\n * @param   {boolean}         [options.includeMasterRecipes]  Indicates whether master recipes should be included.\r\n * @returns {object}                                          An object containing search results.\r\n */\r\nexport const recipeSearch = async (searchString = '', options = {}) => {\r\n  const indexes = 'recipe'\r\n  const size = 20\r\n  const columns = [\r\n    'ID',\r\n    'ClassJob.Abbreviation_en',\r\n    'ClassJob.Icon',\r\n    'ClassJob.NameEnglish',\r\n    'RecipeLevelTable.ClassJobLevel',\r\n    'Name',\r\n    'Icon'\r\n  ]\r\n\r\n  const { exact = false, page = 1, includeMasterRecipes = false } = options\r\n\r\n  searchString = toLower(searchString)\r\n\r\n  if (!exact) {\r\n    searchString = searchString.replace(' ', '*')\r\n  }\r\n\r\n  const request = {\r\n    indexes,\r\n    body: {\r\n      query: {\r\n        bool: {\r\n          must: [\r\n            {\r\n              wildcard: {\r\n                'NameCombined_en': `*${searchString}*`\r\n              }\r\n            },\r\n            {\r\n              match: {\r\n                'ExpRewarded': 1\r\n              }\r\n            },\r\n            {\r\n              match: {\r\n                'ItemRequiredTargetID': 0\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      size,\r\n      from: size * (page - 1),\r\n      sort: [\r\n        {\r\n          'RecipeLevelTable.ClassJobLevel': 'asc'\r\n        }\r\n      ]\r\n    },\r\n    columns,\r\n    limit: size,\r\n    page\r\n  }\r\n\r\n  if (!includeMasterRecipes) {\r\n    request.body.query.bool.must.push({\r\n      match: {\r\n        'SecretRecipeBookTargetID': 0\r\n      }\r\n    })\r\n  }\r\n\r\n  if (!!options.abbreviation && !!options.abbreviation.length && options.abbreviation.length < 8) {\r\n    let { abbreviation } = options\r\n    const minimum_should_match = 1\r\n\r\n    abbreviation = isArray(abbreviation) ? abbreviation : [abbreviation]\r\n\r\n    request.body.query.bool.minimum_should_match = minimum_should_match\r\n    request.body.query.bool.should = map(abbreviation, a => ({\r\n      match: {\r\n        'ClassJob.Abbreviation_en': a\r\n      }\r\n    }))\r\n  }\r\n\r\n  const result = await axios.post(`${BASE_URL}/search`,\r\n    request\r\n  )\r\n  return get(result, 'data', {})\r\n}\r\n\r\n/**\r\n * Retrieves a list of recipes by their IDs.\r\n *\r\n * @param   {[number]}  recipeIds The IDs of the recipes that should be retrieved.\r\n * @returns {object}              An object containing the recipe data retrieved.\r\n */\r\nexport const getRecipesById = async recipeIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name'\r\n  ]\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    columns.push(`AmountIngredient${i}`)\r\n    columns.push(`ItemIngredient${i}.ID`)\r\n    columns.push(`ItemIngredient${i}.Icon`)\r\n    columns.push(`ItemIngredient${i}.Name`)\r\n    columns.push(`ItemIngredient${i}.ItemSearchCategoryTargetID`)\r\n    columns.push(`ItemIngredientRecipe${i}`)\r\n  }\r\n\r\n  const result = await axios.get(`${BASE_URL}/recipe`, {\r\n    params: {\r\n      ids: recipeIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n  return get(result, 'data', {})\r\n}\r\n\r\n/**\r\n * Retrieves a list of items by their IDs.\r\n *\r\n * @param   {[number]}  itemIds The IDs of the items that should be retrieved.\r\n * @returns {object}            An object containing the item data retrieved.\r\n */\r\nexport const getItemsById = async itemIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name',\r\n    'Icon',\r\n    'GameContentLinks'\r\n  ]\r\n\r\n  const result = await axios.get(`${BASE_URL}/item`, {\r\n    params: {\r\n      ids: itemIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n\r\n  return get(result, 'data', {})\r\n}\r\n","const LODESTONE = 'LODESTONE'\r\nconst LOCAL = 'LOCAL'\r\n\r\nconst REQUEST = 'REQUEST'\r\nconst SUCCESS = 'SUCCESS'\r\nconst FAILURE = 'FAILURE'\r\n\r\nexport const LOCAL_CLASS_DATA_RETRIEVAL = `${LOCAL}_CLASS_DATA_RETRIEVAL`\r\nexport const LOCAL_CLASS_DATA_STORE = `${LOCAL}_CLASS_DATA_STORE`\r\nexport const LOCAL_CLASS_DATA_CLEAR = `${LOCAL}_CLASS_DATA_CLEAR`\r\n\r\nexport const LOCAL_CHARACTER_DATA_RETRIEVAL = `${LOCAL}_CHARACTER_DATA_RETRIEVAL`\r\nexport const LOCAL_CHARACTER_DATA_STORE = `${LOCAL}_CHARACTER_DATA_STORE`\r\nexport const LOCAL_CHARACTER_DATA_CLEAR = `${LOCAL}_CHARACTER_DATA_CLEAR`\r\n\r\nexport const LODESTONE_CHARACTER_DATA_REQUEST = `${LODESTONE}_CHARACTER_DATA_${REQUEST}`\r\nexport const LODESTONE_CHARACTER_DATA_SUCCESS = `${LODESTONE}_CHARACTER_DATA_${SUCCESS}`\r\nexport const API_REQUEST_FAILURE = `${LODESTONE}_CHARACTER_DATA_${FAILURE}`\r\n","import * as LocalStorage from '../../service/localStorage'\r\nimport * as XivApi from '../../service/xivApi'\r\nimport * as T from './types'\r\n\r\nconst localClassDataRetrieve = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localClassDataStore = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localClassDataClear = () => ({\r\n  type: T.LOCAL_CLASS_DATA_CLEAR\r\n})\r\n\r\nconst localCharacterDataRetrieve = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataStore = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataClear = () => ({\r\n  type: T.LOCAL_CHARACTER_DATA_CLEAR\r\n})\r\n\r\nconst lodestoneCharacterDataRequest = characterId => ({\r\n  type: T.LODESTONE_CHARACTER_DATA_REQUEST,\r\n  characterId\r\n})\r\n\r\nconst apiRequestSuccess = (type, payload) => ({\r\n  type,\r\n  payload\r\n})\r\n\r\nconst apiRequestFailure = (type, error) => ({\r\n  type,\r\n  error\r\n})\r\n\r\nexport const getLocalClassData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCraftingClassData()\r\n    dispatch(localClassDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const saveLocalClassData = classData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCraftingClassData(classData)\r\n    dispatch(localClassDataStore(classData))\r\n  }\r\n}\r\n\r\nexport const clearLocalClassData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCraftingClassData()\r\n    dispatch(localClassDataClear())\r\n  }\r\n}\r\n\r\nexport const saveLocalCharacterData = characterData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCharacterData(characterData)\r\n    dispatch(localCharacterDataStore(characterData))\r\n  }\r\n}\r\n\r\nexport const getLocalCharacterData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCharacterData()\r\n    dispatch(localCharacterDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const clearLocalCharacterData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCharacterData()\r\n    dispatch(localCharacterDataClear())\r\n  }\r\n}\r\n\r\nexport const getLodestoneCharacterData = characterId => {\r\n  return async dispatch => {\r\n    dispatch(lodestoneCharacterDataRequest(characterId))\r\n    try {\r\n      const payload = await XivApi.getCharacterById(characterId)\r\n      dispatch(apiRequestSuccess(T.LODESTONE_CHARACTER_DATA_SUCCESS, payload))\r\n      dispatch(saveLocalCharacterData(payload))\r\n      dispatch(saveLocalClassData(LocalStorage.updateCraftingClassDataWithCharacterData()))\r\n      dispatch(getLocalClassData())\r\n    } catch (err) {\r\n      dispatch(apiRequestFailure(T.API_REQUEST_FAILURE, err))\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap'\r\nimport { get, sortBy, map as _map } from 'lodash'\r\nimport * as XivApi from '../../service/xivApi'\r\n\r\nclass LodestoneCharacterModal extends React.Component {\r\n  state = {}\r\n\r\n  async componentDidMount() {\r\n    if (get(this.state, 'servers', []).length === 0) {\r\n      const servers = sortBy(await XivApi.getServerList(), s => s.toString().toLowerCase())\r\n      this.setState({\r\n        servers\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSetField (event) {\r\n    const { target: { name, value } } = event\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSearch (page = 1, event) {\r\n    !!event && event.preventDefault()\r\n    this.setState({\r\n      loading: true,\r\n      page\r\n    }, this.performSearch)\r\n  }\r\n\r\n  async performSearch () {\r\n    const { name, server, page } = this.state\r\n    const result = await XivApi.findCharacterByServerAndName(server, name, page)\r\n    this.setState({\r\n      lodestoneResults: result,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleClose () {\r\n    const { onHide } = this.props\r\n    this.setState({\r\n      name: undefined,\r\n      server: undefined,\r\n      lodestoneResults: undefined,\r\n      characterId: undefined\r\n    }, onHide)\r\n  }\r\n\r\n  handleSubmitCharacterSelection () {\r\n    const { getLodestoneCharacterData } = this.props\r\n    const { characterId } = this.state\r\n\r\n    getLodestoneCharacterData(characterId)\r\n    this.handleClose()\r\n  }\r\n\r\n  render () {\r\n    const { show } = this.props\r\n    const { characterId, loading, lodestoneResults, name, server, servers } = this.state\r\n\r\n    const results = get(lodestoneResults, 'Results', [])\r\n    const prevPage = get(lodestoneResults, 'Pagination.PagePrev')\r\n    const nextPage = get(lodestoneResults, 'Pagination.PageNext')\r\n\r\n    return (\r\n      <Modal show={show} onHide={this.handleClose.bind(this)}>\r\n        <Form\r\n          onSubmit={this.handleSearch.bind(this, 1)}\r\n          onReset={this.handleClose.bind(this)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Import Character Data\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Label>Server</Form.Label>\r\n              <Form.Control name=\"server\" as=\"select\" onChange={this.handleSetField.bind(this)}>\r\n                <option>Choose a Server</option>\r\n                {_map(servers, (server, key) => (\r\n                  <option key={key} value={server}>{server}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control name=\"name\" type=\"text\" onChange={this.handleSetField.bind(this)} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" disabled={!name || !server}>\r\n              Search\r\n            </Button>\r\n            <hr />\r\n            {!!loading && (\r\n              <div className=\"fullWidth text-center\">\r\n                <Spinner animation=\"grow\" variant=\"danger\" />\r\n                <Spinner animation=\"grow\" variant=\"warning\" />\r\n                <Spinner animation=\"grow\" variant=\"success\" />\r\n              </div>\r\n            )}\r\n            {!loading && !results.length && (\r\n              <div>\r\n                No results available.\r\n              </div>\r\n            )}\r\n            {!loading && !!results.length && (\r\n              <React.Fragment>\r\n                <div className=\"lodestoneResults\">\r\n                  {results.map((char, key) => {\r\n                    const { ID, Name, Avatar } = char\r\n                    return (\r\n                      <div\r\n                        key={key}\r\n                        className=\"flex justify-between items-center\"\r\n                      >\r\n                        <Form.Check\r\n                          id={ID}\r\n                          type=\"radio\"\r\n                          name=\"characterId\"\r\n                          value={ID}\r\n                          onChange={this.handleSetField.bind(this)}\r\n                        />\r\n                        <label htmlFor={ID}>{Name}</label>\r\n                        <label htmlFor={ID}>\r\n                          <img className=\"avatar\" src={Avatar} alt={Name} />\r\n                        </label>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n                <div className=\"flex justify-between items-center pt2\">\r\n                  <div className=\"w-50 tl\">\r\n                    {!!prevPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, prevPage)}>\r\n                        Prev Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"w-50 tr\">\r\n                    {nextPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, nextPage)}>\r\n                        Next Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"reset\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"primary\"\r\n              disabled={!characterId}\r\n              onClick={this.handleSubmitCharacterSelection.bind(this)}\r\n            >\r\n              Load Data\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired\r\n}\r\n\r\nLodestoneCharacterModal.defaultProps = {\r\n  show: false\r\n}\r\n\r\nexport default LodestoneCharacterModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { get } from 'lodash'\r\nimport { NavDropdown } from 'react-bootstrap'\r\nimport { clearLocalCharacterData, clearLocalClassData, getLodestoneCharacterData } from '../../store/local/actions'\r\nimport LodestoneCharacterModal from './LodestoneCharacterModal'\r\n\r\nconst getDropdownTitle = characterData => {\r\n  if (get(characterData, 'Character.Avatar')) {\r\n    const { Character: { Avatar, Name } } = characterData\r\n    return (\r\n      <span className=\"items-center\">\r\n        {Name}\r\n        <span className=\"ml2\"><img src={Avatar} alt={Name} className=\"avatar\" /></span>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return 'Options'\r\n}\r\n\r\nclass LodestoneCharacterMenu extends React.Component {\r\n  state = {\r\n    showModal: false\r\n  }\r\n\r\n  handleModalToggle (showModal) {\r\n    this.setState({\r\n      showModal: showModal\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      characterData,\r\n      clearLocalCharacterData,\r\n      clearLocalClassData,\r\n      getLodestoneCharacterData,\r\n      lodestoneResults,\r\n      searchLodestoneCharacterData\r\n    } = this.props\r\n\r\n    const importText = `Import ${!characterData ? '' : 'Different'} Character Data`.replace('  ', ' ')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavDropdown\r\n          alignRight\r\n          title={getDropdownTitle(characterData)}\r\n        >\r\n          {!!characterData && (\r\n            <React.Fragment>\r\n              <NavDropdown.Item onClick={getLodestoneCharacterData.bind(this, characterData.characterId)}>\r\n                Refresh Character Data\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n            </React.Fragment>\r\n          )}\r\n          <NavDropdown.Item onClick={this.handleModalToggle.bind(this, true)}>\r\n            {importText}\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={clearLocalClassData}>\r\n            Clear Crafting Class Data\r\n          </NavDropdown.Item>\r\n          {!!characterData && (\r\n            <NavDropdown.Item onClick={clearLocalCharacterData}>\r\n              Clear Character Data\r\n            </NavDropdown.Item>\r\n          )}\r\n        </NavDropdown>\r\n        <LodestoneCharacterModal\r\n          lodestoneResults={lodestoneResults}\r\n          onHide={this.handleModalToggle.bind(this, false)}\r\n          searchLodestoneCharacterData={searchLodestoneCharacterData}\r\n          show={this.state.showModal}\r\n          getLodestoneCharacterData={getLodestoneCharacterData}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterMenu.propTypes = {\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId)),\r\n  clearLocalCharacterData: () => dispatch(clearLocalCharacterData()),\r\n  clearLocalClassData: () => dispatch(clearLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LodestoneCharacterMenu)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Nav, Navbar, NavbarBrand } from 'react-bootstrap'\r\nimport LodestoneCharacterMenu from './LodestoneCharacterMenu'\r\n\r\nexport default class Navigation extends React.Component {\r\n  render () {\r\n    const { characterData } = this.props\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <NavbarBrand>\r\n          FFXIV Crafting & Gathering Helper\r\n        </NavbarBrand>\r\n        <Nav className=\"mr-auto\" />\r\n        <Nav>\r\n          <LodestoneCharacterMenu\r\n            characterData={characterData}\r\n          />\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  characterData: PropTypes.shape(),\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, ButtonGroup, Form, FormControl, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { filter, forEach, includes, isEqual } from 'lodash'\r\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class RecipeSearchForm extends React.Component {\r\n  state = {\r\n    craftingClassSelections: <ButtonGroup />\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.updateCraftingClassSelections()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const { recipeSearchClasses } = this.props\r\n    if (!isEqual(recipeSearchClasses, prevProps.recipeSearchClasses)) {\r\n      this.updateCraftingClassSelections()\r\n    }\r\n  }\r\n\r\n  updateCraftingClassSelections () {\r\n    const { recipeSearchClasses, handleToggleRecipeSearchClass } = this.props\r\n\r\n    const buttons = []\r\n\r\n    forEach(filter(CRAFTING_CLASSES, cc => cc.type === 'crafting'), cc => {\r\n      buttons.push((\r\n        <OverlayTrigger\r\n          key={`overlayTrigger-${cc.abbreviation}`}\r\n          overlay={\r\n            <Tooltip id={`tooltip-${cc.abbreviation}`}>\r\n              {cc.name}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <Button\r\n            className=\"craftingClassSelections\"\r\n            key={cc.abbreviation}\r\n            value={cc.abbreviation}\r\n            variant={includes(recipeSearchClasses, cc.abbreviation) ? 'primary' : 'light'}\r\n          >\r\n            <img\r\n              src={getIconUrl(cc.icon)}\r\n              alt={cc.name}\r\n              onClick={handleToggleRecipeSearchClass.bind(this, cc.abbreviation)}\r\n            />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      ))\r\n    })\r\n\r\n    const craftingClassSelections = (\r\n      <ButtonGroup>\r\n        {buttons}\r\n      </ButtonGroup>\r\n    )\r\n\r\n    this.setState({\r\n      craftingClassSelections\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      handleChange,\r\n      handleReset,\r\n      handleSubmit,\r\n      handleToggleRecipeIncludeMaster,\r\n      handleToggleRecipeSearchExact,\r\n      recipeSearchExact,\r\n      recipeSearchIncludeMaster,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchString\r\n    } = this.props\r\n\r\n    const { craftingClassSelections } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Form onReset={handleReset} onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Enter Your Search Term(s)</Form.Label>\r\n            <Form.Control\r\n              as=\"input\"\r\n              name=\"recipeSearchString\"\r\n              value={recipeSearchString}\r\n              onChange={handleChange}\r\n              isInvalid={!!recipeSearchIsInvalid}\r\n            />\r\n            <FormControl.Feedback type=\"invalid\">\r\n              Please enter a search term.\r\n            </FormControl.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              Choose Crafting Classes to Search\r\n              <br />\r\n              <small>(if none are selected, all will be searched)</small>\r\n            </Form.Label>\r\n            <br />\r\n            {craftingClassSelections}\r\n          </Form.Group>\r\n          <div className=\"flex flex-row\">\r\n            <Form.Check onChange={handleToggleRecipeIncludeMaster} checked={recipeSearchIncludeMaster} />\r\n            <Form.Label>Include Master Recipes</Form.Label>\r\n          </div>\r\n          {false && (\r\n            <div className=\"flex flex-row\">\r\n              <Form.Check onChange={handleToggleRecipeSearchExact} checked={recipeSearchExact} />\r\n              <Form.Label>Search Exact Phrase</Form.Label>\r\n            </div>\r\n          )}\r\n          <Button type=\"reset\" variant=\"danger\" className=\"mr1\">Clear</Button>\r\n          <Button type=\"submit\" variant=\"primary\" className=\"ml1\">Go!</Button>\r\n        </Form>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleToggleRecipeIncludeMaster: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchClass: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchExact: PropTypes.func.isRequired,\r\n  recipeSearchClasses: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  recipeSearchExact: PropTypes.bool.isRequired,\r\n  recipeSearchIncludeMaster: PropTypes.bool.isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchString: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { isEqual } from 'lodash'\r\nimport { Button, ButtonGroup } from 'react-bootstrap'\r\n\r\nexport default class Pagination extends React.Component {\r\n  state = {}\r\n\r\n  paginate () {\r\n    const { currentPage, handlePageChange, totalPages } = this.props\r\n    const minPage = Math.max(1, Math.min(currentPage - 3, totalPages - 6))\r\n    const maxPage = Math.min(totalPages, minPage + 6)\r\n\r\n    const options = []\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"first\"\r\n          value={1}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === 1}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &lt;&lt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 1) {\r\n      options.push((\r\n        <Button\r\n          key=\"prev\"\r\n          value={Math.max(currentPage - 1, 1)}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === 1}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &lt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"prevGroup\"\r\n          value={Math.max(1, currentPage - 7)}\r\n          onClick={handlePageChange}\r\n          disabled={minPage === 1}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          ...\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    for (let i = minPage; i <= maxPage; i++) {\r\n      const activePage = i === currentPage\r\n      const option = (\r\n        <Button\r\n          key={i}\r\n          value={i}\r\n          onClick={handlePageChange}\r\n          variant={activePage ? 'primary' : 'light'}\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          {i}\r\n        </Button>\r\n      )\r\n\r\n      options.push(option)\r\n    }\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"nextGroup\"\r\n          value={Math.min(totalPages, currentPage + 7)}\r\n          onClick={handlePageChange}\r\n          disabled={maxPage === totalPages}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          ...\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 1) {\r\n      options.push((\r\n        <Button\r\n          key=\"next\"\r\n          value={Math.min(currentPage + 1, totalPages)}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === totalPages}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &gt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"last\"\r\n          value={totalPages}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === totalPages}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &gt;&gt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    this.setState({\r\n      options\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.paginate()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    if (!isEqual(this.props, prevProps)) {\r\n      this.paginate()\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { options } = this.state\r\n    return (\r\n      <div>\r\n        <ButtonGroup>\r\n          {options}\r\n        </ButtonGroup>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  totalPages: PropTypes.number.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { find, get } from 'lodash'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare, faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\nimport Pagination from '../common/Pagination'\r\n\r\nexport default class RecipeSearchResult extends React.Component {\r\n  render () {\r\n    const {\r\n      clearRecipeSearch,\r\n      handlePageChange,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      myList,\r\n      pagination,\r\n      recipeList\r\n    } = this.props\r\n\r\n    if (!recipeList.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const pageTotal = get(pagination, 'PageTotal')\r\n    const pageCurrent = get(pagination, 'Page')\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <td colSpan={5} className=\"tc\">\r\n            <Pagination currentPage={pageCurrent} totalPages={pageTotal} handlePageChange={handlePageChange} />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Add/Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {recipeList.map((r, key) => {\r\n          const iconUrl = getIconUrl(get(r, 'Icon', ''))\r\n          const name = get(r, 'Name')\r\n          const craftingClassName = get(r, 'ClassJob.NameEnglish')\r\n          const level = get(r, 'RecipeLevelTable.ClassJobLevel')\r\n          const isOnList = !!find(myList, item => get(item, 'ID') === get(r, 'ID'))\r\n\r\n          return (\r\n            <tr key={key}>\r\n              <td><img src={iconUrl} alt={name} /></td>\r\n              <td>{craftingClassName}</td>\r\n              <td>{name}</td>\r\n              <td>{level}</td>\r\n              <td>\r\n                <Button onClick={handleToggleListItem.bind(this, r)} variant={isOnList ? 'danger' : 'success'}>\r\n                  <FontAwesomeIcon\r\n                    icon={isOnList ? faMinusSquare : faPlusSquare}\r\n                  />\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n        <tfoot>\r\n        <tr>\r\n          <td colSpan={5} className=\"tc\">\r\n            <Pagination currentPage={pageCurrent} totalPages={pageTotal} handlePageChange={handlePageChange} />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td colSpan={5}>\r\n            <div className=\"w-100 dib tc\">\r\n              <Button className=\"mh1\" onClick={clearRecipeSearch.bind(this)} variant=\"danger\">\r\n                Clear Recipe Search\r\n              </Button>\r\n              <Button className=\"mh1\" onClick={handleTabChange.bind(this, 'recipe-list')}>\r\n                Go to Recipe List\r\n              </Button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        </tfoot>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchResult.propTypes = {\r\n  clearRecipeSearch: PropTypes.func.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  pagination: PropTypes.shape().isRequired,\r\n  recipeList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  ready: PropTypes.bool.isRequired\r\n}\r\n\r\nRecipeSearchResult.defaultProps = {\r\n  myList: [],\r\n  pagination: {},\r\n  recipeList: [],\r\n  ready: true\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { get } from 'lodash'\r\nimport RecipeSearchForm from './RecipeSearchForm'\r\nimport RecipeSearchResult from './RecipeSearchResult'\r\n\r\nexport default class RecipeSearch extends React.Component {\r\n  render () {\r\n    const {\r\n      clearRecipeSearch,\r\n      handleChange,\r\n      handlePageChange,\r\n      handleReset,\r\n      handleSubmit,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      handleToggleRecipeIncludeMaster,\r\n      handleToggleRecipeSearchClass,\r\n      handleToggleRecipeSearchExact,\r\n      myList,\r\n      recipeSearchClasses,\r\n      recipeSearchExact,\r\n      recipeSearchIncludeMaster,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchResults,\r\n      recipeSearchString\r\n    } = this.props\r\n\r\n    const pagination = get(recipeSearchResults, 'Pagination')\r\n    const recipeList = get(recipeSearchResults, 'Results')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <RecipeSearchForm\r\n          handleChange={handleChange}\r\n          handleReset={handleReset}\r\n          handleSubmit={handleSubmit}\r\n          handleToggleRecipeIncludeMaster={handleToggleRecipeIncludeMaster}\r\n          handleToggleRecipeSearchClass={handleToggleRecipeSearchClass}\r\n          handleToggleRecipeSearchExact={handleToggleRecipeSearchExact}\r\n          recipeSearchClasses={recipeSearchClasses}\r\n          recipeSearchExact={recipeSearchExact}\r\n          recipeSearchIncludeMaster={recipeSearchIncludeMaster}\r\n          recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n          recipeSearchString={recipeSearchString}\r\n        />\r\n        <hr />\r\n        <RecipeSearchResult\r\n          clearRecipeSearch={clearRecipeSearch}\r\n          handlePageChange={handlePageChange}\r\n          handleTabChange={handleTabChange}\r\n          handleToggleListItem={handleToggleListItem}\r\n          myList={myList}\r\n          pagination={pagination}\r\n          recipeList={recipeList}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearch.propTypes = {\r\n  clearRecipeSearch: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  handleToggleRecipeIncludeMaster: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchClass: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchExact: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  recipeSearchClasses: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  recipeSearchExact: PropTypes.bool.isRequired,\r\n  recipeSearchIncludeMaster: PropTypes.bool.isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchResults: PropTypes.shape(),\r\n  recipeSearchString: PropTypes.string.isRequired\r\n}\r\n\r\nRecipeSearch.defaultProps = {\r\n  myList: [],\r\n  recipeSearchExact: false,\r\n  recipeSearchIncludeMaster: false,\r\n  recipeSearchResults: {}\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { isEqual, set, toNumber } from 'lodash'\r\nimport { Button, Form, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class MyList extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      mapping: this.createItemQuantityMapping()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const { list } = this.props\r\n    if (!isEqual(list, prevProps.list)) {\r\n      const mapping = this.createItemQuantityMapping()\r\n      this.setState({\r\n        mapping\r\n      })\r\n    }\r\n  }\r\n\r\n  createItemQuantityMapping () {\r\n    const { list } = this.props\r\n    const mapping = {}\r\n\r\n    list.forEach(l => {\r\n      mapping[l.ID] = l.quantity\r\n    })\r\n\r\n    return mapping\r\n  }\r\n\r\n  handleItemQuantityUpdate (i, event) {\r\n    const { mapping } = this.state\r\n    set(mapping, i.ID, event.target.value)\r\n    this.setState({\r\n      mapping\r\n    })\r\n  }\r\n\r\n  handleQuantityFieldBlur (item) {\r\n    const { handleUpdateQuantity } = this.props\r\n    const { mapping } = this.state\r\n\r\n    const quantity = toNumber(mapping[item.ID]) || 1\r\n\r\n    handleUpdateQuantity(item, quantity)\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      handleClearList,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      list\r\n    } = this.props\r\n\r\n    const { mapping } = this.state\r\n\r\n    if (!list.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Items in List\r\n          <hr />\r\n          <Button onClick={handleTabChange.bind(this, 'search')}>\r\n            Back to Search\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Quantity</th>\r\n          <th>Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {list.map((i) => {\r\n          return (\r\n            <tr key={i.ID}>\r\n              <td><img src={getIconUrl(i.Icon)} alt={i.Name} /></td>\r\n              <td>{i.ClassJob.NameEnglish}</td>\r\n              <td>{i.Name}</td>\r\n              <td>{i.RecipeLevelTable.ClassJobLevel}</td>\r\n              <td>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={mapping[i.ID] || 1}\r\n                  onChange={this.handleItemQuantityUpdate.bind(this, i)}\r\n                  onBlur={this.handleQuantityFieldBlur.bind(this, i)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Button variant=\"danger\" onClick={handleToggleListItem.bind(this, i)}>\r\n                  <FontAwesomeIcon icon={faMinusSquare} />\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n        {list.length && (\r\n          <tfoot>\r\n          <tr>\r\n            <td colSpan={6} className=\"tc\">\r\n              <div className=\"space-between\">\r\n                <Button variant=\"danger\" onClick={handleClearList}>\r\n                  Clear Recipe List\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleTabChange.bind(this, 'shopping-list')}>\r\n                  View My Shopping List\r\n                </Button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </tfoot>\r\n        )}\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nMyList.propTypes = {\r\n  handleClearList: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  handleUpdateQuantity: PropTypes.func.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.shape({\r\n    ClassJob: PropTypes.shape({\r\n      Abbreviation_en: PropTypes.string.isRequired,\r\n      NameEnglish: PropTypes.string.isRequired\r\n    }),\r\n    Icon: PropTypes.string.isRequired,\r\n    Name: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number,\r\n    RecipeLevelTable: PropTypes.shape({\r\n      ClassJobLevel: PropTypes.number.isRequired\r\n    }).isRequired\r\n  })).isRequired\r\n}\r\n\r\nMyList.defaultProps = {\r\n  list: []\r\n}\r\n","const RECIPE_SEARCH = 'RECIPE_SEARCH'\r\nconst RECIPE_LIST = 'RECIPE_LIST'\r\nconst SHOPPING_LIST = 'SHOPPING_LIST'\r\n\r\nexport const RECIPE_SEARCH_REQUEST = `${RECIPE_SEARCH}_SEARCH`\r\nexport const RECIPE_SEARCH_SUCCESS = `${RECIPE_SEARCH}_SUCCESS`\r\nexport const RECIPE_SEARCH_FAILURE = `${RECIPE_SEARCH}_FAILURE`\r\nexport const RECIPE_SEARCH_CLEAR = `${RECIPE_SEARCH}_CLEAR`\r\n\r\n// export const RECIPE_LIST_ADD = `${RECIPE_LIST}_ADD`\r\n// export const RECIPE_LIST_REMOVE = `${RECIPE_LIST}_REMOVE`\r\nexport const RECIPE_LIST_CLEAR = `${RECIPE_LIST}_CLEAR`\r\nexport const RECIPE_LIST_SAVE = `${RECIPE_LIST}_SAVE`\r\n\r\nexport const SHOPPING_LIST_CREATE = `${SHOPPING_LIST}_CREATE`\r\nexport const SHOPPING_LIST_CLEAR = `${SHOPPING_LIST}_CLEAR`\r\nexport const SHOPPING_LIST_ERROR = `${SHOPPING_LIST}_ERROR`\r\n","import { concat, filter, find, forEach, get, includes, map, set, toLower, uniqBy, orderBy } from 'lodash'\r\nimport ITEM_TO_GATHERING_ITEM_MAPPING from '../data/item-to-gathering-item-mapping'\r\nimport GATHERING_ITEM_POINTS from '../data/gathering-item-points'\r\nimport FISHING_SPOTS from '../data/fishing-spots'\r\nimport * as XivApiService from './xivApi'\r\n\r\n/**\r\n * Gets a list of ingredients required to craft a given set of recipes.\r\n *\r\n * @param recipeList\r\n * @returns {Promise<*>}\r\n */\r\nexport const getIngredientListForRecipes = async recipeList => {\r\n  if (!recipeList || !recipeList.length) return {}\r\n\r\n  // we will want to keep the following lists:\r\n  // 1. Ingredients that can be gathered\r\n  const ingredientsGatherable = []\r\n\r\n  // 2. Ingredients that can be crafted\r\n  const ingredientsCrafted = []\r\n\r\n  // 3. Ingredients that can be obtained from monsters\r\n  const ingredientsOther = []\r\n\r\n  // 3. Ingredients that can be bought (that cannot be gathered or dropped by monsters)\r\n  const ingredientsPurchased = []\r\n\r\n  await getAndSortRecipeResults(recipeList,\r\n    ingredientsGatherable,\r\n    ingredientsCrafted,\r\n    ingredientsPurchased,\r\n    ingredientsOther\r\n  )\r\n\r\n  // get item IDs for the gatherable and purchasable things so we can get their info\r\n  const itemIds = map(concat(ingredientsGatherable, ingredientsOther), item => get(item, 'itemId'))\r\n  const itemData = await XivApiService.getItemsById(itemIds)\r\n\r\n  forEach(get(itemData, 'Results', []), item => {\r\n    const foundItem = find(ingredientsGatherable, ig => get(ig, 'itemId') === get(item, 'ID')) ||\r\n      find(ingredientsOther, io => get(io, 'itemId') === get(item, 'ID'))\r\n    set(foundItem, 'name', get(item, 'Name'))\r\n    set(foundItem, 'icon', XivApiService.getIconUrl(get(item, 'Icon')))\r\n    // set(foundItem, 'gameContentLinks', get(item, 'GameContentLinks', {}))\r\n    set(foundItem, 'gameContentLinks',\r\n      filter(\r\n        map(\r\n          get(item, 'GameContentLinks', {}), (value, key) => ({ key, value })\r\n        ), result => {\r\n          const val = toLower(result.key)\r\n          return includes(val, 'shop') && !includes(val, 'special')\r\n        }\r\n      )\r\n    )\r\n\r\n    if (!!get(foundItem, 'gameContentLinks.length')) {\r\n      ingredientsPurchased.push(foundItem)\r\n    }\r\n  })\r\n\r\n  // add gathering item data\r\n  addGatheringItemData(ingredientsGatherable)\r\n\r\n  // sort the results\r\n  return {\r\n    ingredientsCrafted: orderBy(uniqBy(ingredientsCrafted, ic => get(ic, 'ID')), 'Name'),\r\n    ingredientsGatherable: orderBy(ingredientsGatherable, 'name'),\r\n    ingredientsPurchased: orderBy(ingredientsPurchased, 'name'),\r\n    ingredientsOther: orderBy(ingredientsOther, 'name')\r\n  }\r\n}\r\n\r\nconst addGatheringItemData = ingredientsGatherable => {\r\n  forEach(ingredientsGatherable, item => {\r\n    const gatheringItemId = get(item, 'gatheringItemId')\r\n\r\n    if (!!gatheringItemId) {\r\n      const filteredGatheringPoints = filter(\r\n        GATHERING_ITEM_POINTS, point => get(point, 'ID', '').startsWith(`${gatheringItemId}.`)\r\n      )\r\n\r\n      const namePath = 'GatheringPoint.PlaceName.Name_en'\r\n      const areaPath = 'GatheringPoint.TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'GatheringPoint.TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringPoint.GatheringPointBase.GatheringLevel'\r\n      const typePath = 'GatheringPoint.GatheringPointBase.GatheringType.Name_en'\r\n      const aetherytePath = 'GatheringPoint.TerritoryType.AetheryteTargetID'\r\n\r\n      const pointData = map(filteredGatheringPoints, point => getPointData(\r\n        point,\r\n        namePath,\r\n        areaPath,\r\n        regionPath,\r\n        levelPath,\r\n        typePath,\r\n        aetherytePath\r\n      ))\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    } else {\r\n      const itemId = get(item, 'itemId')\r\n      const filteredFishingSpots = filter(FISHING_SPOTS, spot => {\r\n        for (let i = 0; i < 10; i++) {\r\n          const path = `Item${i}TargetID`\r\n          const fishId = get(spot, path)\r\n          if (fishId === itemId) return true\r\n        }\r\n      })\r\n\r\n      const namePath = 'PlaceName.Name_en'\r\n      const areaPath = 'TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringLevel'\r\n\r\n      const pointData = map(filteredFishingSpots, point => {\r\n        const pd = getPointData(\r\n          point,\r\n          namePath,\r\n          areaPath,\r\n          regionPath,\r\n          levelPath,\r\n          ''\r\n        )\r\n        set(pd, 'type', 'Fishing')\r\n        set(pd, 'gatheringClass', 'Fisherman')\r\n        return pd\r\n      })\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    }\r\n  })\r\n}\r\n\r\nconst getPointData = (data, namePath, areaPath, regionPath, levelPath, typePath) => {\r\n  const typeMap = {\r\n    'Mining': 'Miner',\r\n    'Quarrying': 'Miner',\r\n    'Logging': 'Botanist',\r\n    'Harvesting': 'Botanist'\r\n  }\r\n  const name = get(data, namePath)\r\n  const area = get(data, areaPath)\r\n  const region = get(data, regionPath)\r\n  const level = get(data, levelPath)\r\n  const type = get(data, typePath)\r\n\r\n  return {\r\n    name,\r\n    area,\r\n    region,\r\n    level,\r\n    gatheringClass: get(typeMap, type),\r\n    type,\r\n    id: get(data, 'ID')\r\n  }\r\n}\r\n\r\nconst hasFishingSpotMatch = itemId => {\r\n  let matched = false\r\n  forEach(FISHING_SPOTS, spot => {\r\n    for (let i = 0; i < 10; i++) {\r\n      const path = `Item${i}TargetID`\r\n      const fishingId = get(spot, path)\r\n      if (itemId === fishingId) {\r\n        matched = true\r\n        return\r\n      }\r\n    }\r\n  })\r\n\r\n  return matched\r\n}\r\n\r\nconst getAndSortRecipeResults = async (\r\n  recipeList,\r\n  ingredientsGatherable,\r\n  ingredientsCrafted,\r\n  ingredientsPurchased,\r\n  ingredientsOther\r\n) => {\r\n  const recipeIds = map(recipeList, recipe => get(recipe, 'ID'))\r\n  const recipeResults = get(await XivApiService.getRecipesById(recipeIds), 'Results', [])\r\n  const nextRecipeResults = []\r\n  forEach(recipeResults, rr => {\r\n    const recipeListEntry = find(recipeList, rle => get(rle, 'ID') === get(rr, 'ID'))\r\n    set(rr, 'quantity', get(recipeListEntry, 'quantity'))\r\n\r\n    // go through each ingredient\r\n    for (let i = 0; i < 10; i++) {\r\n      const itemId = get(rr, `ItemIngredient${i}.ID`)\r\n      const itemCategory = get(rr, `ItemIngredient${i}.ItemSearchCategoryTargetID`)\r\n      const amount = get(rr, `AmountIngredient${i}`)\r\n      const gatheringMapNode = find(ITEM_TO_GATHERING_ITEM_MAPPING, mapping => get(mapping, 'ItemID') === itemId)\r\n      const gatheringItemId = get(gatheringMapNode, 'GatheringItemID')\r\n      const ingredientRecipe = get(rr, `ItemIngredientRecipe${i}[0]`)\r\n      const quantity = get(rr, 'quantity')\r\n      const fishingSpotMatch = hasFishingSpotMatch(itemId)\r\n\r\n      if (!!gatheringItemId || !!fishingSpotMatch) {\r\n        const existingIngredientGatherable = find(ingredientsGatherable, ig => get(ig, 'itemId') === itemId)\r\n        if (!!existingIngredientGatherable) {\r\n          const existingAmount = get(existingIngredientGatherable, 'amount')\r\n          set(existingIngredientGatherable, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsGatherable.push({ itemId, gatheringItemId, amount: amount * quantity, itemCategory })\r\n        }\r\n      }\r\n\r\n      if (!!ingredientRecipe) {\r\n        const existingIngredientCrafted = find(ingredientsCrafted, ir => get(ingredientRecipe, 'ID') === get(ir, 'ID'))\r\n        const existingAmount = get(existingIngredientCrafted, 'quantity', 0)\r\n        set(existingIngredientCrafted || ingredientRecipe, 'quantity', existingAmount + (quantity * amount))\r\n        if (!existingIngredientCrafted) {\r\n          nextRecipeResults.push(ingredientRecipe)\r\n          ingredientsCrafted.push(ingredientRecipe)\r\n        }\r\n      }\r\n\r\n      if (!gatheringItemId && !ingredientRecipe && !fishingSpotMatch && !!itemId) {\r\n        const existingIngredientOther = find(ingredientsOther, ip => get(ip, 'itemId') === itemId)\r\n        if (!!existingIngredientOther) {\r\n          const existingAmount = get(existingIngredientOther, 'amount')\r\n          set(existingIngredientOther, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsOther.push({ itemId, amount: amount * quantity })\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  if (!!nextRecipeResults.length) {\r\n    await getAndSortRecipeResults(nextRecipeResults,\r\n      ingredientsGatherable,\r\n      ingredientsCrafted,\r\n      ingredientsPurchased,\r\n      ingredientsOther\r\n    )\r\n  }\r\n}\r\n","import * as T from './types'\r\nimport * as LocalStorageService from '../../service/localStorage'\r\nimport * as RecipeListService from '../../service/recipe'\r\nimport * as XivApiService from '../../service/xivApi'\r\n\r\nconst recipeListClear = () => ({\r\n  type: T.RECIPE_LIST_CLEAR\r\n})\r\n\r\nconst recipeListSave = recipeList => ({\r\n  type: T.RECIPE_LIST_SAVE,\r\n  recipeList\r\n})\r\n\r\nconst shoppingListClear = () => ({\r\n  type: T.SHOPPING_LIST_CLEAR\r\n})\r\n\r\nconst shoppingListCreate = shoppingList => ({\r\n  type: T.SHOPPING_LIST_CREATE,\r\n  shoppingList\r\n})\r\n\r\nconst recipeSearchRequest = params => ({\r\n  type: T.RECIPE_SEARCH_REQUEST,\r\n  params\r\n})\r\n\r\nconst apiRequestSuccess = (type, payload) => ({\r\n  type,\r\n  payload\r\n})\r\n\r\nconst apiRequestFailure = (type, error) => ({\r\n  type, error\r\n})\r\n\r\nconst recipeSearchClear = () => ({\r\n  type: T.RECIPE_SEARCH_CLEAR\r\n})\r\n\r\nconst shoppingListFailure = error => ({\r\n  type: T.SHOPPING_LIST_ERROR,\r\n  error\r\n})\r\n\r\nexport const saveMyRecipeList = recipeList => dispatch => {\r\n  LocalStorageService.storeMyRecipeList(recipeList)\r\n  dispatch(recipeListSave(recipeList))\r\n  dispatch(createMyShoppingList(recipeList))\r\n}\r\n\r\nexport const clearMyRecipeList = () => dispatch => {\r\n  LocalStorageService.clearMyRecipeList()\r\n  dispatch(recipeListClear())\r\n  dispatch(clearMyShoppingList())\r\n}\r\n\r\nexport const createMyShoppingList = recipeList => async dispatch => {\r\n  try {\r\n    const result = await RecipeListService.getIngredientListForRecipes(recipeList)\r\n    LocalStorageService.storeMyShoppingList(result)\r\n    dispatch(shoppingListCreate(result))\r\n  } catch (err) {\r\n    dispatch(shoppingListFailure(err))\r\n  }\r\n}\r\n\r\nexport const clearMyShoppingList = () => dispatch => {\r\n  LocalStorageService.clearMyShoppingList()\r\n  dispatch(shoppingListClear())\r\n}\r\n\r\nexport const searchRecipes = (string, params) => async dispatch => {\r\n  dispatch(recipeSearchRequest({string, ...params}))\r\n  try {\r\n    const result = await XivApiService.recipeSearch(string, params)\r\n    dispatch(apiRequestSuccess(T.RECIPE_SEARCH_SUCCESS, result))\r\n  } catch (err) {\r\n    dispatch(apiRequestFailure(T.RECIPE_SEARCH_FAILURE, err))\r\n  }\r\n}\r\n\r\nexport const clearRecipeSearch = () => dispatch => {\r\n  dispatch(recipeSearchClear())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortableTableHeaderCell extends React.Component {\r\n  render () {\r\n    const { className, text, sortFunc, applySorting } = this.props\r\n    return (\r\n      <th className={className} onClick={applySorting.bind(this, sortFunc)}\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {text}\r\n        <FontAwesomeIcon\r\n          className=\"margin-left\"\r\n          icon={faSort}\r\n        />\r\n      </th>\r\n    )\r\n  }\r\n}\r\n\r\nSortableTableHeaderCell.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  sortFunc: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\r\n  applySorting: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SortableTableHeaderCell\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { get } from 'lodash'\r\nimport { Badge, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\nexport default class XivIcon extends React.Component {\r\n  render () {\r\n    const { badge, className, image, tooltip } = this.props\r\n\r\n    const htmlImage = (\r\n      <img src={image.url} alt={image.altText} />\r\n    )\r\n\r\n    const content = get(tooltip, 'text') ? (\r\n      <OverlayTrigger overlay={(\r\n        <Tooltip>\r\n          {get(tooltip, 'text')}\r\n        </Tooltip>\r\n      )}>\r\n        {htmlImage}\r\n      </OverlayTrigger>\r\n    ) : htmlImage\r\n\r\n    const htmlBadge = get(badge, 'text') ? (\r\n      <React.Fragment>\r\n        <br />\r\n        <Badge variant={get(badge, 'variant', 'primary')} className=\"xiv-icon-badge\">\r\n          {get(badge, 'text')}\r\n        </Badge>\r\n      </React.Fragment>\r\n    ) : null\r\n\r\n    return (\r\n      <div className={cx(className)}>\r\n        {content}\r\n        {htmlBadge}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nXivIcon.propTypes = {\r\n  badge: PropTypes.shape({\r\n    variant: PropTypes.oneOf(['primary', 'secondary', 'success', 'warning', 'danger', 'light', 'dark']),\r\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\r\n  }),\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n  image: PropTypes.shape({\r\n    altText: PropTypes.string.isRequired,\r\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n    url: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  tooltip: PropTypes.shape({\r\n    text: PropTypes.string.isRequired\r\n  })\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { Button, FormControl, Table } from 'react-bootstrap'\r\nimport { clone, filter, get, includes, isEqual, orderBy, pull } from 'lodash'\r\nimport { getIconUrl } from '../../service/xivApi'\r\nimport { clearObtainedItems, getObtainedItems, storeObtainedItems } from '../../service/localStorage'\r\nimport SortableTableHeaderCell from '../common/SortableTableHeaderCell'\r\nimport XivIcon from '../common/XivIcon'\r\n\r\n/**\r\n * Scrolls to a position on the screen.\r\n *\r\n * @param {number} x The X coordinate for scrolling.\r\n * @param {number} y The Y coodrinate for scrolling.\r\n */\r\nfunction scrollToPosition (x, y) {\r\n  window.scrollTo(x, y)\r\n}\r\n\r\n/**\r\n * The number of columns in a row.  This allows the subheadings to take up the full width of the table.\r\n * @type {number}\r\n */\r\nconst headingColumns = 7\r\n\r\nexport default class ShoppingList extends React.Component {\r\n\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      ingredientsGatherableSort: {\r\n        func: 'name',\r\n        direction: 'asc'\r\n      },\r\n      itemsOwned: getObtainedItems()\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.updateGatherableIngredients()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const { shoppingList } = this.props\r\n\r\n    if (!isEqual(shoppingList, prevProps.shoppingList)) {\r\n      this.updateGatherableIngredients()\r\n    }\r\n  }\r\n\r\n  updateGatherableIngredients () {\r\n    const { shoppingList } = this.props\r\n    const {\r\n      // ingredientsCrafted,\r\n      // ingredientsPurchased,\r\n      ingredientsGatherable\r\n      // ingredientsOther\r\n    } = shoppingList\r\n\r\n    const gatherableStateVars = {}\r\n    if (ingredientsGatherable) {\r\n      ingredientsGatherable.forEach(item => {\r\n        const key = `gatherable-${item.itemId}-location`\r\n        gatherableStateVars[key] = get(item, 'pointData[0]', {})\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      ...gatherableStateVars,\r\n      ingredientsGatherable: filter(ingredientsGatherable, ig => get(ig, 'itemCategory') !== 58),\r\n      ingredientsCrystals: filter(ingredientsGatherable, ig => get(ig, 'itemCategory') === 58)\r\n    })\r\n  }\r\n\r\n  handleLocationUpdate (event) {\r\n    event.preventDefault()\r\n\r\n    const { target: { value, id } } = event\r\n\r\n    this.setState({\r\n      [id]: JSON.parse(value)\r\n    })\r\n  }\r\n\r\n  handleApplyIngredientsGatherableSort (sortFunc) {\r\n    const { ingredientsGatherableSort } = this.state\r\n\r\n    const sortDirection =\r\n      // isEqual(JSON.stringify(sortFunc), JSON.stringify(ingredientsGatherableSort.func)) && ingredientsGatherableSort.direction === 'asc'\r\n      isEqual(\r\n        JSON.stringify(sortFunc),\r\n        JSON.stringify(ingredientsGatherableSort.func)\r\n      ) && ingredientsGatherableSort.direction === 'asc'\r\n        ? 'desc'\r\n        : 'asc'\r\n\r\n    const newIngredientsGatherableSort = {\r\n      func: sortFunc,\r\n      direction: sortDirection\r\n    }\r\n\r\n    this.setState({\r\n      ingredientsGatherableSort: newIngredientsGatherableSort\r\n    })\r\n  }\r\n\r\n  handleToggleItemOwned (itemId) {\r\n    const { scrollX, scrollY } = window\r\n    const itemsOwned = clone(get(this.state, 'itemsOwned', []))\r\n\r\n    if (includes(itemsOwned, itemId)) {\r\n      pull(itemsOwned, itemId)\r\n    } else {\r\n      itemsOwned.push(itemId)\r\n    }\r\n\r\n    storeObtainedItems(itemsOwned)\r\n\r\n    this.setState({\r\n      itemsOwned\r\n    }, scrollToPosition.bind(this, scrollX, scrollY))\r\n  }\r\n\r\n  handleOwnershipSort (item) {\r\n    const itemId = get(item, 'itemId', get(item, 'ItemResult.ID'))\r\n    return includes(get(this.state, 'itemsOwned', []), itemId)\r\n    // return !!itemId\r\n  }\r\n\r\n  handleClearOwnershipInfo () {\r\n    clearObtainedItems()\r\n    this.setState({\r\n      itemsOwned: []\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { shoppingList: { ingredientsCrafted, ingredientsPurchased, ingredientsOther } } = this.props\r\n    const { ingredientsCrystals, ingredientsGatherable, ingredientsGatherableSort } = this.state\r\n\r\n    if (!get(ingredientsGatherable, 'length') && !ingredientsCrafted && !ingredientsPurchased) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"flex flex-row justify-center items-center\">\r\n          {!!ingredientsCrystals && (\r\n            ingredientsCrystals.map(ic => {\r\n              const { amount, name, icon } = ic\r\n              return (\r\n                <span key={name} className=\"ph1\">\r\n                  <XivIcon\r\n                    badge={{ text: amount }}\r\n                    image={{ url: icon, altText: name }}\r\n                    tooltip={{ text: name }}\r\n                  />\r\n                </span>\r\n              )\r\n            })\r\n          )}\r\n        </div>\r\n        <Table hover striped className=\"shopping-list\">\r\n          {!!ingredientsGatherable && !!ingredientsGatherable.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Gatherable Items</th>\r\n              </tr>\r\n              <tr>\r\n                <th />\r\n                <SortableTableHeaderCell\r\n                  text=\"Name\"\r\n                  sortFunc=\"name\"\r\n                  applySorting={this.handleApplyIngredientsGatherableSort.bind(this)}\r\n                />\r\n                <th>Required Class</th>\r\n                <th>Required Level</th>\r\n                <th>Quantity</th>\r\n                <SortableTableHeaderCell\r\n                  text=\"Location\"\r\n                  sortFunc={ig => {\r\n                    const point = get(this.state, `gatherable-${ig.itemId}-location`)\r\n                    return `${point.region} - ${point.area} - ${point.name}`\r\n                  }}\r\n                  applySorting={this.handleApplyIngredientsGatherableSort.bind(this)}\r\n                />\r\n                <th>Obtained</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {orderBy(\r\n                ingredientsGatherable,\r\n                [this.handleOwnershipSort.bind(this), ingredientsGatherableSort.func],\r\n                ['asc', ingredientsGatherableSort.direction]\r\n              ).map(item => {\r\n                const { name, icon, itemId, amount, pointData } = item\r\n                const key = `gatherable-${itemId}`\r\n                const locationSelectId = `${key}-location`\r\n                const gatheringClass = get(this.state, `${locationSelectId}.gatheringClass`)\r\n                const gatheringType = get(this.state, `${locationSelectId}.type`)\r\n                const level = get(this.state, `${locationSelectId}.level`)\r\n                const owned = includes(get(this.state, 'itemsOwned', []), itemId)\r\n\r\n                return (\r\n                  <tr key={key} className={cx(owned ? 'owned' : '')}>\r\n                    <td><XivIcon image={{ url: icon, altText: name }} /></td>\r\n                    <td>{name}</td>\r\n                    <td>{gatheringClass}{!!gatheringType && ` (${gatheringType})`}</td>\r\n                    <td>{level}</td>\r\n                    <td>{amount}</td>\r\n                    <td>\r\n                      {pointData.length === 1 && (\r\n                        <React.Fragment>\r\n                          {pointData[0].region} - {pointData[0].area} {pointData[0].name ? `- ${pointData[0].name}` : '(Unspoiled)'}\r\n                        </React.Fragment>\r\n                      )}\r\n                      {pointData.length > 1 && (\r\n                        <FormControl\r\n                          id={locationSelectId}\r\n                          as=\"select\"\r\n                          onChange={this.handleLocationUpdate.bind(this)}\r\n                        >\r\n                          {pointData.map((point, key) => (\r\n                            <option key={key} value={JSON.stringify(point)}>\r\n                              {point.region} - {point.area} {point.name ? `- ${point.name}` : '(Unspoiled)'} (Level {point.level}, {point.gatheringClass})\r\n                            </option>\r\n                          ))}\r\n                        </FormControl>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={itemId}\r\n                        checked={owned}\r\n                        onChange={this.handleToggleItemOwned.bind(this, itemId)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsOther && !!ingredientsOther.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Items Obtained Elsewhere</th>\r\n              </tr>\r\n              <tr>\r\n                <th />\r\n                <th>Name</th>\r\n                <th />\r\n                <th />\r\n                <th>Quantity</th>\r\n                <th>Location</th>\r\n                <th>Obtained</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {orderBy(\r\n                ingredientsOther,\r\n                this.handleOwnershipSort.bind(this),\r\n                'asc'\r\n              ).map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                const owned = includes(get(this.state, 'itemsOwned', []), itemId)\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`} className={cx(owned ? 'owned' : '')}>\r\n                    <td><XivIcon image={{ url: icon, altText: name }} /></td>\r\n                    <td>{name}</td>\r\n                    <td />\r\n                    <td />\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={itemId}\r\n                        checked={owned}\r\n                        onChange={this.handleToggleItemOwned.bind(this, itemId)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsPurchased && !!ingredientsPurchased.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Purchasable Items</th>\r\n              </tr>\r\n              <tr>\r\n                <th />\r\n                <th>Name</th>\r\n                <th>Currency</th>\r\n                <th>Cost</th>\r\n                <th>Quantity</th>\r\n                <th>Location</th>\r\n                <th>Obtained</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {orderBy(\r\n                ingredientsPurchased,\r\n                this.handleOwnershipSort.bind(this),\r\n                'asc'\r\n              ).map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                const owned = includes(get(this.state, 'itemsOwned', []), itemId)\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`} className={cx(owned ? 'owned' : '')}>\r\n                    <td><XivIcon image={{ url: icon, altText: name }} /></td>\r\n                    <td>{name}</td>\r\n                    <td>???</td>\r\n                    <td>???</td>\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={itemId}\r\n                        checked={owned}\r\n                        onChange={this.handleToggleItemOwned.bind(this, itemId)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsCrafted && !!ingredientsCrafted.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Prerequisite Crafts</th>\r\n              </tr>\r\n              <tr>\r\n                <th />\r\n                <th>Name</th>\r\n                <th>Required Class</th>\r\n                <th>Required Level</th>\r\n                <th>Quantity</th>\r\n                <th>Location</th>\r\n                <th />\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {orderBy(\r\n                ingredientsCrafted,\r\n                [this.handleOwnershipSort.bind(this), 'ItemResult.Name_en'],\r\n                ['asc', 'asc']\r\n              ).map(item => {\r\n                const name = get(item, 'ItemResult.Name_en')\r\n                const icon = get(item, 'ItemResult.Icon')\r\n                const id = get(item, 'ID')\r\n                const quantity = get(item, 'quantity')\r\n                const craftClass = get(item, 'ClassJob.NameEnglish')\r\n                const craftLevel = get(item, 'RecipeLevelTable.ClassJobLevel')\r\n                return (\r\n                  <tr key={`crafted-${id}`}>\r\n                    <td><XivIcon image={{ url: getIconUrl(icon), altText: name }} /></td>\r\n                    <td>{name}</td>\r\n                    <td>{craftClass}</td>\r\n                    <td>{craftLevel}</td>\r\n                    <td>{quantity}</td>\r\n                    <td>N/A</td>\r\n                    <td />\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          <tfoot>\r\n          <tr>\r\n            <td colSpan={7} className=\"tc pv1\">\r\n              <Button variant=\"warning\" onClick={this.handleClearOwnershipInfo.bind(this)}>\r\n                Clear Owned Items Info\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n          </tfoot>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  shoppingList: PropTypes.shape().isRequired\r\n}\r\n\r\nShoppingList.defaultProps = {\r\n  shoppingList: {}\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport { orderBy } from 'lodash'\r\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\r\n\r\nexport default class FilterDropdown extends React.Component {\r\n  render () {\r\n    const { label, applyFilterFunc } = this.props\r\n    return (\r\n      <DropdownButton title={`Showing ${label}`}>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => !!c)}>\r\n          All\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'crafting')}>\r\n          Crafting Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'gathering')}>\r\n          Gathering Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        {orderBy(CRAFTING_CLASSES, 'name').map((craftingClass, key) => (\r\n          <Dropdown.Item\r\n            key={key}\r\n            onClick={applyFilterFunc.bind(this, c => c.abbreviation === craftingClass.abbreviation)}\r\n          >\r\n            {craftingClass.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n    )\r\n  }\r\n}\r\n\r\nFilterDropdown.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  applyFilterFunc: PropTypes.func.isRequired\r\n}\r\n","export function calculateRemainingExp (currentExp, totalExp) {\r\n  return Math.max(totalExp - currentExp, 0)\r\n}\r\n\r\nexport function calculateRemainingItems (remainingExp, expPerItem) {\r\n  return Math.ceil(remainingExp / expPerItem)\r\n}\r\n\r\nexport function calculateProgressPercentage (currentExp, totalExp) {\r\n  return totalExp <= 0 ? 0 : Math.floor((currentExp / totalExp) * 100)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport SortableTableHeaderCell from '../common/SortableTableHeaderCell'\r\n\r\nconst tableHeaders = [\r\n  { name: 'Class', sortFunc: 'name' },\r\n  { name: 'Level', sortFunc: 'currentLevel' },\r\n  { name: 'Current Exp.', sortFunc: 'currentExperience' },\r\n  { name: 'Required Exp.', sortFunc: undefined },\r\n  { name: 'Remaining Exp.', sortFunc: c => calculateRemainingExp(c.currentExperience, c.totalExperience) },\r\n  { name: 'Exp. Per Item', sortFunc: 'experiencePerItem' },\r\n  {\r\n    name: 'Remaining Items',\r\n    sortFunc: c => calculateRemainingItems(\r\n      calculateRemainingExp(c.currentExperience, c.totalExperience), c.experiencePerItem\r\n    )\r\n  },\r\n  { name: 'Progress', sortFunc: c => calculateProgressPercentage(c.currentExperience, c.totalExperience) }\r\n]\r\n\r\nexport default class CalculationsTableHeader extends React.Component {\r\n  render () {\r\n    const { applySortFunc } = this.props\r\n    return (\r\n      <thead>\r\n      <tr>\r\n        {tableHeaders.map((h, key) => {\r\n          if (h.sortFunc) {\r\n            return (\r\n              <SortableTableHeaderCell\r\n                key={key}\r\n                text={h.name}\r\n                sortFunc={h.sortFunc}\r\n                applySorting={applySortFunc}\r\n              />\r\n            )\r\n          } else {\r\n            return (\r\n              <th key={key}>\r\n                {h.name}\r\n              </th>\r\n            )\r\n          }\r\n        })}\r\n      </tr>\r\n      </thead>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableHeader.propTypes = {\r\n  applySortFunc: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport Form from 'react-bootstrap/es/Form'\r\nimport { OverlayTrigger, Popover, ProgressBar } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\r\nimport { find, set, toNumber } from 'lodash'\r\nimport LEVELING_GUIDE_LINKS from '../../data/leveling-guide-links'\r\n\r\nclass CalculationsTableBody extends React.Component {\r\n  state = {\r\n    focusedRow: undefined\r\n  }\r\n\r\n  getLevelingGuidePageUrl (abbreviation, currentLevel) {\r\n    const classGuideData = find(LEVELING_GUIDE_LINKS, g => g.abbreviation === abbreviation)\r\n    const { levelingGuide } = classGuideData\r\n\r\n    const matchedPage = find(levelingGuide.pages, p => {\r\n      const { maxLevel, minLevel } = p\r\n\r\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\r\n        return true\r\n      }\r\n    })\r\n\r\n    return !!matchedPage ? `${levelingGuide.url}/${matchedPage.page}/` : levelingGuide.url\r\n  }\r\n\r\n  validateNumericFieldChange (abbreviation, event) {\r\n    const { target: { value, max, min } } = event\r\n    const { updateField } = this.props\r\n\r\n    if (!!min && toNumber(value) < min) {\r\n      set(event, 'target.value', min)\r\n    }\r\n\r\n    if (!!max && toNumber(value) > max) {\r\n      set(event, 'target.value', max)\r\n    }\r\n\r\n    updateField(abbreviation, event)\r\n  }\r\n\r\n  handleRowFocus (abbreviation, focused) {\r\n    this.setState({\r\n      focusedRow: focused ? abbreviation : undefined\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { craftingClasses } = this.props\r\n    return (\r\n      <tbody>\r\n      {craftingClasses.map(c => {\r\n        const remainingExperience = calculateRemainingExp(c.currentExperience, c.totalExperience)\r\n        const remainingItems = calculateRemainingItems(remainingExperience, c.experiencePerItem)\r\n        const progressPercentage = calculateProgressPercentage(c.currentExperience, c.totalExperience)\r\n\r\n        const popover = (\r\n          <Popover id={`links-${c.name}`}>\r\n            <a\r\n              href={this.getLevelingGuidePageUrl(c.abbreviation, c.currentLevel)}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Leveling Guide\r\n            </a>\r\n          </Popover>\r\n        )\r\n\r\n        return (\r\n          <tr\r\n            key={`calculationTableRow${c.abbreviation}`}\r\n            onFocus={this.handleRowFocus.bind(this, c.abbreviation, true)}\r\n            onBlur={this.handleRowFocus.bind(this, c.abbreviation, false)}\r\n            className={cx(this.state.focusedRow === c.abbreviation ? 'focused' : undefined)}\r\n          >\r\n            <td>\r\n              <div className=\"flex justify-between items-center\">\r\n                {c.name}\r\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\r\n                  <FontAwesomeIcon icon={faIcon} className=\"text-primary pointer\" />\r\n                </OverlayTrigger>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentLevel\"\r\n                type=\"number\"\r\n                value={c.currentLevel}\r\n                min=\"1\"\r\n                max=\"80\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentExperience\"\r\n                type=\"number\"\r\n                value={c.currentExperience}\r\n                min=\"0\"\r\n                max={c.totalExperience}\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{c.totalExperience}</td>\r\n            <td>{remainingExperience}</td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"experiencePerItem\"\r\n                type=\"number\"\r\n                value={c.experiencePerItem}\r\n                min=\"1\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{remainingItems}</td>\r\n            <td>\r\n              <ProgressBar\r\n                now={progressPercentage}\r\n                label={`${c.currentExperience} / ${c.totalExperience} (${progressPercentage}%)`}\r\n              />\r\n            </td>\r\n          </tr>\r\n        )\r\n      })}\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableBody.propTypes = {\r\n  craftingClasses: PropTypes.arrayOf(PropTypes.shape()).isRequired\r\n}\r\n\r\nexport default CalculationsTableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TIME_TO_WAIT = 15\r\n\r\nexport default class FirstTimeImport extends React.Component {\r\n  state = {}\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { show } = this.props\r\n    const { timer } = this.state\r\n\r\n    if (show !== prevProps.show) {\r\n      if (!timer && show) {\r\n        this.startTimer()\r\n      } else {\r\n        this.endTimer()\r\n      }\r\n    }\r\n  }\r\n\r\n  async executeTimer () {\r\n    const { getLodestoneCharacterData } = this.props\r\n    const { timeLeft = 0 } = this.state\r\n\r\n    if (!timeLeft) {\r\n      this.endTimer()\r\n      await getLodestoneCharacterData()\r\n      if (this.props.show) {\r\n        this.startTimer()\r\n      }\r\n    } else {\r\n      this.setState({\r\n        timeLeft: timeLeft - 1\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  startTimer () {\r\n    this.setState({\r\n      timeLeft: TIME_TO_WAIT,\r\n      timer: setInterval(this.executeTimer.bind(this), 1000)\r\n    })\r\n  }\r\n\r\n  endTimer () {\r\n    const { timer } = this.state\r\n    if (!!timer) {\r\n      this.setState({\r\n        timer: clearInterval(timer)\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { show } = this.props\r\n    const { timeLeft } = this.state\r\n\r\n    if (!show) {\r\n      return null\r\n    }\r\n\r\n    const timeLeftMessage = `Your data is currently being loaded.  Please wait ${timeLeft} `\r\n      + `second${timeLeft > 1 ? 's' : ''} while the import processes, after which your data will attempt to load `\r\n      + `automatically.  If you are experiencing continued difficulty, please try your import again.`\r\n    const doneMessage = `Checking your import for completeness, please wait...`\r\n\r\n    return (\r\n      <div className=\"w-100 pb3 tc alert alert-info\">\r\n        Thanks for importing! {timeLeft ? timeLeftMessage : doneMessage}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nFirstTimeImport.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  getLodestoneCharacterData: PropTypes.func.isRequired\r\n}\r\n\r\nFirstTimeImport.defaultProps = {\r\n  show: false\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Table } from 'react-bootstrap'\r\nimport { concat, filter, find, get, isEqual, orderBy, set, toNumber } from 'lodash'\r\nimport FilterDropdown from './FilterDropdown'\r\nimport CalculationsTableHeader from './CalculationsTableHeader'\r\nimport CalculationsTableBody from './CalculationsTableBody'\r\nimport EXP_PER_LEVEL from '../../data/exp-per-level'\r\nimport { saveLocalClassData, getLodestoneCharacterData } from '../../store/local/actions'\r\nimport FirstTimeImport from './FirstTimeImport'\r\n\r\nclass CraftingGatheringCalculator extends React.Component {\r\n  state = {\r\n    sort: {\r\n      func: 'name',\r\n      direction: 'asc'\r\n    },\r\n    filter: {\r\n      func: undefined,\r\n      label: 'All'\r\n    }\r\n  }\r\n\r\n  applySort (sortFunc) {\r\n    const { sort } = this.state\r\n    const sortDirection = isEqual(sortFunc, sort.func) && sort.direction === 'asc' ? 'desc' : 'asc'\r\n    this.setState({\r\n      sort: {\r\n        func: sortFunc,\r\n        direction: sortDirection\r\n      }\r\n    })\r\n  }\r\n\r\n  applyFilter (filterFunc, event) {\r\n    this.setState({\r\n      filter: {\r\n        func: filterFunc,\r\n        label: event.target.innerText\r\n      }\r\n    })\r\n  }\r\n\r\n  getSortedCraftingClassData (craftingClassData) {\r\n    const { sort } = this.state\r\n    return orderBy(craftingClassData, sort.func, sort.direction)\r\n  }\r\n\r\n  getFilteredCraftingClassData (craftingClassData) {\r\n    const { filter: { func } } = this.state\r\n    return filter(craftingClassData, func)\r\n  }\r\n\r\n  updateField (abbreviation, event) {\r\n    const { target: { value, name } } = event\r\n    const { craftingClassData, saveLocalClassData } = this.props\r\n\r\n    const targetCraftingClass = find(craftingClassData, c => c.abbreviation === abbreviation)\r\n    const otherCraftingClasses = filter(craftingClassData, c => c.abbreviation !== abbreviation)\r\n    set(targetCraftingClass, name, toNumber(value))\r\n\r\n    if (name === 'currentLevel') {\r\n      set(targetCraftingClass, 'totalExperience', EXP_PER_LEVEL[value])\r\n    }\r\n\r\n    const updatedCraftingClasses = orderBy(concat(otherCraftingClasses, targetCraftingClass), ['type', 'name'])\r\n\r\n    saveLocalClassData(updatedCraftingClasses)\r\n  }\r\n\r\n  render () {\r\n    const { craftingClassData, characterData, getLodestoneCharacterData } = this.props\r\n    const sortedAndFilteredCraftingClassData = this.getSortedCraftingClassData(\r\n      this.getFilteredCraftingClassData(craftingClassData)\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <FirstTimeImport\r\n          show={get(characterData, 'Character') === null}\r\n          getLodestoneCharacterData={getLodestoneCharacterData.bind(this, get(characterData, 'characterId'))}\r\n        />\r\n        <div className=\"w-100 pb3 tc\">\r\n          <FilterDropdown label={this.state.filter.label} applyFilterFunc={this.applyFilter.bind(this)} />\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <Table className=\"calculations\" striped hover>\r\n            <CalculationsTableHeader applySortFunc={this.applySort.bind(this)} />\r\n            <CalculationsTableBody\r\n              craftingClasses={sortedAndFilteredCraftingClassData}\r\n              updateField={this.updateField.bind(this)}\r\n            />\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCraftingGatheringCalculator.propTypes = {\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveLocalClassData: classData => dispatch(saveLocalClassData(classData)),\r\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CraftingGatheringCalculator)\r\n","import React from 'react'\r\nimport { Badge, Tab, Tabs } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { cloneDeep, find, get, includes, indexOf, omit, reject, sortBy, toNumber } from 'lodash'\r\nimport { getCurrentTab, storeCurrentTab } from '../service/localStorage'\r\nimport RecipeSearch from './recipes/RecipeSearch'\r\nimport MyList from './recipes/MyList'\r\nimport * as recipeActions from '../store/recipeList/actions'\r\nimport ShoppingList from './recipes/ShoppingList'\r\nimport CraftingGatheringCalculator from './calculator/CraftingGatheringCalculator'\r\n\r\nclass RecipeHelper extends React.Component {\r\n  state = {\r\n    recipeSearchClasses: [],\r\n    recipeSearchExact: false,\r\n    recipeSearchString: '',\r\n    recipeSearchIncludeMaster: false,\r\n    recipeSearchIsInvalid: false,\r\n    myList: [],\r\n    lastSearch: undefined\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n      key: getCurrentTab()\r\n    })\r\n  }\r\n\r\n  handleToggleRecipeSearchClass (event) {\r\n    const recipeSearchClasses = cloneDeep(get(this.state, 'recipeSearchClasses', []))\r\n    const abbreviation = get(event, 'target.value', event)\r\n\r\n    if (includes(recipeSearchClasses, abbreviation)) {\r\n      recipeSearchClasses.splice(recipeSearchClasses.indexOf(abbreviation), 1)\r\n    } else {\r\n      recipeSearchClasses.push(abbreviation)\r\n    }\r\n\r\n    this.setState({\r\n      recipeSearchClasses: sortBy(recipeSearchClasses, s => s.toLowerCase())\r\n    })\r\n  }\r\n\r\n  handleToggleRecipeSearchExact (event) {\r\n    const recipeSearchExact = get(event, 'target.checked', false)\r\n    this.setState({\r\n      recipeSearchExact\r\n    })\r\n  }\r\n\r\n  handleToggleRecipeIncludeMaster (event) {\r\n    const checked = get(event, 'target.checked')\r\n\r\n    this.setState({\r\n      recipeSearchIncludeMaster: checked\r\n    })\r\n  }\r\n\r\n  handleFieldUpdate (event) {\r\n    const { target: { name, value } } = event\r\n\r\n    let recipeSearchIsInvalid = false\r\n    if (!value) {\r\n      recipeSearchIsInvalid = true\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      recipeSearchIsInvalid\r\n    })\r\n  }\r\n\r\n  handleClearList () {\r\n    const { clearMyRecipeList } = this.props\r\n    clearMyRecipeList()\r\n    this.handleTabChange('search')\r\n  }\r\n\r\n  search (page = 1) {\r\n    const { searchRecipes } = this.props\r\n    const { recipeSearchClasses, recipeSearchExact, recipeSearchIncludeMaster, recipeSearchString } = this.state\r\n    const params = {\r\n      page,\r\n      abbreviation: recipeSearchClasses,\r\n      exact: recipeSearchExact,\r\n      includeMasterRecipes: recipeSearchIncludeMaster\r\n    }\r\n\r\n    searchRecipes(recipeSearchString, params)\r\n  }\r\n\r\n  handleUpdateQuantity (item, value) {\r\n    const newValue = Math.max(1, toNumber(value))\r\n\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    const myListItemIndex = indexOf(myRecipeList, item)\r\n    myRecipeList[myListItemIndex].quantity = newValue\r\n    saveMyRecipeList(myRecipeList)\r\n  }\r\n\r\n  handleSearch (event) {\r\n    event.preventDefault()\r\n    const page = get(event, 'target.value', 1)\r\n    const { recipeSearchString } = this.state\r\n    if (!recipeSearchString) {\r\n      document.getElementsByName('recipeSearchString')[0].focus()\r\n      this.setState({\r\n        recipeSearchIsInvalid: true\r\n      })\r\n      return\r\n    }\r\n\r\n    this.search(page)\r\n  }\r\n\r\n  handleClear () {\r\n    document.getElementsByName('recipeSearchString')[0].focus()\r\n    this.setState({\r\n      recipeSearchIsInvalid: false,\r\n      recipeSearchString: ''\r\n    })\r\n  }\r\n\r\n  handlePageChange (event) {\r\n    this.handleSearch(event)\r\n  }\r\n\r\n  handleTabChange (key) {\r\n    storeCurrentTab(key)\r\n    this.setState({ key })\r\n  }\r\n\r\n  toggleListItem (item) {\r\n    item = omit(item, 'quantity')\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    let myClonedList = cloneDeep(myRecipeList)\r\n    const foundItem = find(myRecipeList, i => get(i, 'ID') === get(item, 'ID'))\r\n\r\n    if (!!foundItem) {\r\n      myClonedList = reject(myRecipeList, item)\r\n    } else {\r\n      item.quantity = 1\r\n      myClonedList.push(item)\r\n    }\r\n\r\n    saveMyRecipeList(myClonedList)\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      recipeSearchExact,\r\n      recipeSearchClasses,\r\n      recipeSearchIncludeMaster,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchString\r\n    } = this.state\r\n\r\n    const {\r\n      characterData,\r\n      clearRecipeSearch,\r\n      craftingClassData,\r\n      myRecipeList,\r\n      myShoppingList,\r\n      recipeSearchResults\r\n    } = this.props\r\n\r\n    return (\r\n      <div className=\"recipe-list pt3\">\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleTabChange.bind(this)}\r\n        >\r\n          <Tab eventKey=\"calculator\" title=\"Calculations\">\r\n            <div className=\"recipe-tab\">\r\n              <CraftingGatheringCalculator characterData={characterData} craftingClassData={craftingClassData} />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"search\" title=\"Recipe Search\">\r\n            <div className=\"recipe-tab\">\r\n              <RecipeSearch\r\n                clearRecipeSearch={clearRecipeSearch.bind(this)}\r\n                handleChange={this.handleFieldUpdate.bind(this)}\r\n                handlePageChange={this.handlePageChange.bind(this)}\r\n                handleReset={this.handleClear.bind(this)}\r\n                handleSubmit={this.handleSearch.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleRecipeIncludeMaster={this.handleToggleRecipeIncludeMaster.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                handleToggleRecipeSearchClass={this.handleToggleRecipeSearchClass.bind(this)}\r\n                handleToggleRecipeSearchExact={this.handleToggleRecipeSearchExact.bind(this)}\r\n                myList={myRecipeList}\r\n                recipeSearchIncludeMaster={recipeSearchIncludeMaster}\r\n                recipeSearchClasses={recipeSearchClasses}\r\n                recipeSearchExact={recipeSearchExact}\r\n                recipeSearchResults={recipeSearchResults}\r\n                recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n                recipeSearchString={recipeSearchString}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"recipe-list\" title={`My Recipe List (${myRecipeList.length})`}>\r\n            <div className=\"recipe-tab\">\r\n              <MyList\r\n                list={myRecipeList}\r\n                handleClearList={this.handleClearList.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                handleUpdateQuantity={this.handleUpdateQuantity.bind(this)}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"shopping-list\" title={(\r\n            <span>\r\n              Shopping List <Badge variant=\"primary\">Beta</Badge>\r\n            </span>\r\n          )}>\r\n            <div className=\"recipe-tab\">\r\n              <ShoppingList\r\n                shoppingList={myShoppingList}\r\n              />\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  myRecipeList: get(state, 'recipeList.myRecipeList', []),\r\n  myShoppingList: get(state, 'recipeList.myShoppingList', {}),\r\n  recipeSearchResults: get(state, 'recipeList.recipeSearchResults', {})\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveMyRecipeList: recipeList => dispatch(recipeActions.saveMyRecipeList(recipeList)),\r\n  clearMyRecipeList: () => dispatch(recipeActions.clearMyRecipeList()),\r\n  createMyShoppingList: recipeList => dispatch(recipeActions.createMyShoppingList(recipeList)),\r\n  clearMyShoppingList: () => dispatch(recipeActions.clearMyShoppingList()),\r\n  searchRecipes: (string, params) => dispatch(recipeActions.searchRecipes(string, params)),\r\n  clearRecipeSearch: () => dispatch(recipeActions.clearRecipeSearch())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeHelper)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport default class LoadingOverlay extends React.Component {\r\n  render () {\r\n    const { show } = this.props\r\n\r\n    if (!show) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className=\"loading-overlay\">\r\n        <div>\r\n          <Spinner animation=\"border\" variant=\"light\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLoadingOverlay.propTypes = {\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nLoadingOverlay.defaultProps = {\r\n  show: false\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container, Toast } from 'react-bootstrap'\r\nimport { get, isEqual, set } from 'lodash'\r\nimport * as actions from '../store/local/actions'\r\nimport Navigation from './navigation/Navigation'\r\nimport RecipeHelper from './RecipeHelper'\r\nimport LoadingOverlay from './common/LoadingOverlay'\r\n\r\nconst externalLink = (url, text) => (\r\n  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    {text}\r\n  </a>\r\n)\r\n\r\nclass XivCraftingGatheringHelper extends React.Component {\r\n  state = {\r\n    toast: {\r\n      show: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.props.getLocalClassData()\r\n    this.props.getLocalCharacterData()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { toast } = this.props\r\n\r\n    if (!isEqual(toast, prevProps.toast) && get(toast, 'show')) {\r\n      this.setState({\r\n        toast\r\n      })\r\n    }\r\n  }\r\n\r\n  handleToastClose () {\r\n    const { toast } = this.state\r\n    toast.show = false\r\n    this.setState({\r\n      toast\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { characterData, craftingClassData, loading, toast } = this.props\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Navigation\r\n          characterData={characterData}\r\n          craftingClassData={craftingClassData}\r\n        />\r\n        <Container fluid>\r\n          <RecipeHelper characterData={characterData} craftingClassData={craftingClassData} />\r\n          <hr />\r\n          <div className=\"tc text-muted pb3\">\r\n            Created by {externalLink('https://na.finalfantasyxiv.com/lodestone/character/22858010/',\r\n            'Xythyt')} with the help of {externalLink('https://www.xivapi.com', 'XIVAPI')}.\r\n            <br />\r\n            Version {process.env.REACT_APP_VERSION}\r\n          </div>\r\n          <Toast\r\n            show={toast.show}\r\n            onClose={this.handleToastClose.bind(this)}\r\n            style={{\r\n              position: 'absolute',\r\n              top: '5em',\r\n              right: '1em',\r\n              zIndex: 99,\r\n              minWidth: '250px'\r\n            }}\r\n          >\r\n            <Toast.Header>\r\n              <strong className=\"mr-auto\">{toast.title}</strong>\r\n              <small>{toast.time}</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              {toast.message}\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Container>\r\n        <LoadingOverlay show={loading} />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const error = get(state, 'local.error') || get(state, 'recipeList.error')\r\n\r\n  const toast = {\r\n    show: false\r\n  }\r\n\r\n  if (error) {\r\n    set(toast, 'message', get(error, 'message', error))\r\n    set(toast, 'show', true)\r\n    set(toast, 'title', 'Error')\r\n    set(toast, 'time', new Date().toISOString())\r\n  }\r\n\r\n  return {\r\n    craftingClassData: get(state, 'local.classData'),\r\n    characterData: get(state, 'local.characterData'),\r\n    loading: (\r\n      Object.keys(get(state, 'local.loading', {})).length > 0 ||\r\n      Object.keys(get(state, 'recipeList.loading', {})).length > 0\r\n    ),\r\n    toast\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLocalCharacterData: () => dispatch(actions.getLocalCharacterData()),\r\n  getLocalClassData: () => dispatch(actions.getLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(XivCraftingGatheringHelper)\r\n","import { get, set, unset } from 'lodash'\r\nimport * as LocalStorage from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  classData: LocalStorage.getDefaultCraftingClasses(),\r\n  loading: {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  const { loading } = state\r\n  switch (action.type) {\r\n    case T.LODESTONE_CHARACTER_DATA_REQUEST:\r\n      set(loading, 'characterData', true)\r\n      return {\r\n        ...state,\r\n        loading\r\n      }\r\n    case T.LOCAL_CLASS_DATA_STORE:\r\n    case T.LOCAL_CLASS_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        classData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        characterData: undefined\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_STORE:\r\n    case T.LOCAL_CHARACTER_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CLASS_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        classData: LocalStorage.getDefaultCraftingClasses()\r\n      }\r\n    case T.LODESTONE_CHARACTER_DATA_SUCCESS:\r\n      unset(loading, 'characterData')\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'payload'),\r\n        loading\r\n      }\r\n    case T.API_REQUEST_FAILURE:\r\n      unset(loading, 'characterData')\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { set, unset } from 'lodash'\r\nimport * as LocalStorageService from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  loading: {},\r\n  myRecipeList: LocalStorageService.getMyRecipeList(),\r\n  myShoppingList: LocalStorageService.getMyShoppingList(),\r\n  recipeSearchResults: {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  const { loading } = state\r\n  unset(state, 'error')\r\n  switch (action.type) {\r\n    case T.SHOPPING_LIST_CREATE:\r\n      unset(loading, 'shoppingList')\r\n      return {\r\n        ...state,\r\n        myShoppingList: action.shoppingList,\r\n        loading\r\n      }\r\n    case T.SHOPPING_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myShoppingList: {}\r\n      }\r\n    case T.RECIPE_LIST_SAVE:\r\n      set(loading, 'shoppingList', true)\r\n      return {\r\n        ...state,\r\n        myRecipeList: action.recipeList,\r\n        loading\r\n      }\r\n    case T.RECIPE_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myRecipeList: []\r\n      }\r\n    case T.RECIPE_SEARCH_REQUEST:\r\n      set(loading, 'recipeSearch', true)\r\n      return {\r\n        ...state,\r\n        loading,\r\n        params: action.params\r\n      }\r\n    case T.RECIPE_SEARCH_SUCCESS:\r\n      unset(loading, 'recipeSearch')\r\n      return {\r\n        ...state,\r\n        loading,\r\n        recipeSearchResults: action.payload\r\n      }\r\n    case T.RECIPE_SEARCH_FAILURE:\r\n      unset(loading, 'recipeSearch')\r\n      return {\r\n        ...state,\r\n        loading,\r\n        error: action.error\r\n      }\r\n    case T.RECIPE_SEARCH_CLEAR:\r\n      unset(state, 'params')\r\n      return {\r\n        ...state,\r\n        recipeSearchResults: {}\r\n      }\r\n    case T.SHOPPING_LIST_ERROR:\r\n      unset(loading, 'shoppingList')\r\n      return {\r\n        ...state,\r\n        loading,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './local/reducer'\r\nimport recipeListReducer from './recipeList/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  local: reducer,\r\n  recipeList: recipeListReducer\r\n})\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n)\r\n","import React from 'react'\r\nimport XivCraftingGatheringHelper from './XivCraftingGatheringHelper'\r\nimport Provider from 'react-redux/es/components/Provider'\r\nimport store from '../store'\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n        <XivCraftingGatheringHelper />\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport './styles/index.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}