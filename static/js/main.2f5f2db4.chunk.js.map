{"version":3,"sources":["service/localStorage.js","service/xivApi.js","store/types.js","store/actions.js","components/navigation/LodestoneCharacterModal.jsx","components/navigation/LodestoneCharacterMenu.jsx","components/navigation/Navigation.jsx","components/calculator/FilterDropdown.jsx","service/calculations.js","components/calculator/SortableTableHeaderCell.jsx","components/calculator/CalculationsTableHeader.jsx","components/calculator/CalculationsTableBody.jsx","components/calculator/CraftingGatheringCalculator.jsx","components/XivCraftingGatheringHelper.jsx","components/recipes/RecipeHelper.jsx","store/reducer.js","store/index.js","components/App.js","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","store","key","data","localStorage","setItem","JSON","stringify","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","getDefaultCraftingClasses","storedData","getItem","craftingClasses","parse","result","forEach","defaultCraftingClass","storedCraftingClass","_find","c","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","levelingGuideDiffs","push","retrieveAndUpdateCharacterData","updateCraftingClassDataWithCharacterData","classJobCategories","craftingClassData","characterData","_values","_get","_includes","_map","lodestoneClassData","_set","totalExperience","CRAFTING_CLASSES","currentLevel","currentExperience","experiencePerItem","BASE_URL","searchForCharacter","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","get","concat","sent","abrupt","stop","_x","_x2","apply","this","getCharacter","_ref2","_callee2","id","_context2","_x3","recipeSearch","_ref5","_callee5","searchString","columns","_args5","_context5","params","indexes","string","join","sort_field","limit","_x12","_x13","LOCAL_CLASS_DATA_RETRIEVAL","LOCAL_CLASS_DATA_STORE","LOCAL_CLASS_DATA_CLEAR","LOCAL_CHARACTER_DATA_RETRIEVAL","LOCAL_CHARACTER_DATA_STORE","LOCAL_CHARACTER_DATA_CLEAR","LODESTONE_CHARACTER_DATA_REQUEST","LODESTONE_CHARACTER_DATA_SUCCESS","API_REQUEST_FAILURE","lodestoneCharacterDataRequest","characterId","T","apiRequestSuccess","payload","getLocalClassData","dispatch","localData","localClassDataRetrieve","LocalStorage","saveLocalClassData","classData","clearLocalClassData","removeItem","saveLocalCharacterData","getLocalCharacterData","localCharacterDataRetrieve","clearLocalCharacterData","LodestoneCharacterModal","state","event","_event$target","target","value","setState","defineProperty","preventDefault","loading","performSearch","XivApi","lodestoneResults","onHide","props","getLodestoneCharacterData","handleClose","_this2","show","_this$state2","results","prevPage","nextPage","react_default","createElement","Modal","bind","Form","onSubmit","handleSearch","onReset","Header","closeButton","Title","Body","Group","Label","Control","as","onChange","handleSetField","XIV_SERVERS","Button","disabled","className","Spinner","animation","variant","Fragment","map","char","ID","Name","Avatar","Check","htmlFor","src","alt","onClick","Footer","handleSubmitCharacterSelection","React","Component","defaultProps","getDropdownTitle","_characterData$Charac","Character","LodestoneCharacterMenu","showModal","_this$props","searchLodestoneCharacterData","importText","replace","NavDropdown","alignRight","title","Item","Divider","handleModalToggle","navigation_LodestoneCharacterModal","connect","t0","error","Navigation","Navbar","bg","sticky","lib","to","NavbarBrand","Nav","Link","process","navigation_LodestoneCharacterMenu","FilterDropdown","_this","label","applyFilterFunc","DropdownButton","Dropdown","orderBy","craftingClass","calculateRemainingExp","currentExp","totalExp","Math","max","calculateRemainingItems","remainingExp","expPerItem","ceil","calculateProgressPercentage","floor","SortableTableHeaderCell","text","sortFunc","applySorting","style","cursor","index_es","icon","faSort","tableHeaders","CalculationsTableHeader","applySortFunc","h","calculator_SortableTableHeaderCell","CalculationsTableBody","focusedRow","levelingGuide","find","LEVELING_GUIDE_LINKS","g","matchedPage","pages","p","maxLevel","minLevel","url","min","updateField","toNumber","set","focused","remainingExperience","remainingItems","progressPercentage","popover","Popover","href","getLevelingGuidePageUrl","rel","onFocus","handleRowFocus","onBlur","cx","OverlayTrigger","trigger","placement","overlay","rootClose","faIcon","validateNumericFieldChange","ProgressBar","now","CraftingGatheringCalculator","sort","func","direction","filter","sortDirection","isEqual","filterFunc","innerText","targetCraftingClass","otherCraftingClasses","EXP_PER_LEVEL","sortedAndFilteredCraftingClassData","getSortedCraftingClassData","getFilteredCraftingClassData","FilterDropdown_FilterDropdown","applyFilter","Table","striped","hover","CalculationsTableHeader_CalculationsTableHeader","applySort","calculator_CalculationsTableBody","externalLink","XivCraftingGatheringHelper","Calculator","calculator_CraftingGatheringCalculator","assign","react_router_dom","basename","Navigation_Navigation","Container","fluid","react_router","exact","path","render","actions","INITIAL_STATE","rootReducer","combineReducers","local","action","objectSpread","createStore","applyMiddleware","thunk","App","Provider","components_XivCraftingGatheringHelper","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f5f2db4.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\r\nimport { applyChanges, diff } from 'diff-json'\r\nimport {\r\n  filter as _filter,\r\n  find as _find,\r\n  get as _get,\r\n  includes as _includes,\r\n  map as _map,\r\n  set as _set,\r\n  values as _values\r\n} from 'lodash'\r\n\r\nconst KEYS = {\r\n  CHARACTER_DATA: 'character',\r\n  CRAFTING_CLASS_DATA: 'craftingClasses'\r\n}\r\n\r\nfunction store (key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data))\r\n}\r\n\r\nexport function retrieveAndUpdateCraftingClassData () {\r\n  // get the default crafting class data\r\n  const defaultCraftingClasses = getDefaultCraftingClasses()\r\n\r\n  // retrieve the stored data from local storage\r\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\r\n\r\n  // if there is no stored data, return the default data\r\n  if (!storedData) {\r\n    return defaultCraftingClasses\r\n  }\r\n\r\n  // if there is stored data, convert it to JSON\r\n  const craftingClasses = JSON.parse(storedData)\r\n\r\n  // create a variable for the result\r\n  const result = []\r\n\r\n  // cycle through all \"default\" classes\r\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\r\n    // retrieve the matching stored class\r\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\r\n\r\n    // if there is no matching stored class data, add the default for this class to the result\r\n    if (!storedCraftingClass) {\r\n      result.push(defaultCraftingClass)\r\n      return\r\n    }\r\n\r\n    // get any added data to the default data set and apply it to the stored data\r\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\r\n    if (classDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, classDiffs)\r\n    }\r\n\r\n    // get any leveling guide data and remove it from stored data\r\n    const levelingGuideDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.key === 'levelingGuide')\r\n    if (levelingGuideDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, levelingGuideDiffs)\r\n    }\r\n\r\n    // add this record to the result to return\r\n    result.push(storedCraftingClass)\r\n  })\r\n\r\n  // send back the updated stored data\r\n  return result\r\n}\r\n\r\nexport function retrieveAndUpdateCharacterData () {\r\n  // get the stored character data\r\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\r\n\r\n  // if there is no character data, return undefined\r\n  if (!storedData) {\r\n    return undefined\r\n  }\r\n\r\n  // if there is, update it\r\n  // TBD\r\n\r\n  // return the character data\r\n  return JSON.parse(storedData)\r\n}\r\n\r\nexport function storeCharacterData (characterData) {\r\n  // localStorage.setItem(KEYS.CHARACTER_DATA, JSON.stringify(characterData))\r\n  store(KEYS.CHARACTER_DATA, characterData)\r\n}\r\n\r\nexport function storeCraftingClassData (craftingClasses) {\r\n  // localStorage.setItem(KEYS.CRAFTING_CLASS_DATA, JSON.stringify(craftingClasses))\r\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\r\n}\r\n\r\nexport function clearCharacterData () {\r\n  if (!!localStorage.getItem(KEYS.CHARACTER_DATA)) {\r\n    localStorage.removeItem(KEYS.CHARACTER_DATA)\r\n  }\r\n}\r\n\r\nexport function clearCraftingClassData () {\r\n  if (!!localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)) {\r\n    localStorage.removeItem(KEYS.CRAFTING_CLASS_DATA)\r\n  }\r\n}\r\n\r\nexport function updateCraftingClassDataWithCharacterData () {\r\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\r\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\r\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\r\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\r\n\r\n  return _map(craftingClassData, c => {\r\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\r\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\r\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\r\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\r\n    return c\r\n  })\r\n}\r\n\r\nexport function getDefaultCraftingClasses () {\r\n  return _map(CRAFTING_CLASSES, c => {\r\n    c.currentLevel = 1\r\n    c.currentExperience = 0\r\n    c.experiencePerItem = 1\r\n    c.totalExperience = 300\r\n    return c\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { get as _get, isArray as _isArray, set as _set } from 'lodash'\r\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\r\n\r\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\r\nconst BASE_URL = 'https://xivapi.com'\r\n\r\nexport const searchForCharacter = async (server, name, page = 1) => {\r\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\r\n  return _get(result, 'data', [])\r\n}\r\n\r\nexport const getCharacter = async id => {\r\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\r\n  _set(result, 'data.characterId', id)\r\n  return _get(result, 'data', {})\r\n}\r\n\r\nconst search = async (indexes, filters, sortField, columns, searchString) => {\r\n  if (_isArray(indexes)) {\r\n    indexes = indexes.join(',')\r\n  }\r\n\r\n  if (_isArray(filters)) {\r\n    filters = filters.join(',')\r\n  }\r\n\r\n  const params = {\r\n    indexes,\r\n    filters,\r\n    columns,\r\n    string: searchString\r\n  }\r\n\r\n  if (!!sortField) {\r\n    params['sort_field'] = sortField\r\n    params['sort_order'] = 'asc'\r\n  }\r\n\r\n  const result = await axios.get(`${BASE_URL}/search`, {\r\n    params\r\n  })\r\n  return _get(result, 'data', {})\r\n}\r\n\r\nexport const getRecipesForLevelRange = async (abbreviation, minLevel, maxLevel) => {\r\n  const index = 'Recipe'\r\n  const sortField = 'RecipeLevelTable.ClassJobLevel'\r\n  const columns = ['ID', 'ClassJob.Abbreviation_en', 'RecipeLevelTable.ClassJobLevel', 'Name', 'Icon']\r\n  const filters = [\r\n    `ClassJob.Abbreviation_en=${abbreviation}`,\r\n    `RecipeLevelTable.ClassJobLevel>=${minLevel}`,\r\n    `RecipeLevelTable.ClassJobLevel<=${maxLevel}`,\r\n    'StatusRequiredTargetID=0'\r\n  ]\r\n\r\n  return await search(\r\n    index,\r\n    filters,\r\n    sortField,\r\n    columns.join(',')\r\n  )\r\n}\r\n\r\nexport const recipeSearch = async (abbreviation, searchString, page = 1) => {\r\n  const indexes = 'Recipe'\r\n  const sort_field = 'RecipeLevelTable.ClassJobLevel'\r\n  // const sort_field = 'ItemResult.Name_en'\r\n  const columns = [\r\n    'ID',\r\n    'ClassJob.Abbreviation_en',\r\n    'ClassJob.Icon',\r\n    'ClassJob.NameEnglish',\r\n    'RecipeLevelTable.ClassJobLevel',\r\n    'Name',\r\n    'Icon'\r\n  ]\r\n\r\n  const result = await axios.get(`${BASE_URL}/search`, {\r\n    params: {\r\n      indexes,\r\n      string: searchString,\r\n      columns: columns.join(','),\r\n      // 'sort_field': 'RecipeLevelTable.ClassJobLevel'\r\n      sort_field,\r\n      page,\r\n      limit: 20\r\n    }\r\n  })\r\n  return _get(result, 'data', {})\r\n}\r\n\r\nexport const getIconUrl = iconRelativePath => `${BASE_URL}${iconRelativePath}`\r\n","const LODESTONE = 'LODESTONE'\r\nconst LOCAL = 'LOCAL'\r\n\r\nconst REQUEST = 'REQUEST'\r\nconst SUCCESS = 'SUCCESS'\r\nconst FAILURE = 'FAILURE'\r\n\r\nexport const LOCAL_CLASS_DATA_RETRIEVAL = `${LOCAL}_CLASS_DATA_RETRIEVAL`\r\nexport const LOCAL_CLASS_DATA_STORE = `${LOCAL}_CLASS_DATA_STORE`\r\nexport const LOCAL_CLASS_DATA_CLEAR = `${LOCAL}_CLASS_DATA_CLEAR`\r\n\r\nexport const LOCAL_CHARACTER_DATA_RETRIEVAL = `${LOCAL}_CHARACTER_DATA_RETRIEVAL`\r\nexport const LOCAL_CHARACTER_DATA_STORE = `${LOCAL}_CHARACTER_DATA_STORE`\r\nexport const LOCAL_CHARACTER_DATA_CLEAR = `${LOCAL}_CHARACTER_DATA_CLEAR`\r\n\r\nexport const LODESTONE_CHARACTER_DATA_REQUEST = `${LODESTONE}_CHARACTER_DATA_${REQUEST}`\r\nexport const LODESTONE_CHARACTER_DATA_SUCCESS = `${LODESTONE}_CHARACTER_DATA_${SUCCESS}`\r\nexport const API_REQUEST_FAILURE = `${LODESTONE}_CHARACTER_DATA_${FAILURE}`\r\n","import * as LocalStorage from '../service/localStorage'\r\nimport * as XivApi from '../service/xivApi'\r\nimport * as T from './types'\r\n\r\nconst localClassDataRetrieve = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localClassDataStore = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localClassDataClear = () => ({\r\n  type: T.LOCAL_CLASS_DATA_CLEAR\r\n})\r\n\r\nconst localCharacterDataRetrieve = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataStore = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataClear = () => ({\r\n  type: T.LOCAL_CHARACTER_DATA_CLEAR\r\n})\r\n\r\nconst lodestoneCharacterDataRequest = characterId => ({\r\n  type: T.LODESTONE_CHARACTER_DATA_REQUEST,\r\n  characterId\r\n})\r\n\r\nconst apiRequestSuccess = (type, payload) => ({\r\n  type,\r\n  payload\r\n})\r\n\r\nconst apiRequestFailure = (type, error) => ({\r\n  type,\r\n  error\r\n})\r\n\r\nexport const getLocalClassData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCraftingClassData()\r\n    dispatch(localClassDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const saveLocalClassData = classData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCraftingClassData(classData)\r\n    dispatch(localClassDataStore(classData))\r\n  }\r\n}\r\n\r\nexport const clearLocalClassData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCraftingClassData()\r\n    dispatch(localClassDataClear())\r\n  }\r\n}\r\n\r\nexport const saveLocalCharacterData = characterData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCharacterData(characterData)\r\n    dispatch(localCharacterDataStore(characterData))\r\n  }\r\n}\r\n\r\nexport const getLocalCharacterData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCharacterData()\r\n    dispatch(localCharacterDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const clearLocalCharacterData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCharacterData()\r\n    dispatch(localCharacterDataClear())\r\n  }\r\n}\r\n\r\nexport const getLodestoneCharacterData = characterId => {\r\n  return async dispatch => {\r\n    dispatch(lodestoneCharacterDataRequest(characterId))\r\n    try {\r\n      const payload = await XivApi.getCharacter(characterId)\r\n      dispatch(apiRequestSuccess(T.LODESTONE_CHARACTER_DATA_SUCCESS, payload))\r\n      dispatch(saveLocalCharacterData(payload))\r\n      dispatch(saveLocalClassData(LocalStorage.updateCraftingClassDataWithCharacterData()))\r\n      dispatch(getLocalClassData())\r\n    } catch (err) {\r\n      dispatch(apiRequestFailure(T.API_REQUEST_FAILURE, err))\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap'\r\nimport { get, map as _map } from 'lodash'\r\nimport XIV_SERVERS from '../../data/xiv-servers'\r\nimport * as XivApi from '../../service/xivApi'\r\n\r\nclass LodestoneCharacterModal extends React.Component {\r\n  state = {}\r\n\r\n  handleSetField (event) {\r\n    const { target: { name, value } } = event\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSearch (page = 1, event) {\r\n    !!event && event.preventDefault()\r\n    this.setState({\r\n      loading: true,\r\n      page\r\n    }, this.performSearch)\r\n  }\r\n\r\n  async performSearch () {\r\n    const { name, server, page } = this.state\r\n    const result = await XivApi.searchForCharacter(server, name, page)\r\n    this.setState({\r\n      lodestoneResults: result,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleClose () {\r\n    const { onHide } = this.props\r\n    this.setState({\r\n      name: undefined,\r\n      server: undefined,\r\n      lodestoneResults: undefined,\r\n      characterId: undefined\r\n    }, onHide)\r\n  }\r\n\r\n  handleSubmitCharacterSelection () {\r\n    const { getLodestoneCharacterData } = this.props\r\n    const { characterId } = this.state\r\n\r\n    getLodestoneCharacterData(characterId)\r\n    this.handleClose()\r\n  }\r\n\r\n  render () {\r\n    const { show } = this.props\r\n    const { characterId, loading, lodestoneResults, name, server } = this.state\r\n\r\n    const results = get(lodestoneResults, 'Results', [])\r\n    const prevPage = get(lodestoneResults, 'Pagination.PagePrev')\r\n    const nextPage = get(lodestoneResults, 'Pagination.PageNext')\r\n\r\n    return (\r\n      <Modal show={show} onHide={this.handleClose.bind(this)}>\r\n        <Form\r\n          onSubmit={this.handleSearch.bind(this, 1)}\r\n          onReset={this.handleClose.bind(this)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Import Character Data\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Label>Server</Form.Label>\r\n              <Form.Control name=\"server\" as=\"select\" onChange={this.handleSetField.bind(this)}>\r\n                <option>Choose a Server</option>\r\n                {_map(XIV_SERVERS, (server, key) => (\r\n                  <option key={key} value={server}>{server}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control name=\"name\" type=\"text\" onChange={this.handleSetField.bind(this)} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" disabled={!name || !server}>\r\n              Search\r\n            </Button>\r\n            <hr />\r\n            {!!loading && (\r\n              <div className=\"fullWidth text-center\">\r\n                <Spinner animation=\"grow\" variant=\"danger\" />\r\n                <Spinner animation=\"grow\" variant=\"warning\" />\r\n                <Spinner animation=\"grow\" variant=\"success\" />\r\n              </div>\r\n            )}\r\n            {!loading && !results.length && (\r\n              <div>\r\n                No results available.\r\n              </div>\r\n            )}\r\n            {!loading && !!results.length && (\r\n              <React.Fragment>\r\n                <div className=\"lodestoneResults\">\r\n                  {results.map((char, key) => {\r\n                    const { ID, Name, Avatar } = char\r\n                    return (\r\n                      <div\r\n                        key={key}\r\n                        className=\"flex justify-between items-center\"\r\n                      >\r\n                        <Form.Check\r\n                          id={ID}\r\n                          type=\"radio\"\r\n                          name=\"characterId\"\r\n                          value={ID}\r\n                          onChange={this.handleSetField.bind(this)}\r\n                        />\r\n                        <label htmlFor={ID}>{Name}</label>\r\n                        <label htmlFor={ID}>\r\n                          <img className=\"avatar\" src={Avatar} alt={Name} />\r\n                        </label>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n                <div className=\"flex justify-between items-center pt2\">\r\n                  <div className=\"w-50 tl\">\r\n                    {!!prevPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, prevPage)}>\r\n                        Prev Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"w-50 tr\">\r\n                    {nextPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, nextPage)}>\r\n                        Next Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"reset\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"primary\"\r\n              disabled={!characterId}\r\n              onClick={this.handleSubmitCharacterSelection.bind(this)}\r\n            >\r\n              Load Data\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired\r\n}\r\n\r\nLodestoneCharacterModal.defaultProps = {\r\n  show: false\r\n}\r\n\r\nexport default LodestoneCharacterModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { get } from 'lodash'\r\nimport { NavDropdown } from 'react-bootstrap'\r\nimport { clearLocalCharacterData, clearLocalClassData, getLodestoneCharacterData } from '../../store/actions'\r\nimport LodestoneCharacterModal from './LodestoneCharacterModal'\r\n\r\nconst getDropdownTitle = characterData => {\r\n  if (get(characterData, 'Character.Avatar')) {\r\n    const { Character: { Avatar, Name } } = characterData\r\n    return (\r\n      <span className=\"items-center\">\r\n        {Name}\r\n        <span className=\"ml2\"><img src={Avatar} alt={Name} className=\"avatar\" /></span>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return 'Options'\r\n}\r\n\r\nclass LodestoneCharacterMenu extends React.Component {\r\n  state = {\r\n    showModal: false\r\n  }\r\n\r\n  handleModalToggle (showModal) {\r\n    this.setState({\r\n      showModal: showModal\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      characterData,\r\n      clearLocalCharacterData,\r\n      clearLocalClassData,\r\n      getLodestoneCharacterData,\r\n      lodestoneResults,\r\n      searchLodestoneCharacterData\r\n    } = this.props\r\n\r\n    const importText = `Import ${!characterData ? '' : 'Different'} Character Data`.replace('  ', ' ')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavDropdown\r\n          alignRight\r\n          title={getDropdownTitle(characterData)}\r\n        >\r\n          {!!characterData && (\r\n            <React.Fragment>\r\n              <NavDropdown.Item onClick={getLodestoneCharacterData.bind(this, characterData.characterId)}>\r\n                Refresh Character Data\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n            </React.Fragment>\r\n          )}\r\n          <NavDropdown.Item onClick={this.handleModalToggle.bind(this, true)}>\r\n            {importText}\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={clearLocalClassData}>\r\n            Clear Crafting Class Data\r\n          </NavDropdown.Item>\r\n          {!!characterData && (\r\n            <NavDropdown.Item onClick={clearLocalCharacterData}>\r\n              Clear Character Data\r\n            </NavDropdown.Item>\r\n          )}\r\n        </NavDropdown>\r\n        <LodestoneCharacterModal\r\n          lodestoneResults={lodestoneResults}\r\n          onHide={this.handleModalToggle.bind(this, false)}\r\n          searchLodestoneCharacterData={searchLodestoneCharacterData}\r\n          show={this.state.showModal}\r\n          getLodestoneCharacterData={getLodestoneCharacterData}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterMenu.propTypes = {\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId)),\r\n  clearLocalCharacterData: () => dispatch(clearLocalCharacterData()),\r\n  clearLocalClassData: () => dispatch(clearLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LodestoneCharacterMenu)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Nav, Navbar, NavbarBrand } from 'react-bootstrap'\r\nimport LodestoneCharacterMenu from './LodestoneCharacterMenu'\r\n\r\nexport default class Navigation extends React.Component {\r\n  render () {\r\n    const { characterData } = this.props\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <LinkContainer to=\"/\">\r\n          <NavbarBrand>\r\n            FFXIV Crafting & Gathering Helper\r\n          </NavbarBrand>\r\n        </LinkContainer>\r\n        <Nav className=\"mr-auto\">\r\n          <LinkContainer to=\"/calculations\">\r\n            <Nav.Link>\r\n              Calculations\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          {process.env.NODE_ENV === 'development' && (\r\n            <LinkContainer to=\"/recipes/all\">\r\n              <Nav.Link>\r\n                Recipes\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          )}\r\n        </Nav>\r\n        <Nav>\r\n          <LodestoneCharacterMenu\r\n            characterData={characterData}\r\n          />\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  characterData: PropTypes.shape(),\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport { orderBy } from 'lodash'\r\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\r\n\r\nexport default class FilterDropdown extends React.Component {\r\n  render () {\r\n    const { label, applyFilterFunc } = this.props\r\n    return (\r\n      <DropdownButton title={`Showing ${label}`}>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => !!c)}>\r\n          All\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'crafting')}>\r\n          Crafting Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'gathering')}>\r\n          Gathering Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        {orderBy(CRAFTING_CLASSES, 'name').map((craftingClass, key) => (\r\n          <Dropdown.Item\r\n            key={key}\r\n            onClick={applyFilterFunc.bind(this, c => c.abbreviation === craftingClass.abbreviation)}\r\n          >\r\n            {craftingClass.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n    )\r\n  }\r\n}\r\n\r\nFilterDropdown.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  applyFilterFunc: PropTypes.func.isRequired\r\n}\r\n","export function calculateRemainingExp (currentExp, totalExp) {\r\n  return Math.max(totalExp - currentExp, 0)\r\n}\r\n\r\nexport function calculateRemainingItems (remainingExp, expPerItem) {\r\n  return Math.ceil(remainingExp / expPerItem)\r\n}\r\n\r\nexport function calculateProgressPercentage (currentExp, totalExp) {\r\n  return totalExp <= 0 ? 0 : Math.floor((currentExp / totalExp) * 100)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortableTableHeaderCell extends React.Component {\r\n  render () {\r\n    const { className, text, sortFunc, applySorting } = this.props\r\n    return (\r\n      <th className={className} onClick={applySorting.bind(this, sortFunc)}\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {text}\r\n        <FontAwesomeIcon\r\n          className=\"margin-left\"\r\n          icon={faSort}\r\n        />\r\n      </th>\r\n    )\r\n  }\r\n}\r\n\r\nSortableTableHeaderCell.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  sortFunc: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\r\n  applySorting: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SortableTableHeaderCell\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport SortableTableHeaderCell from './SortableTableHeaderCell'\r\n\r\nconst tableHeaders = [\r\n  { name: 'Class', sortFunc: 'name' },\r\n  { name: 'Level', sortFunc: 'currentLevel' },\r\n  { name: 'Current Exp.', sortFunc: 'currentExperience' },\r\n  { name: 'Required Exp.', sortFunc: undefined },\r\n  { name: 'Remaining Exp.', sortFunc: c => calculateRemainingExp(c.currentExperience, c.totalExperience) },\r\n  { name: 'Exp. Per Item', sortFunc: 'experiencePerItem' },\r\n  {\r\n    name: 'Remaining Items',\r\n    sortFunc: c => calculateRemainingItems(\r\n      calculateRemainingExp(c.currentExperience, c.totalExperience), c.experiencePerItem\r\n    )\r\n  },\r\n  { name: 'Progress', sortFunc: c => calculateProgressPercentage(c.currentExperience, c.totalExperience) }\r\n]\r\n\r\nexport default class CalculationsTableHeader extends React.Component {\r\n  render () {\r\n    const { applySortFunc } = this.props\r\n    return (\r\n      <thead>\r\n      <tr>\r\n        {tableHeaders.map((h, key) => {\r\n          if (h.sortFunc) {\r\n            return (\r\n              <SortableTableHeaderCell\r\n                key={key}\r\n                text={h.name}\r\n                sortFunc={h.sortFunc}\r\n                applySorting={applySortFunc}\r\n              />\r\n            )\r\n          } else {\r\n            return (\r\n              <th key={key}>\r\n                {h.name}\r\n              </th>\r\n            )\r\n          }\r\n        })}\r\n      </tr>\r\n      </thead>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableHeader.propTypes = {\r\n  applySortFunc: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport Form from 'react-bootstrap/es/Form'\r\nimport { OverlayTrigger, Popover, ProgressBar } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\r\nimport { find, set, toNumber } from 'lodash'\r\nimport LEVELING_GUIDE_LINKS from '../../data/leveling-guide-links'\r\n\r\nclass CalculationsTableBody extends React.Component {\r\n  state = {\r\n    focusedRow: undefined\r\n  }\r\n\r\n  getLevelingGuidePageUrl (abbreviation, currentLevel) {\r\n    const classGuideData = find(LEVELING_GUIDE_LINKS, g => g.abbreviation === abbreviation)\r\n    const { levelingGuide } = classGuideData\r\n\r\n    const matchedPage = find(levelingGuide.pages, p => {\r\n      const { maxLevel, minLevel } = p\r\n\r\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\r\n        return true\r\n      }\r\n    })\r\n\r\n    return !!matchedPage ? `${levelingGuide.url}/${matchedPage.page}/` : levelingGuide.url\r\n  }\r\n\r\n  validateNumericFieldChange (abbreviation, event) {\r\n    const { target: { value, max, min } } = event\r\n    const { updateField } = this.props\r\n\r\n    if (!!min && toNumber(value) < min) {\r\n      set(event, 'target.value', min)\r\n    }\r\n\r\n    if (!!max && toNumber(value) > max) {\r\n      set(event, 'target.value', max)\r\n    }\r\n\r\n    updateField(abbreviation, event)\r\n  }\r\n\r\n  handleRowFocus (abbreviation, focused) {\r\n    this.setState({\r\n      focusedRow: focused ? abbreviation : undefined\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { craftingClasses } = this.props\r\n    return (\r\n      <tbody>\r\n      {craftingClasses.map(c => {\r\n        const remainingExperience = calculateRemainingExp(c.currentExperience, c.totalExperience)\r\n        const remainingItems = calculateRemainingItems(remainingExperience, c.experiencePerItem)\r\n        const progressPercentage = calculateProgressPercentage(c.currentExperience, c.totalExperience)\r\n\r\n        const popover = (\r\n          <Popover id={`links-${c.name}`}>\r\n            <a\r\n              href={this.getLevelingGuidePageUrl(c.abbreviation, c.currentLevel)}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Leveling Guide\r\n            </a>\r\n          </Popover>\r\n        )\r\n\r\n        return (\r\n          <tr\r\n            key={`calculationTableRow${c.abbreviation}`}\r\n            onFocus={this.handleRowFocus.bind(this, c.abbreviation, true)}\r\n            onBlur={this.handleRowFocus.bind(this, c.abbreviation, false)}\r\n            className={cx(this.state.focusedRow === c.abbreviation ? 'focused' : undefined)}\r\n          >\r\n            <td>\r\n              <div className=\"flex justify-between items-center\">\r\n                {c.name}\r\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\r\n                  <FontAwesomeIcon icon={faIcon} className=\"text-primary pointer\" />\r\n                </OverlayTrigger>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentLevel\"\r\n                type=\"number\"\r\n                value={c.currentLevel}\r\n                min=\"1\"\r\n                max=\"70\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentExperience\"\r\n                type=\"number\"\r\n                value={c.currentExperience}\r\n                min=\"0\"\r\n                max={c.totalExperience}\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{c.totalExperience}</td>\r\n            <td>{remainingExperience}</td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"experiencePerItem\"\r\n                type=\"number\"\r\n                value={c.experiencePerItem}\r\n                min=\"1\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{remainingItems}</td>\r\n            <td>\r\n              <ProgressBar\r\n                now={progressPercentage}\r\n                label={`${c.currentExperience} / ${c.totalExperience} (${progressPercentage}%)`}\r\n              />\r\n            </td>\r\n          </tr>\r\n        )\r\n      })}\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableBody.propTypes = {\r\n  craftingClasses: PropTypes.arrayOf(PropTypes.shape()).isRequired\r\n}\r\n\r\nexport default CalculationsTableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Table } from 'react-bootstrap'\r\nimport { concat, filter, find, isEqual, orderBy, set, toNumber } from 'lodash'\r\nimport FilterDropdown from './FilterDropdown'\r\nimport CalculationsTableHeader from './CalculationsTableHeader'\r\nimport CalculationsTableBody from './CalculationsTableBody'\r\nimport EXP_PER_LEVEL from '../../data/exp-per-level'\r\nimport { saveLocalClassData } from '../../store/actions'\r\n\r\nclass CraftingGatheringCalculator extends React.Component {\r\n  state = {\r\n    sort: {\r\n      func: 'name',\r\n      direction: 'asc'\r\n    },\r\n    filter: {\r\n      func: undefined,\r\n      label: 'All'\r\n    }\r\n  }\r\n\r\n  applySort (sortFunc) {\r\n    const { sort } = this.state\r\n    const sortDirection = isEqual(sortFunc, sort.func) && sort.direction === 'asc' ? 'desc' : 'asc'\r\n    this.setState({\r\n      sort: {\r\n        func: sortFunc,\r\n        direction: sortDirection\r\n      }\r\n    })\r\n  }\r\n\r\n  applyFilter (filterFunc, event) {\r\n    this.setState({\r\n      filter: {\r\n        func: filterFunc,\r\n        label: event.target.innerText\r\n      }\r\n    })\r\n  }\r\n\r\n  getSortedCraftingClassData (craftingClassData) {\r\n    const { sort } = this.state\r\n    return orderBy(craftingClassData, sort.func, sort.direction)\r\n  }\r\n\r\n  getFilteredCraftingClassData (craftingClassData) {\r\n    const { filter: { func } } = this.state\r\n    return filter(craftingClassData, func)\r\n  }\r\n\r\n  updateField (abbreviation, event) {\r\n    const { target: { value, name } } = event\r\n    const { craftingClassData, saveLocalClassData } = this.props\r\n\r\n    const targetCraftingClass = find(craftingClassData, c => c.abbreviation === abbreviation)\r\n    const otherCraftingClasses = filter(craftingClassData, c => c.abbreviation !== abbreviation)\r\n    set(targetCraftingClass, name, toNumber(value))\r\n\r\n    if (name === 'currentLevel') {\r\n      set(targetCraftingClass, 'totalExperience', EXP_PER_LEVEL[value])\r\n    }\r\n\r\n    const updatedCraftingClasses = orderBy(concat(otherCraftingClasses, targetCraftingClass), ['type', 'name'])\r\n\r\n    saveLocalClassData(updatedCraftingClasses)\r\n  }\r\n\r\n  render () {\r\n    const { craftingClassData } = this.props\r\n    const sortedAndFilteredCraftingClassData = this.getSortedCraftingClassData(\r\n      this.getFilteredCraftingClassData(craftingClassData)\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"w-100 pv3 tc\">\r\n          <FilterDropdown label={this.state.filter.label} applyFilterFunc={this.applyFilter.bind(this)} />\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <Table className=\"calculations\" striped hover>\r\n            <CalculationsTableHeader applySortFunc={this.applySort.bind(this)} />\r\n            <CalculationsTableBody\r\n              craftingClasses={sortedAndFilteredCraftingClassData}\r\n              updateField={this.updateField.bind(this)}\r\n            />\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCraftingGatheringCalculator.propTypes = {\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveLocalClassData: (classData) => dispatch(saveLocalClassData(classData))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CraftingGatheringCalculator)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport { get } from 'lodash'\r\nimport * as actions from '../store/actions'\r\nimport Navigation from './navigation/Navigation'\r\nimport CraftingGatheringCalculator from './calculator/CraftingGatheringCalculator'\r\nimport RecipeHelper from './recipes/RecipeHelper'\r\n\r\nconst externalLink = (url, text) => (\r\n  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    {text}\r\n  </a>\r\n)\r\n\r\nclass XivCraftingGatheringHelper extends React.Component {\r\n  componentDidMount () {\r\n    this.props.getLocalClassData()\r\n    this.props.getLocalCharacterData()\r\n  }\r\n\r\n  render () {\r\n    const { characterData, craftingClassData } = this.props\r\n\r\n    const Calculator = props => (\r\n      <CraftingGatheringCalculator\r\n        characterData={characterData}\r\n        craftingClassData={craftingClassData}\r\n        {...props}\r\n      />\r\n    )\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Navigation\r\n          characterData={characterData}\r\n          craftingClassData={craftingClassData}\r\n        />\r\n        <Container fluid>\r\n          <Switch>\r\n            <Route exact path=\"/\" render={Calculator} />\r\n            <Route path=\"/calculations\" render={Calculator} />\r\n            {process.env.NODE_ENV === 'development' && (\r\n              <Route path=\"/recipes\" component={RecipeHelper} />\r\n            )}\r\n          </Switch>\r\n          <hr />\r\n          <div className=\"tc text-muted\">\r\n            Created by {externalLink('https://na.finalfantasyxiv.com/lodestone/character/22858010/',\r\n            'Xythyt')} with the help of {externalLink('https://www.xivapi.com', 'XIVAPI')}.\r\n            <br />\r\n            Version {process.env.REACT_APP_VERSION}\r\n          </div>\r\n        </Container>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return ({\r\n    craftingClassData: get(state, 'local.classData'),\r\n    characterData: get(state, 'local.characterData')\r\n  })\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLocalCharacterData: () => dispatch(actions.getLocalCharacterData()),\r\n  getLocalClassData: () => dispatch(actions.getLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(XivCraftingGatheringHelper)\r\n","import React from 'react'\r\nimport { Button, Col, Form, FormControl, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap'\r\nimport { cloneDeep, find, get, reject } from 'lodash'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinusCircle, faPlusCircle, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport * as XivApi from '../../service/xivApi'\r\n\r\nexport default class RecipeHelper extends React.Component {\r\n  state = {\r\n    recipeSearchString: 'healing',\r\n    recipeSearchIsInvalid: false,\r\n    searching: false,\r\n    myList: []\r\n  }\r\n\r\n  handleFieldUpdate (event) {\r\n    const { target: { name, value } } = event\r\n\r\n    let recipeSearchIsInvalid = false\r\n    if (!value) {\r\n      recipeSearchIsInvalid = true\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      recipeSearchIsInvalid\r\n    })\r\n  }\r\n\r\n  async search () {\r\n    const { recipeSearchString } = this.state\r\n    const results = await XivApi.recipeSearch(undefined, recipeSearchString)\r\n    console.log(results)\r\n    this.setState({\r\n      searching: false,\r\n      recipeList: results\r\n    })\r\n  }\r\n\r\n  handleSearch (event) {\r\n    event.preventDefault()\r\n    const { recipeSearchString } = this.state\r\n    if (!recipeSearchString) {\r\n      document.getElementsByName('recipeSearchString')[0].focus()\r\n      this.setState({\r\n        recipeSearchIsInvalid: true\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      searching: true\r\n    }, this.search)\r\n  }\r\n\r\n  handleClear () {\r\n    document.getElementsByName('recipeSearchString')[0].focus()\r\n    this.setState({\r\n      recipeSearchIsInvalid: false,\r\n      recipeSearchString: ''\r\n    })\r\n  }\r\n\r\n  toggleListItem (item) {\r\n    const { myList } = this.state\r\n    let myClonedList = cloneDeep(myList)\r\n\r\n    if (!!find(myList, item)) {\r\n      myClonedList = reject(myList, item)\r\n    } else {\r\n      myClonedList.push(item)\r\n    }\r\n\r\n    this.setState({\r\n      myList: myClonedList\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { myList, recipeList, recipeSearchIsInvalid, recipeSearchString, searching } = this.state\r\n    const results = get(recipeList, 'Results')\r\n\r\n    const popover = ({ ref, style }) => {\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className=\"myList\"\r\n        >\r\n          {!myList.length && (\r\n            'No items currently in your list.'\r\n          )}\r\n          {myList.map((item, key) => (\r\n            <div className=\"flex items-center justify-between pv1\" key={key}>\r\n              <span>\r\n                [{get(item, 'ClassJob.Abbreviation_en')} {get(item, 'RecipeLevelTable.ClassJobLevel')}\r\n                ] {get(item, 'Name')}\r\n              </span>\r\n              <span>\r\n                <Button variant=\"danger\" size=\"sm\" onClick={this.toggleListItem.bind(this, item)}>\r\n                  <FontAwesomeIcon icon={faWindowClose} />\r\n                </Button>\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"recipe-list pt3\">\r\n        <div className=\"search\">\r\n          <Row>\r\n            <Col xs={12} md={6} lg={8}>\r\n              <Form onReset={this.handleClear.bind(this)} onSubmit={this.handleSearch.bind(this)} disabled={true}>\r\n                <Form.Group>\r\n                  <Form.Label>Enter Your Search Term(s)</Form.Label>\r\n                  <Form.Control\r\n                    as=\"input\"\r\n                    name=\"recipeSearchString\"\r\n                    value={recipeSearchString}\r\n                    onChange={this.handleFieldUpdate.bind(this)}\r\n                    isInvalid={!!recipeSearchIsInvalid}\r\n                  />\r\n                  <FormControl.Feedback type=\"invalid\">\r\n                    Please enter a search term.\r\n                  </FormControl.Feedback>\r\n                </Form.Group>\r\n                <Button type=\"reset\" variant=\"danger\" className=\"mr1\" disabled={!!searching}>Clear</Button>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"ml1\" disabled={!!searching}>Go!</Button>\r\n              </Form>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"tr\">\r\n                <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={popover}>\r\n                  <Button style={{ position: 'fixed', right: '1em' }}>\r\n                    My List ({myList.length})\r\n                  </Button>\r\n                </OverlayTrigger>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n          {!searching && !recipeList && (\r\n            <div className=\"tc\">\r\n              No Results\r\n            </div>\r\n          )}\r\n          {!!searching && (\r\n            <div className=\"tc\">\r\n              Searching ...\r\n            </div>\r\n          )}\r\n          {!searching && results && (\r\n            <div>\r\n              <Table hover striped className=\"recipes\">\r\n                <thead>\r\n                <tr>\r\n                  <th />\r\n                  <th>Crafting Class</th>\r\n                  <th>Recipe Name</th>\r\n                  <th>Level Required to Craft</th>\r\n                  <th>Add/Remove</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {results.map((r, key) => {\r\n                  const iconUrl = XivApi.getIconUrl(get(r, 'Icon'))\r\n                  const name = get(r, 'Name')\r\n                  const classAbbr = get(r, 'ClassJob.NameEnglish', get(r, 'ClassJob.Abbreviation_en'))\r\n                  const classLevel = get(r, 'RecipeLevelTable.ClassJobLevel')\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td>\r\n                        <img src={iconUrl} alt={name} className=\"\" />\r\n                      </td>\r\n                      <td>\r\n                        {classAbbr}\r\n                      </td>\r\n                      <td>\r\n                        {name}\r\n                      </td>\r\n                      <td>\r\n                        {classLevel}\r\n                      </td>\r\n                      <td>\r\n                        {!!find(myList, r) ? (\r\n                          <Button variant=\"danger\" onClick={this.toggleListItem.bind(this, r)}>\r\n                            <FontAwesomeIcon\r\n                              icon={faMinusCircle}\r\n                            />\r\n                          </Button>\r\n                        ) : (\r\n                          <Button variant=\"success\" onClick={this.toggleListItem.bind(this, r)}>\r\n                            <FontAwesomeIcon\r\n                              icon={faPlusCircle}\r\n                            />\r\n                          </Button>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n*\r\n                <Table hover striped bordered>\r\n                  <thead>\r\n                  <tr>\r\n                    <th colSpan={4}>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span>My List ({myList.length})</span>\r\n                        <Button variant=\"danger\" onClick={() => this.setState({ myList: [] })}>Clear</Button>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Crafting Class</th>\r\n                    <th>Recipe Name</th>\r\n                    <th>Required Level</th>\r\n                    <th>Remove?</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {!myList.length && (\r\n                    <tr>\r\n                      <td colSpan={4}>\r\n                        No Items Added to List\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                  {!!myList.length && myList.map((item, key) => (\r\n                    <tr key={key}>\r\n                      <td>{get(item, 'ClassJob.Abbreviation_en')}</td>\r\n                      <td>{get(item, 'Name')}</td>\r\n                      <td>{get(item, 'RecipeLevelTable.ClassJobLevel')}</td>\r\n                      <td>\r\n                        <Button variant=\"danger\" onClick={this.toggleListItem.bind(this, item)}>Remove</Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                  </tbody>\r\n                </Table>\r\n* */\r\n","import { get } from 'lodash'\r\nimport * as LocalStorage from '../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  classData: LocalStorage.getDefaultCraftingClasses()\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case T.LOCAL_CLASS_DATA_STORE:\r\n    case T.LOCAL_CLASS_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        classData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        characterData: undefined\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_STORE:\r\n    case T.LOCAL_CHARACTER_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CLASS_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        classData: LocalStorage.getDefaultCraftingClasses()\r\n      }\r\n    case T.LODESTONE_CHARACTER_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'payload')\r\n      }\r\n    case T.API_REQUEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  local: reducer\r\n})\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n)\r\n","import React from 'react'\r\nimport XivCraftingGatheringHelper from './XivCraftingGatheringHelper'\r\nimport Provider from 'react-redux/es/components/Provider'\r\nimport store from '../store'\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n        <XivCraftingGatheringHelper />\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}