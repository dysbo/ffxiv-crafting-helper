{"version":3,"sources":["service/localStorage.js","service/xivApi.js","store/local/types.js","store/local/actions.js","components/navigation/LodestoneCharacterModal.jsx","components/navigation/LodestoneCharacterMenu.jsx","components/navigation/Navigation.jsx","components/calculator/FilterDropdown.jsx","service/calculations.js","components/common/SortableTableHeaderCell.jsx","components/calculator/CalculationsTableHeader.jsx","components/calculator/CalculationsTableBody.jsx","components/calculator/CraftingGatheringCalculator.jsx","components/recipes/RecipeSearchForm.jsx","components/recipes/RecipeSearchResult.jsx","components/recipes/RecipeSearch.jsx","components/recipes/MyList.jsx","store/recipeList/types.js","service/recipe.js","store/recipeList/actions.js","components/recipes/ShoppingList.jsx","components/recipes/RecipeHelper.jsx","components/XivCraftingGatheringHelper.jsx","store/local/reducer.js","store/recipeList/reducer.js","store/index.js","components/App.js","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","MY_RECIPE_LIST","MY_SHOPPING_LIST","get","key","defaultValue","data","localStorage","getItem","JSON","parse","store","setItem","stringify","clear","removeItem","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","getDefaultCraftingClasses","storedData","craftingClasses","result","forEach","defaultCraftingClass","storedCraftingClass","_find","c","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","levelingGuideDiffs","push","retrieveAndUpdateCharacterData","updateCraftingClassDataWithCharacterData","classJobCategories","craftingClassData","characterData","_values","_get","_includes","_map","lodestoneClassData","_set","totalExperience","CRAFTING_CLASSES","currentLevel","currentExperience","experiencePerItem","BASE_URL","searchForCharacter","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","concat","sent","abrupt","stop","_x","_x2","apply","this","getCharacter","_ref2","_callee2","id","_context2","set","_x3","recipeSearch","_ref4","_callee4","searchString","options","columns","exact","paramsToSend","_args4","_context4","toLower","replace","indexes","body","query","bool","must","wildcard","NameCombined_en","size","from","sort","RecipeLevelTable.ClassJobLevel","limit","isArray","minimum_should_match","should","map","match","ClassJob.Abbreviation_en","post","getIconUrl","iconRelativePath","getRecipesById","_ref5","_callee5","recipeIds","i","_context5","params","ids","join","_x9","getItemsById","_ref6","_callee6","itemIds","_context6","_x10","LOCAL_CLASS_DATA_RETRIEVAL","LOCAL_CLASS_DATA_STORE","LOCAL_CLASS_DATA_CLEAR","LOCAL_CHARACTER_DATA_RETRIEVAL","LOCAL_CHARACTER_DATA_STORE","LOCAL_CHARACTER_DATA_CLEAR","LODESTONE_CHARACTER_DATA_REQUEST","LODESTONE_CHARACTER_DATA_SUCCESS","API_REQUEST_FAILURE","lodestoneCharacterDataRequest","characterId","T","apiRequestSuccess","payload","getLocalClassData","dispatch","localData","localClassDataRetrieve","LocalStorage","saveLocalClassData","classData","clearLocalClassData","saveLocalCharacterData","getLocalCharacterData","localCharacterDataRetrieve","clearLocalCharacterData","LodestoneCharacterModal","state","event","_event$target","target","value","setState","defineProperty","preventDefault","loading","performSearch","XivApi","lodestoneResults","onHide","props","getLodestoneCharacterData","handleClose","_this2","show","_this$state2","results","prevPage","nextPage","react_default","createElement","Modal","bind","Form","onSubmit","handleSearch","onReset","Header","closeButton","Title","Body","Group","Label","Control","as","onChange","handleSetField","XIV_SERVERS","Button","disabled","className","Spinner","animation","variant","Fragment","char","ID","Name","Avatar","Check","htmlFor","src","alt","onClick","Footer","handleSubmitCharacterSelection","React","Component","defaultProps","getDropdownTitle","_characterData$Charac","Character","LodestoneCharacterMenu","showModal","_this$props","searchLodestoneCharacterData","importText","NavDropdown","alignRight","title","Item","Divider","handleModalToggle","navigation_LodestoneCharacterModal","connect","t0","error","Navigation","Navbar","bg","sticky","lib","to","NavbarBrand","Nav","Link","Badge","navigation_LodestoneCharacterMenu","FilterDropdown","_this","label","applyFilterFunc","DropdownButton","Dropdown","orderBy","craftingClass","calculateRemainingExp","currentExp","totalExp","Math","max","calculateRemainingItems","remainingExp","expPerItem","ceil","calculateProgressPercentage","floor","SortableTableHeaderCell","text","sortFunc","applySorting","style","cursor","index_es","icon","faSort","tableHeaders","CalculationsTableHeader","applySortFunc","h","common_SortableTableHeaderCell","CalculationsTableBody","focusedRow","levelingGuide","find","LEVELING_GUIDE_LINKS","g","matchedPage","pages","p","maxLevel","minLevel","url","min","updateField","toNumber","focused","remainingExperience","remainingItems","progressPercentage","popover","Popover","href","getLevelingGuidePageUrl","rel","onFocus","handleRowFocus","onBlur","cx","OverlayTrigger","trigger","placement","overlay","rootClose","faIcon","validateNumericFieldChange","ProgressBar","now","CraftingGatheringCalculator","func","direction","filter","sortDirection","isEqual","filterFunc","innerText","targetCraftingClass","otherCraftingClasses","EXP_PER_LEVEL","sortedAndFilteredCraftingClassData","getSortedCraftingClassData","getFilteredCraftingClassData","FilterDropdown_FilterDropdown","applyFilter","Table","striped","hover","CalculationsTableHeader_CalculationsTableHeader","applySort","calculator_CalculationsTableBody","RecipeSearchForm","handleChange","handleReset","handleSubmit","recipeSearchIsInvalid","recipeSearchString","searching","isInvalid","FormControl","Feedback","RecipeSearchResult","handlePageChange","handleTabChange","handleToggleListItem","myList","pagination","ready","recipeList","pagePrev","pageNext","r","iconUrl","craftingClassName","level","isOnList","item","faMinusSquare","faPlusSquare","colSpan","RecipeSearch","recipeSearchResults","RecipeSearchForm_RecipeSearchForm","RecipeSearchResult_RecipeSearchResult","MyList","handleClearList","handleGenerateShoppingList","handleUpdateQuantity","list","k","Icon","ClassJob","NameEnglish","RecipeLevelTable","ClassJobLevel","quantity","RECIPE_LIST_CLEAR","RECIPE_LIST_SAVE","SHOPPING_LIST_CREATE","SHOPPING_LIST_CLEAR","getIngredientListForRecipes","ingredientsGatherable","ingredientsCrafted","ingredientsOther","ingredientsPurchased","itemData","getAndSortRecipeResults","XivApiService","foundItem","ig","io","val","includes","addGatheringItemData","uniqBy","ic","gatheringItemId","filteredGatheringPoints","GATHERING_ITEM_POINTS","point","startsWith","pointData","getPointData","itemId","filteredFishingSpots","FISHING_SPOTS","spot","path","pd","namePath","areaPath","regionPath","levelPath","typePath","aetherytePath","area","region","aetheryteId","AETHERYTE","gatheringClass","Mining","Quarrying","Logging","Harvesting","hasFishingSpotMatch","matched","fishingId","recipeResults","nextRecipeResults","recipe","t1","t2","rr","recipeListEntry","rle","_loop","amount","gatheringMapNode","ITEM_TO_GATHERING_ITEM_MAPPING","mapping","ingredientRecipe","fishingSpotMatch","existingIngredientGatherable","existingAmount","existingIngredientOther","ip","_x4","_x5","_x6","saveMyRecipeList","myRecipeList","console","log","recipeListSave","createMyShoppingList","clearMyRecipeList","clearMyShoppingList","RecipeListService","myShoppingList","shoppingList","ShoppingList","updateGatherableIngredientsDropdowns","prevProps","prevState","snapshot","gatherableStateVars","objectSpread","_this$props$shoppingL","headings","locationSelectId","gatheringType","handleLocationUpdate","craftClass","craftLevel","RecipeHelper","lastSearch","_this$setState","newValue","indexOf","document","getElementsByName","focus","search","omit","_this$props2","myClonedList","cloneDeep","reject","_this$props3","_this3","_this$state","_this$props4","shoppingListResults","Tabs","activeKey","onSelect","Tab","eventKey","RecipeSearch_RecipeSearch","handleFieldUpdate","handleClear","toggleListItem","MyList_MyList","ShoppingList_ShoppingList","recipeActions","externalLink","XivCraftingGatheringHelper","Calculator","calculator_CraftingGatheringCalculator","assign","react_router_dom","basename","process","Navigation_Navigation","Container","fluid","react_router","render","component","actions","INITIAL_STATE","rootReducer","combineReducers","local","action","createStore","applyMiddleware","thunk","App","Provider","components_XivCraftingGatheringHelper","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.e828ef4e.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\r\nimport { applyChanges, diff } from 'diff-json'\r\nimport {\r\n  filter as _filter,\r\n  find as _find,\r\n  get as _get,\r\n  includes as _includes,\r\n  map as _map,\r\n  set as _set,\r\n  values as _values\r\n} from 'lodash'\r\n\r\nconst KEYS = {\r\n  CHARACTER_DATA: 'character',\r\n  CRAFTING_CLASS_DATA: 'craftingClasses',\r\n  MY_RECIPE_LIST: 'myRecipeList',\r\n  MY_SHOPPING_LIST: 'myShoppingList'\r\n}\r\n\r\nfunction get (key, defaultValue) {\r\n  const data = localStorage.getItem(key)\r\n  if (!!data) {\r\n    return JSON.parse(data)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nfunction store (key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data))\r\n}\r\n\r\nfunction clear (key) {\r\n  if (!!localStorage.getItem(key)) {\r\n    localStorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport function getMyRecipeList () {\r\n  return get(KEYS.MY_RECIPE_LIST, [])\r\n}\r\n\r\nexport function getMyShoppingList () {\r\n  return get(KEYS.MY_SHOPPING_LIST, [])\r\n}\r\n\r\nexport function storeCharacterData (characterData) {\r\n  store(KEYS.CHARACTER_DATA, characterData)\r\n}\r\n\r\nexport function storeCraftingClassData (craftingClasses) {\r\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\r\n}\r\n\r\nexport function storeMyRecipeList (myRecipeList) {\r\n  console.log('storing this', myRecipeList)\r\n  store(KEYS.MY_RECIPE_LIST, myRecipeList)\r\n}\r\n\r\nexport function storeMyShoppingList (myShoppingList) {\r\n  store(KEYS.MY_SHOPPING_LIST, myShoppingList)\r\n}\r\n\r\nexport function clearCharacterData () {\r\n  clear(KEYS.CHARACTER_DATA)\r\n}\r\n\r\nexport function clearCraftingClassData () {\r\n  clear(KEYS.CRAFTING_CLASS_DATA)\r\n}\r\n\r\nexport function clearMyRecipeList () {\r\n  clear(KEYS.MY_RECIPE_LIST)\r\n}\r\n\r\nexport function clearMyShoppingList () {\r\n  clear(KEYS.MY_SHOPPING_LIST)\r\n}\r\n\r\nexport function retrieveAndUpdateCraftingClassData () {\r\n  // get the default crafting class data\r\n  const defaultCraftingClasses = getDefaultCraftingClasses()\r\n\r\n  // retrieve the stored data from local storage\r\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\r\n\r\n  // if there is no stored data, return the default data\r\n  if (!storedData) {\r\n    return defaultCraftingClasses\r\n  }\r\n\r\n  // if there is stored data, convert it to JSON\r\n  const craftingClasses = JSON.parse(storedData)\r\n\r\n  // create a variable for the result\r\n  const result = []\r\n\r\n  // cycle through all \"default\" classes\r\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\r\n    // retrieve the matching stored class\r\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\r\n\r\n    // if there is no matching stored class data, add the default for this class to the result\r\n    if (!storedCraftingClass) {\r\n      result.push(defaultCraftingClass)\r\n      return\r\n    }\r\n\r\n    // get any added data to the default data set and apply it to the stored data\r\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\r\n    if (classDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, classDiffs)\r\n    }\r\n\r\n    // get any leveling guide data and remove it from stored data\r\n    const levelingGuideDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.key === 'levelingGuide')\r\n    if (levelingGuideDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, levelingGuideDiffs)\r\n    }\r\n\r\n    // add this record to the result to return\r\n    result.push(storedCraftingClass)\r\n  })\r\n\r\n  // send back the updated stored data\r\n  return result\r\n}\r\n\r\nexport function retrieveAndUpdateCharacterData () {\r\n  // get the stored character data\r\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\r\n\r\n  // if there is no character data, return undefined\r\n  if (!storedData) {\r\n    return undefined\r\n  }\r\n\r\n  // if there is, update it\r\n  // TBD\r\n\r\n  // return the character data\r\n  return JSON.parse(storedData)\r\n}\r\n\r\nexport function updateCraftingClassDataWithCharacterData () {\r\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\r\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\r\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\r\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\r\n\r\n  return _map(craftingClassData, c => {\r\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\r\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\r\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\r\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\r\n    return c\r\n  })\r\n}\r\n\r\nexport function getDefaultCraftingClasses () {\r\n  return _map(CRAFTING_CLASSES, c => {\r\n    c.currentLevel = 1\r\n    c.currentExperience = 0\r\n    c.experiencePerItem = 1\r\n    c.totalExperience = 300\r\n    return c\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { map, get, isArray, set, toLower } from 'lodash'\r\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\r\n\r\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\r\nconst BASE_URL = 'https://xivapi.com'\r\n\r\nexport const searchForCharacter = async (server, name, page = 1) => {\r\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\r\n  return get(result, 'data', [])\r\n}\r\n\r\nexport const getCharacter = async id => {\r\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\r\n  set(result, 'data.characterId', id)\r\n  return get(result, 'data', {})\r\n}\r\n\r\nconst search = async (indexes, filters, sortField, columns, searchString) => {\r\n  if (isArray(indexes)) {\r\n    indexes = indexes.join(',')\r\n  }\r\n\r\n  if (isArray(filters)) {\r\n    filters = filters.join(',')\r\n  }\r\n\r\n  const params = {\r\n    indexes,\r\n    filters,\r\n    columns,\r\n    string: searchString\r\n  }\r\n\r\n  if (!!sortField) {\r\n    params['sort_field'] = sortField\r\n    params['sort_order'] = 'asc'\r\n  }\r\n\r\n  const result = await axios.get(`${BASE_URL}/search`, {\r\n    params\r\n  })\r\n  return get(result, 'data', {})\r\n}\r\n\r\nexport const recipeSearch = async (searchString = '', options = { exact: false, page: 1 }) => {\r\n  const indexes = 'recipe'\r\n  const size = 10\r\n  const columns = [\r\n    'ID',\r\n    'ClassJob.Abbreviation_en',\r\n    'ClassJob.Icon',\r\n    'ClassJob.NameEnglish',\r\n    'RecipeLevelTable.ClassJobLevel',\r\n    'Name',\r\n    'Icon'\r\n  ]\r\n\r\n  const { exact, page } = options\r\n\r\n  searchString = toLower(searchString)\r\n\r\n  if (!exact) {\r\n    searchString = searchString.replace(' ', '*')\r\n  }\r\n\r\n  const paramsToSend = {\r\n    indexes,\r\n    body: {\r\n      query: {\r\n        bool: {\r\n          must: [\r\n            {\r\n              wildcard: {\r\n                'NameCombined_en': `*${searchString}*`\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      size,\r\n      from: size * (page - 1),\r\n      sort: [\r\n        {\r\n          'RecipeLevelTable.ClassJobLevel': 'asc'\r\n        }\r\n      ]\r\n    },\r\n    columns,\r\n    limit: size,\r\n    page\r\n  }\r\n\r\n  if (!!options.abbreviation) {\r\n    let { abbreviation } = options\r\n    const minimum_should_match = 1\r\n\r\n    abbreviation = isArray(abbreviation) ? abbreviation : [abbreviation]\r\n\r\n    paramsToSend.body.query.bool.minimum_should_match = minimum_should_match\r\n    paramsToSend.body.query.bool.should = map(abbreviation, a => ({\r\n      match: {\r\n        'ClassJob.Abbreviation_en': a\r\n      }\r\n    }))\r\n  }\r\n\r\n  const result = await axios.post(`${BASE_URL}/search`,\r\n    paramsToSend\r\n  )\r\n  return get(result, 'data', {})\r\n}\r\n\r\nexport const getIconUrl = iconRelativePath => `${BASE_URL}${iconRelativePath}`\r\n\r\nexport const getRecipesById = async recipeIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name'\r\n  ]\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    columns.push(`AmountIngredient${i}`)\r\n    columns.push(`ItemIngredient${i}.ID`)\r\n    columns.push(`ItemIngredient${i}.Icon`)\r\n    columns.push(`ItemIngredient${i}.Name`)\r\n    columns.push(`ItemIngredientRecipe${i}`)\r\n  }\r\n\r\n  const result = await axios.get(`${BASE_URL}/recipe`, {\r\n    params: {\r\n      ids: recipeIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n  return get(result, 'data', {})\r\n}\r\n\r\nexport const getItemsById = async itemIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name',\r\n    'Icon',\r\n    'GameContentLinks'\r\n  ]\r\n\r\n  const result = await axios.get(`${BASE_URL}/item`, {\r\n    params: {\r\n      ids: itemIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n\r\n  return get(result, 'data', {})\r\n}\r\n","const LODESTONE = 'LODESTONE'\r\nconst LOCAL = 'LOCAL'\r\n\r\nconst REQUEST = 'REQUEST'\r\nconst SUCCESS = 'SUCCESS'\r\nconst FAILURE = 'FAILURE'\r\n\r\nexport const LOCAL_CLASS_DATA_RETRIEVAL = `${LOCAL}_CLASS_DATA_RETRIEVAL`\r\nexport const LOCAL_CLASS_DATA_STORE = `${LOCAL}_CLASS_DATA_STORE`\r\nexport const LOCAL_CLASS_DATA_CLEAR = `${LOCAL}_CLASS_DATA_CLEAR`\r\n\r\nexport const LOCAL_CHARACTER_DATA_RETRIEVAL = `${LOCAL}_CHARACTER_DATA_RETRIEVAL`\r\nexport const LOCAL_CHARACTER_DATA_STORE = `${LOCAL}_CHARACTER_DATA_STORE`\r\nexport const LOCAL_CHARACTER_DATA_CLEAR = `${LOCAL}_CHARACTER_DATA_CLEAR`\r\n\r\nexport const LODESTONE_CHARACTER_DATA_REQUEST = `${LODESTONE}_CHARACTER_DATA_${REQUEST}`\r\nexport const LODESTONE_CHARACTER_DATA_SUCCESS = `${LODESTONE}_CHARACTER_DATA_${SUCCESS}`\r\nexport const API_REQUEST_FAILURE = `${LODESTONE}_CHARACTER_DATA_${FAILURE}`\r\n","import * as LocalStorage from '../../service/localStorage'\r\nimport * as XivApi from '../../service/xivApi'\r\nimport * as T from './types'\r\n\r\nconst localClassDataRetrieve = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localClassDataStore = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localClassDataClear = () => ({\r\n  type: T.LOCAL_CLASS_DATA_CLEAR\r\n})\r\n\r\nconst localCharacterDataRetrieve = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataStore = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataClear = () => ({\r\n  type: T.LOCAL_CHARACTER_DATA_CLEAR\r\n})\r\n\r\nconst lodestoneCharacterDataRequest = characterId => ({\r\n  type: T.LODESTONE_CHARACTER_DATA_REQUEST,\r\n  characterId\r\n})\r\n\r\nconst apiRequestSuccess = (type, payload) => ({\r\n  type,\r\n  payload\r\n})\r\n\r\nconst apiRequestFailure = (type, error) => ({\r\n  type,\r\n  error\r\n})\r\n\r\nexport const getLocalClassData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCraftingClassData()\r\n    dispatch(localClassDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const saveLocalClassData = classData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCraftingClassData(classData)\r\n    dispatch(localClassDataStore(classData))\r\n  }\r\n}\r\n\r\nexport const clearLocalClassData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCraftingClassData()\r\n    dispatch(localClassDataClear())\r\n  }\r\n}\r\n\r\nexport const saveLocalCharacterData = characterData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCharacterData(characterData)\r\n    dispatch(localCharacterDataStore(characterData))\r\n  }\r\n}\r\n\r\nexport const getLocalCharacterData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCharacterData()\r\n    dispatch(localCharacterDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const clearLocalCharacterData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCharacterData()\r\n    dispatch(localCharacterDataClear())\r\n  }\r\n}\r\n\r\nexport const getLodestoneCharacterData = characterId => {\r\n  return async dispatch => {\r\n    dispatch(lodestoneCharacterDataRequest(characterId))\r\n    try {\r\n      const payload = await XivApi.getCharacter(characterId)\r\n      dispatch(apiRequestSuccess(T.LODESTONE_CHARACTER_DATA_SUCCESS, payload))\r\n      dispatch(saveLocalCharacterData(payload))\r\n      dispatch(saveLocalClassData(LocalStorage.updateCraftingClassDataWithCharacterData()))\r\n      dispatch(getLocalClassData())\r\n    } catch (err) {\r\n      dispatch(apiRequestFailure(T.API_REQUEST_FAILURE, err))\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap'\r\nimport { get, map as _map } from 'lodash'\r\nimport XIV_SERVERS from '../../data/xiv-servers'\r\nimport * as XivApi from '../../service/xivApi'\r\n\r\nclass LodestoneCharacterModal extends React.Component {\r\n  state = {}\r\n\r\n  handleSetField (event) {\r\n    const { target: { name, value } } = event\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSearch (page = 1, event) {\r\n    !!event && event.preventDefault()\r\n    this.setState({\r\n      loading: true,\r\n      page\r\n    }, this.performSearch)\r\n  }\r\n\r\n  async performSearch () {\r\n    const { name, server, page } = this.state\r\n    const result = await XivApi.searchForCharacter(server, name, page)\r\n    this.setState({\r\n      lodestoneResults: result,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleClose () {\r\n    const { onHide } = this.props\r\n    this.setState({\r\n      name: undefined,\r\n      server: undefined,\r\n      lodestoneResults: undefined,\r\n      characterId: undefined\r\n    }, onHide)\r\n  }\r\n\r\n  handleSubmitCharacterSelection () {\r\n    const { getLodestoneCharacterData } = this.props\r\n    const { characterId } = this.state\r\n\r\n    getLodestoneCharacterData(characterId)\r\n    this.handleClose()\r\n  }\r\n\r\n  render () {\r\n    const { show } = this.props\r\n    const { characterId, loading, lodestoneResults, name, server } = this.state\r\n\r\n    const results = get(lodestoneResults, 'Results', [])\r\n    const prevPage = get(lodestoneResults, 'Pagination.PagePrev')\r\n    const nextPage = get(lodestoneResults, 'Pagination.PageNext')\r\n\r\n    return (\r\n      <Modal show={show} onHide={this.handleClose.bind(this)}>\r\n        <Form\r\n          onSubmit={this.handleSearch.bind(this, 1)}\r\n          onReset={this.handleClose.bind(this)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Import Character Data\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Label>Server</Form.Label>\r\n              <Form.Control name=\"server\" as=\"select\" onChange={this.handleSetField.bind(this)}>\r\n                <option>Choose a Server</option>\r\n                {_map(XIV_SERVERS, (server, key) => (\r\n                  <option key={key} value={server}>{server}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control name=\"name\" type=\"text\" onChange={this.handleSetField.bind(this)} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" disabled={!name || !server}>\r\n              Search\r\n            </Button>\r\n            <hr />\r\n            {!!loading && (\r\n              <div className=\"fullWidth text-center\">\r\n                <Spinner animation=\"grow\" variant=\"danger\" />\r\n                <Spinner animation=\"grow\" variant=\"warning\" />\r\n                <Spinner animation=\"grow\" variant=\"success\" />\r\n              </div>\r\n            )}\r\n            {!loading && !results.length && (\r\n              <div>\r\n                No results available.\r\n              </div>\r\n            )}\r\n            {!loading && !!results.length && (\r\n              <React.Fragment>\r\n                <div className=\"lodestoneResults\">\r\n                  {results.map((char, key) => {\r\n                    const { ID, Name, Avatar } = char\r\n                    return (\r\n                      <div\r\n                        key={key}\r\n                        className=\"flex justify-between items-center\"\r\n                      >\r\n                        <Form.Check\r\n                          id={ID}\r\n                          type=\"radio\"\r\n                          name=\"characterId\"\r\n                          value={ID}\r\n                          onChange={this.handleSetField.bind(this)}\r\n                        />\r\n                        <label htmlFor={ID}>{Name}</label>\r\n                        <label htmlFor={ID}>\r\n                          <img className=\"avatar\" src={Avatar} alt={Name} />\r\n                        </label>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n                <div className=\"flex justify-between items-center pt2\">\r\n                  <div className=\"w-50 tl\">\r\n                    {!!prevPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, prevPage)}>\r\n                        Prev Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"w-50 tr\">\r\n                    {nextPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, nextPage)}>\r\n                        Next Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"reset\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"primary\"\r\n              disabled={!characterId}\r\n              onClick={this.handleSubmitCharacterSelection.bind(this)}\r\n            >\r\n              Load Data\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired\r\n}\r\n\r\nLodestoneCharacterModal.defaultProps = {\r\n  show: false\r\n}\r\n\r\nexport default LodestoneCharacterModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { get } from 'lodash'\r\nimport { NavDropdown } from 'react-bootstrap'\r\nimport { clearLocalCharacterData, clearLocalClassData, getLodestoneCharacterData } from '../../store/local/actions'\r\nimport LodestoneCharacterModal from './LodestoneCharacterModal'\r\n\r\nconst getDropdownTitle = characterData => {\r\n  if (get(characterData, 'Character.Avatar')) {\r\n    const { Character: { Avatar, Name } } = characterData\r\n    return (\r\n      <span className=\"items-center\">\r\n        {Name}\r\n        <span className=\"ml2\"><img src={Avatar} alt={Name} className=\"avatar\" /></span>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return 'Options'\r\n}\r\n\r\nclass LodestoneCharacterMenu extends React.Component {\r\n  state = {\r\n    showModal: false\r\n  }\r\n\r\n  handleModalToggle (showModal) {\r\n    this.setState({\r\n      showModal: showModal\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      characterData,\r\n      clearLocalCharacterData,\r\n      clearLocalClassData,\r\n      getLodestoneCharacterData,\r\n      lodestoneResults,\r\n      searchLodestoneCharacterData\r\n    } = this.props\r\n\r\n    const importText = `Import ${!characterData ? '' : 'Different'} Character Data`.replace('  ', ' ')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavDropdown\r\n          alignRight\r\n          title={getDropdownTitle(characterData)}\r\n        >\r\n          {!!characterData && (\r\n            <React.Fragment>\r\n              <NavDropdown.Item onClick={getLodestoneCharacterData.bind(this, characterData.characterId)}>\r\n                Refresh Character Data\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n            </React.Fragment>\r\n          )}\r\n          <NavDropdown.Item onClick={this.handleModalToggle.bind(this, true)}>\r\n            {importText}\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={clearLocalClassData}>\r\n            Clear Crafting Class Data\r\n          </NavDropdown.Item>\r\n          {!!characterData && (\r\n            <NavDropdown.Item onClick={clearLocalCharacterData}>\r\n              Clear Character Data\r\n            </NavDropdown.Item>\r\n          )}\r\n        </NavDropdown>\r\n        <LodestoneCharacterModal\r\n          lodestoneResults={lodestoneResults}\r\n          onHide={this.handleModalToggle.bind(this, false)}\r\n          searchLodestoneCharacterData={searchLodestoneCharacterData}\r\n          show={this.state.showModal}\r\n          getLodestoneCharacterData={getLodestoneCharacterData}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterMenu.propTypes = {\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId)),\r\n  clearLocalCharacterData: () => dispatch(clearLocalCharacterData()),\r\n  clearLocalClassData: () => dispatch(clearLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LodestoneCharacterMenu)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Nav, Navbar, NavbarBrand, Badge } from 'react-bootstrap'\r\nimport LodestoneCharacterMenu from './LodestoneCharacterMenu'\r\n\r\nexport default class Navigation extends React.Component {\r\n  render () {\r\n    const { characterData } = this.props\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <LinkContainer to=\"/\">\r\n          <NavbarBrand>\r\n            FFXIV Crafting & Gathering Helper\r\n          </NavbarBrand>\r\n        </LinkContainer>\r\n        <Nav className=\"mr-auto\">\r\n          <LinkContainer to=\"/calculations\">\r\n            <Nav.Link>\r\n              Calculations\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/recipes/all\">\r\n            <Nav.Link>\r\n              Recipes <Badge variant=\"primary\">Beta</Badge>\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n        </Nav>\r\n        <Nav>\r\n          <LodestoneCharacterMenu\r\n            characterData={characterData}\r\n          />\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  characterData: PropTypes.shape(),\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport { orderBy } from 'lodash'\r\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\r\n\r\nexport default class FilterDropdown extends React.Component {\r\n  render () {\r\n    const { label, applyFilterFunc } = this.props\r\n    return (\r\n      <DropdownButton title={`Showing ${label}`}>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => !!c)}>\r\n          All\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'crafting')}>\r\n          Crafting Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'gathering')}>\r\n          Gathering Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        {orderBy(CRAFTING_CLASSES, 'name').map((craftingClass, key) => (\r\n          <Dropdown.Item\r\n            key={key}\r\n            onClick={applyFilterFunc.bind(this, c => c.abbreviation === craftingClass.abbreviation)}\r\n          >\r\n            {craftingClass.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n    )\r\n  }\r\n}\r\n\r\nFilterDropdown.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  applyFilterFunc: PropTypes.func.isRequired\r\n}\r\n","export function calculateRemainingExp (currentExp, totalExp) {\r\n  return Math.max(totalExp - currentExp, 0)\r\n}\r\n\r\nexport function calculateRemainingItems (remainingExp, expPerItem) {\r\n  return Math.ceil(remainingExp / expPerItem)\r\n}\r\n\r\nexport function calculateProgressPercentage (currentExp, totalExp) {\r\n  return totalExp <= 0 ? 0 : Math.floor((currentExp / totalExp) * 100)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortableTableHeaderCell extends React.Component {\r\n  render () {\r\n    const { className, text, sortFunc, applySorting } = this.props\r\n    return (\r\n      <th className={className} onClick={applySorting.bind(this, sortFunc)}\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {text}\r\n        <FontAwesomeIcon\r\n          className=\"margin-left\"\r\n          icon={faSort}\r\n        />\r\n      </th>\r\n    )\r\n  }\r\n}\r\n\r\nSortableTableHeaderCell.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  sortFunc: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\r\n  applySorting: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SortableTableHeaderCell\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport SortableTableHeaderCell from '../common/SortableTableHeaderCell'\r\n\r\nconst tableHeaders = [\r\n  { name: 'Class', sortFunc: 'name' },\r\n  { name: 'Level', sortFunc: 'currentLevel' },\r\n  { name: 'Current Exp.', sortFunc: 'currentExperience' },\r\n  { name: 'Required Exp.', sortFunc: undefined },\r\n  { name: 'Remaining Exp.', sortFunc: c => calculateRemainingExp(c.currentExperience, c.totalExperience) },\r\n  { name: 'Exp. Per Item', sortFunc: 'experiencePerItem' },\r\n  {\r\n    name: 'Remaining Items',\r\n    sortFunc: c => calculateRemainingItems(\r\n      calculateRemainingExp(c.currentExperience, c.totalExperience), c.experiencePerItem\r\n    )\r\n  },\r\n  { name: 'Progress', sortFunc: c => calculateProgressPercentage(c.currentExperience, c.totalExperience) }\r\n]\r\n\r\nexport default class CalculationsTableHeader extends React.Component {\r\n  render () {\r\n    const { applySortFunc } = this.props\r\n    return (\r\n      <thead>\r\n      <tr>\r\n        {tableHeaders.map((h, key) => {\r\n          if (h.sortFunc) {\r\n            return (\r\n              <SortableTableHeaderCell\r\n                key={key}\r\n                text={h.name}\r\n                sortFunc={h.sortFunc}\r\n                applySorting={applySortFunc}\r\n              />\r\n            )\r\n          } else {\r\n            return (\r\n              <th key={key}>\r\n                {h.name}\r\n              </th>\r\n            )\r\n          }\r\n        })}\r\n      </tr>\r\n      </thead>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableHeader.propTypes = {\r\n  applySortFunc: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport Form from 'react-bootstrap/es/Form'\r\nimport { OverlayTrigger, Popover, ProgressBar } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\r\nimport { find, set, toNumber } from 'lodash'\r\nimport LEVELING_GUIDE_LINKS from '../../data/leveling-guide-links'\r\n\r\nclass CalculationsTableBody extends React.Component {\r\n  state = {\r\n    focusedRow: undefined\r\n  }\r\n\r\n  getLevelingGuidePageUrl (abbreviation, currentLevel) {\r\n    const classGuideData = find(LEVELING_GUIDE_LINKS, g => g.abbreviation === abbreviation)\r\n    const { levelingGuide } = classGuideData\r\n\r\n    const matchedPage = find(levelingGuide.pages, p => {\r\n      const { maxLevel, minLevel } = p\r\n\r\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\r\n        return true\r\n      }\r\n    })\r\n\r\n    return !!matchedPage ? `${levelingGuide.url}/${matchedPage.page}/` : levelingGuide.url\r\n  }\r\n\r\n  validateNumericFieldChange (abbreviation, event) {\r\n    const { target: { value, max, min } } = event\r\n    const { updateField } = this.props\r\n\r\n    if (!!min && toNumber(value) < min) {\r\n      set(event, 'target.value', min)\r\n    }\r\n\r\n    if (!!max && toNumber(value) > max) {\r\n      set(event, 'target.value', max)\r\n    }\r\n\r\n    updateField(abbreviation, event)\r\n  }\r\n\r\n  handleRowFocus (abbreviation, focused) {\r\n    this.setState({\r\n      focusedRow: focused ? abbreviation : undefined\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { craftingClasses } = this.props\r\n    return (\r\n      <tbody>\r\n      {craftingClasses.map(c => {\r\n        const remainingExperience = calculateRemainingExp(c.currentExperience, c.totalExperience)\r\n        const remainingItems = calculateRemainingItems(remainingExperience, c.experiencePerItem)\r\n        const progressPercentage = calculateProgressPercentage(c.currentExperience, c.totalExperience)\r\n\r\n        const popover = (\r\n          <Popover id={`links-${c.name}`}>\r\n            <a\r\n              href={this.getLevelingGuidePageUrl(c.abbreviation, c.currentLevel)}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Leveling Guide\r\n            </a>\r\n          </Popover>\r\n        )\r\n\r\n        return (\r\n          <tr\r\n            key={`calculationTableRow${c.abbreviation}`}\r\n            onFocus={this.handleRowFocus.bind(this, c.abbreviation, true)}\r\n            onBlur={this.handleRowFocus.bind(this, c.abbreviation, false)}\r\n            className={cx(this.state.focusedRow === c.abbreviation ? 'focused' : undefined)}\r\n          >\r\n            <td>\r\n              <div className=\"flex justify-between items-center\">\r\n                {c.name}\r\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\r\n                  <FontAwesomeIcon icon={faIcon} className=\"text-primary pointer\" />\r\n                </OverlayTrigger>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentLevel\"\r\n                type=\"number\"\r\n                value={c.currentLevel}\r\n                min=\"1\"\r\n                max=\"70\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentExperience\"\r\n                type=\"number\"\r\n                value={c.currentExperience}\r\n                min=\"0\"\r\n                max={c.totalExperience}\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{c.totalExperience}</td>\r\n            <td>{remainingExperience}</td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"experiencePerItem\"\r\n                type=\"number\"\r\n                value={c.experiencePerItem}\r\n                min=\"1\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{remainingItems}</td>\r\n            <td>\r\n              <ProgressBar\r\n                now={progressPercentage}\r\n                label={`${c.currentExperience} / ${c.totalExperience} (${progressPercentage}%)`}\r\n              />\r\n            </td>\r\n          </tr>\r\n        )\r\n      })}\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableBody.propTypes = {\r\n  craftingClasses: PropTypes.arrayOf(PropTypes.shape()).isRequired\r\n}\r\n\r\nexport default CalculationsTableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Table } from 'react-bootstrap'\r\nimport { concat, filter, find, isEqual, orderBy, set, toNumber } from 'lodash'\r\nimport FilterDropdown from './FilterDropdown'\r\nimport CalculationsTableHeader from './CalculationsTableHeader'\r\nimport CalculationsTableBody from './CalculationsTableBody'\r\nimport EXP_PER_LEVEL from '../../data/exp-per-level'\r\nimport { saveLocalClassData } from '../../store/local/actions'\r\n\r\nclass CraftingGatheringCalculator extends React.Component {\r\n  state = {\r\n    sort: {\r\n      func: 'name',\r\n      direction: 'asc'\r\n    },\r\n    filter: {\r\n      func: undefined,\r\n      label: 'All'\r\n    }\r\n  }\r\n\r\n  applySort (sortFunc) {\r\n    const { sort } = this.state\r\n    const sortDirection = isEqual(sortFunc, sort.func) && sort.direction === 'asc' ? 'desc' : 'asc'\r\n    this.setState({\r\n      sort: {\r\n        func: sortFunc,\r\n        direction: sortDirection\r\n      }\r\n    })\r\n  }\r\n\r\n  applyFilter (filterFunc, event) {\r\n    this.setState({\r\n      filter: {\r\n        func: filterFunc,\r\n        label: event.target.innerText\r\n      }\r\n    })\r\n  }\r\n\r\n  getSortedCraftingClassData (craftingClassData) {\r\n    const { sort } = this.state\r\n    return orderBy(craftingClassData, sort.func, sort.direction)\r\n  }\r\n\r\n  getFilteredCraftingClassData (craftingClassData) {\r\n    const { filter: { func } } = this.state\r\n    return filter(craftingClassData, func)\r\n  }\r\n\r\n  updateField (abbreviation, event) {\r\n    const { target: { value, name } } = event\r\n    const { craftingClassData, saveLocalClassData } = this.props\r\n\r\n    const targetCraftingClass = find(craftingClassData, c => c.abbreviation === abbreviation)\r\n    const otherCraftingClasses = filter(craftingClassData, c => c.abbreviation !== abbreviation)\r\n    set(targetCraftingClass, name, toNumber(value))\r\n\r\n    if (name === 'currentLevel') {\r\n      set(targetCraftingClass, 'totalExperience', EXP_PER_LEVEL[value])\r\n    }\r\n\r\n    const updatedCraftingClasses = orderBy(concat(otherCraftingClasses, targetCraftingClass), ['type', 'name'])\r\n\r\n    saveLocalClassData(updatedCraftingClasses)\r\n  }\r\n\r\n  render () {\r\n    const { craftingClassData } = this.props\r\n    const sortedAndFilteredCraftingClassData = this.getSortedCraftingClassData(\r\n      this.getFilteredCraftingClassData(craftingClassData)\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"w-100 pv3 tc\">\r\n          <FilterDropdown label={this.state.filter.label} applyFilterFunc={this.applyFilter.bind(this)} />\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <Table className=\"calculations\" striped hover>\r\n            <CalculationsTableHeader applySortFunc={this.applySort.bind(this)} />\r\n            <CalculationsTableBody\r\n              craftingClasses={sortedAndFilteredCraftingClassData}\r\n              updateField={this.updateField.bind(this)}\r\n            />\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCraftingGatheringCalculator.propTypes = {\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveLocalClassData: (classData) => dispatch(saveLocalClassData(classData))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CraftingGatheringCalculator)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, FormControl } from 'react-bootstrap'\r\n\r\nexport default class RecipeSearchForm extends React.Component {\r\n  render () {\r\n    const { handleChange, handleReset, handleSubmit, recipeSearchIsInvalid, recipeSearchString, searching } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <Form onReset={handleReset} onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Enter Your Search Term(s)</Form.Label>\r\n            <Form.Control\r\n              as=\"input\"\r\n              name=\"recipeSearchString\"\r\n              value={recipeSearchString}\r\n              onChange={handleChange}\r\n              isInvalid={!!recipeSearchIsInvalid}\r\n            />\r\n            <FormControl.Feedback type=\"invalid\">\r\n              Please enter a search term.\r\n            </FormControl.Feedback>\r\n          </Form.Group>\r\n          <Button type=\"reset\" variant=\"danger\" className=\"mr1\" disabled={!!searching}>Clear</Button>\r\n          <Button type=\"submit\" variant=\"primary\" className=\"ml1\" disabled={!!searching}>Go!</Button>\r\n        </Form>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchString: PropTypes.string.isRequired,\r\n  searching: PropTypes.bool.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { find, get } from 'lodash'\r\nimport { Button, Spinner, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare, faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class RecipeSearchResult extends React.Component {\r\n  render () {\r\n    const {\r\n      handlePageChange,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      myList,\r\n      pagination,\r\n      ready,\r\n      recipeList\r\n    } = this.props\r\n\r\n    if (!ready) {\r\n      return (\r\n        <div className=\"tc\">\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (!recipeList.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const pagePrev = get(pagination, 'PagePrev')\r\n    const pageNext = get(pagination, 'PageNext')\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Add/Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {recipeList.map((r, key) => {\r\n          const iconUrl = getIconUrl(get(r, 'Icon', ''))\r\n          const name = get(r, 'Name')\r\n          const craftingClassName = get(r, 'ClassJob.NameEnglish')\r\n          const level = get(r, 'RecipeLevelTable.ClassJobLevel')\r\n          const isOnList = !!find(myList, item => get(item, 'ID') === get(r, 'ID'))\r\n\r\n          return (\r\n            <tr key={key}>\r\n              <td><img src={iconUrl} alt={name} /></td>\r\n              <td>{craftingClassName}</td>\r\n              <td>{name}</td>\r\n              <td>{level}</td>\r\n              <td>\r\n                <Button onClick={handleToggleListItem.bind(this, r)} variant={isOnList ? 'danger' : 'success'}>\r\n                  <FontAwesomeIcon\r\n                    icon={isOnList ? faMinusSquare : faPlusSquare}\r\n                  />\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n        <tfoot>\r\n        <tr>\r\n          <td colSpan={5}>\r\n            <div className=\"w-third dib tl\">\r\n              {!!pagePrev && (\r\n                <Button value={pagePrev} onClick={handlePageChange}>\r\n                  Previous\r\n                </Button>\r\n              )}\r\n            </div>\r\n            <div className=\"w-third dib tc\">\r\n              <Button onClick={handleTabChange.bind(this, 'recipe-list')}>\r\n                Go to Recipe List\r\n              </Button>\r\n            </div>\r\n            <div className=\"w-third dib tr\">\r\n              {!!pageNext && (\r\n                <Button value={pageNext} onClick={handlePageChange}>\r\n                  Next\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        </tfoot>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchResult.propTypes = {\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  pagination: PropTypes.shape().isRequired,\r\n  recipeList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  ready: PropTypes.bool.isRequired\r\n}\r\n\r\nRecipeSearchResult.defaultProps = {\r\n  myList: [],\r\n  pagination: {},\r\n  recipeList: [],\r\n  ready: true\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { get } from 'lodash'\r\nimport RecipeSearchForm from './RecipeSearchForm'\r\nimport RecipeSearchResult from './RecipeSearchResult'\r\n\r\nexport default class RecipeSearch extends React.Component {\r\n  render () {\r\n    const {\r\n      handleChange,\r\n      handlePageChange,\r\n      handleReset,\r\n      handleSubmit,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      myList,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchResults,\r\n      recipeSearchString,\r\n      searching\r\n    } = this.props\r\n\r\n    const pagination = get(recipeSearchResults, 'Pagination')\r\n    const recipeList = get(recipeSearchResults, 'Results')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <RecipeSearchForm\r\n          handleChange={handleChange}\r\n          handleReset={handleReset}\r\n          handleSubmit={handleSubmit}\r\n          recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n          recipeSearchString={recipeSearchString}\r\n          searching={searching}\r\n        />\r\n        <hr />\r\n        <RecipeSearchResult\r\n          handlePageChange={handlePageChange}\r\n          handleTabChange={handleTabChange}\r\n          handleToggleListItem={handleToggleListItem}\r\n          myList={myList}\r\n          pagination={pagination}\r\n          recipeList={recipeList}\r\n          ready={!searching}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearch.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchResults: PropTypes.shape(),\r\n  recipeSearchString: PropTypes.string.isRequired,\r\n  searching: PropTypes.bool.isRequired\r\n}\r\n\r\nRecipeSearch.defaultProps = {\r\n  myList: [],\r\n  recipeSearchResults: {}\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class MyList extends React.Component {\r\n  render () {\r\n    const {\r\n      handleClearList,\r\n      handleGenerateShoppingList,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      handleUpdateQuantity,\r\n      list\r\n    } = this.props\r\n\r\n    if (!list.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Items in List\r\n          <hr />\r\n          <Button onClick={handleTabChange.bind(this, 'search')}>\r\n            Back to Search\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Quantity</th>\r\n          <th>Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {list.map((i, k) => (\r\n          <tr key={k}>\r\n            <td><img src={getIconUrl(i.Icon)} alt={i.Name} /></td>\r\n            <td>{i.ClassJob.NameEnglish}</td>\r\n            <td>{i.Name}</td>\r\n            <td>{i.RecipeLevelTable.ClassJobLevel}</td>\r\n            <td>\r\n              <Form.Control type=\"number\" value={i.quantity} onChange={handleUpdateQuantity.bind(this, i)} />\r\n            </td>\r\n            <td>\r\n              <Button variant=\"danger\" onClick={handleToggleListItem.bind(this, i)}>\r\n                <FontAwesomeIcon icon={faMinusSquare} />\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n        {list.length && (\r\n          <tfoot>\r\n          <tr>\r\n            <td colSpan={6} className=\"tc\">\r\n              <div className=\"space-between\">\r\n                <Button variant=\"danger\" onClick={handleClearList}>\r\n                  Clear Recipe List\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleTabChange.bind(this, 'shopping-list')}>\r\n                  View My Shopping List\r\n                </Button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </tfoot>\r\n        )}\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nMyList.propTypes = {\r\n  handleClearList: PropTypes.func.isRequired,\r\n  handleGenerateShoppingList: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  handleUpdateQuantity: PropTypes.func.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.shape({\r\n    ClassJob: PropTypes.shape({\r\n      Abbreviation_en: PropTypes.string.isRequired,\r\n      NameEnglish: PropTypes.string.isRequired\r\n    }),\r\n    Icon: PropTypes.string.isRequired,\r\n    Name: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number,\r\n    RecipeLevelTable: PropTypes.shape({\r\n      ClassJobLevel: PropTypes.number.isRequired\r\n    }).isRequired\r\n  })).isRequired\r\n}\r\n\r\nMyList.defaultProps = {\r\n  list: []\r\n}\r\n","const RECIPE_LIST = 'RECIPE_LIST'\r\nconst SHOPPING_LIST = 'SHOPPING_LIST'\r\n\r\n// export const RECIPE_LIST_ADD = `${RECIPE_LIST}_ADD`\r\n// export const RECIPE_LIST_REMOVE = `${RECIPE_LIST}_REMOVE`\r\nexport const RECIPE_LIST_CLEAR = `${RECIPE_LIST}_CLEAR`\r\nexport const RECIPE_LIST_SAVE = `${RECIPE_LIST}_SAVE`\r\n\r\nexport const SHOPPING_LIST_CREATE = `${SHOPPING_LIST}_CREATE`\r\nexport const SHOPPING_LIST_CLEAR = `${SHOPPING_LIST}_CLEAR`\r\n","import { concat, filter, find, forEach, get, includes, map, set, toLower, uniqBy, orderBy } from 'lodash'\r\nimport ITEM_TO_GATHERING_ITEM_MAPPING from '../data/item-to-gathering-item-mapping'\r\nimport GATHERING_ITEM_POINTS from '../data/gathering-item-points'\r\nimport AETHERYTE from '../data/aetheryte'\r\nimport FISHING_SPOTS from '../data/fishing-spots'\r\nimport * as XivApiService from './xivApi'\r\n\r\n/**\r\n * Gets a list of ingredients required to craft a given set of recipes.\r\n *\r\n * @param recipeList\r\n * @returns {Promise<*>}\r\n */\r\nexport const getIngredientListForRecipes = async recipeList => {\r\n  if (!recipeList || !recipeList.length) return {}\r\n\r\n  // we will want to keep the following lists:\r\n  // 1. Ingredients that can be gathered\r\n  const ingredientsGatherable = []\r\n\r\n  // 2. Ingredients that can be crafted\r\n  const ingredientsCrafted = []\r\n\r\n  // 3. Ingredients that can be obtained from monsters\r\n  const ingredientsOther = []\r\n\r\n  // 3. Ingredients that can be bought (that cannot be gathered or dropped by monsters)\r\n  const ingredientsPurchased = []\r\n\r\n  await getAndSortRecipeResults(recipeList,\r\n    ingredientsGatherable,\r\n    ingredientsCrafted,\r\n    ingredientsPurchased,\r\n    ingredientsOther\r\n  )\r\n\r\n  // get item IDs for the gatherable and purchasable things so we can get their info\r\n  const itemIds = map(concat(ingredientsGatherable, ingredientsOther), item => get(item, 'itemId'))\r\n  const itemData = await XivApiService.getItemsById(itemIds)\r\n\r\n  forEach(get(itemData, 'Results', []), item => {\r\n    const foundItem = find(ingredientsGatherable, ig => get(ig, 'itemId') === get(item, 'ID')) ||\r\n      find(ingredientsOther, io => get(io, 'itemId') === get(item, 'ID'))\r\n    set(foundItem, 'name', get(item, 'Name'))\r\n    set(foundItem, 'icon', XivApiService.getIconUrl(get(item, 'Icon')))\r\n    // set(foundItem, 'gameContentLinks', get(item, 'GameContentLinks', {}))\r\n    set(foundItem, 'gameContentLinks',\r\n      filter(\r\n        map(\r\n          get(item, 'GameContentLinks', {}), (value, key) => ({ key, value })\r\n        ), result => {\r\n          const val = toLower(result.key)\r\n          return includes(val, 'shop') && !includes(val, 'special')\r\n        }\r\n      )\r\n    )\r\n\r\n    if (!!get(foundItem, 'gameContentLinks.length')) {\r\n      ingredientsPurchased.push(foundItem)\r\n    }\r\n  })\r\n\r\n  // add gathering item data\r\n  addGatheringItemData(ingredientsGatherable)\r\n\r\n  // sort the results\r\n  return {\r\n    ingredientsCrafted: orderBy(uniqBy(ingredientsCrafted, ic => get(ic, 'ID')), 'Name'),\r\n    ingredientsGatherable: orderBy(ingredientsGatherable, 'name'),\r\n    ingredientsPurchased: orderBy(ingredientsPurchased, 'name'),\r\n    ingredientsOther: orderBy(ingredientsOther, 'name')\r\n  }\r\n}\r\n\r\nconst addGatheringItemData = ingredientsGatherable => {\r\n  forEach(ingredientsGatherable, item => {\r\n    const gatheringItemId = get(item, 'gatheringItemId')\r\n\r\n    if (!!gatheringItemId) {\r\n      const filteredGatheringPoints = filter(\r\n        GATHERING_ITEM_POINTS, point => get(point, 'ID', '').startsWith(`${gatheringItemId}.`)\r\n      )\r\n\r\n      const namePath = 'GatheringPoint.PlaceName.Name_en'\r\n      const areaPath = 'GatheringPoint.TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'GatheringPoint.TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringPoint.GatheringPointBase.GatheringLevel'\r\n      const typePath = 'GatheringPoint.GatheringPointBase.GatheringType.Name_en'\r\n      const aetherytePath = 'GatheringPoint.TerritoryType.AetheryteTargetID'\r\n\r\n      const pointData = map(filteredGatheringPoints, point => getPointData(\r\n        point,\r\n        namePath,\r\n        areaPath,\r\n        regionPath,\r\n        levelPath,\r\n        typePath,\r\n        aetherytePath\r\n      ))\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    } else {\r\n      const itemId = get(item, 'itemId')\r\n      const filteredFishingSpots = filter(FISHING_SPOTS, spot => {\r\n        for (let i = 0; i < 10; i++) {\r\n          const path = `Item${i}TargetID`\r\n          const fishId = get(spot, path)\r\n          if (fishId === itemId) return true\r\n        }\r\n      })\r\n\r\n      const namePath = 'PlaceName.Name_en'\r\n      const areaPath = 'TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringLevel'\r\n      const aetherytePath = 'TerritoryType.AetheryteTargetID'\r\n\r\n      const pointData = map(filteredFishingSpots, point => {\r\n        const pd = getPointData(\r\n          point,\r\n          namePath,\r\n          areaPath,\r\n          regionPath,\r\n          levelPath,\r\n          '',\r\n          aetherytePath\r\n        )\r\n        set(pd, 'type', 'Fishing')\r\n        set(pd, 'gatheringClass', 'Fisherman')\r\n        return pd\r\n      })\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    }\r\n  })\r\n}\r\n\r\nconst getPointData = (data, namePath, areaPath, regionPath, levelPath, typePath, aetherytePath) => {\r\n  const typeMap = {\r\n    'Mining': 'Miner',\r\n    'Quarrying': 'Miner',\r\n    'Logging': 'Botanist',\r\n    'Harvesting': 'Botanist'\r\n  }\r\n  const name = get(data, namePath)\r\n  const area = get(data, areaPath)\r\n  const region = get(data, regionPath)\r\n  const level = get(data, levelPath)\r\n  const type = get(data, typePath)\r\n  const aetheryteId = get(data, aetherytePath)\r\n\r\n  return {\r\n    name: name || get(find(AETHERYTE, a => get(a, 'ID') === aetheryteId), 'PlaceName.Name_en'),\r\n    area,\r\n    region,\r\n    level,\r\n    gatheringClass: get(typeMap, type),\r\n    type,\r\n    id: get(data, 'ID')\r\n  }\r\n}\r\n\r\nconst hasFishingSpotMatch = itemId => {\r\n  let matched = false\r\n  forEach(FISHING_SPOTS, spot => {\r\n    for (let i = 0; i < 10; i++) {\r\n      const path = `Item${i}TargetID`\r\n      const fishingId = get(spot, path)\r\n      if (itemId === fishingId) {\r\n        matched = true\r\n        return\r\n      }\r\n    }\r\n  })\r\n\r\n  return matched\r\n}\r\n\r\nconst getAndSortRecipeResults = async (\r\n  recipeList,\r\n  ingredientsGatherable,\r\n  ingredientsCrafted,\r\n  ingredientsPurchased,\r\n  ingredientsOther\r\n) => {\r\n  const recipeIds = map(recipeList, recipe => get(recipe, 'ID'))\r\n  const recipeResults = get(await XivApiService.getRecipesById(recipeIds), 'Results', [])\r\n  const nextRecipeResults = []\r\n  forEach(recipeResults, rr => {\r\n    const recipeListEntry = find(recipeList, rle => get(rle, 'ID') === get(rr, 'ID'))\r\n    set(rr, 'quantity', get(recipeListEntry, 'quantity'))\r\n\r\n    // go through each ingredient\r\n    for (let i = 0; i < 10; i++) {\r\n      const itemId = get(rr, `ItemIngredient${i}.ID`)\r\n      const amount = get(rr, `AmountIngredient${i}`)\r\n      const gatheringMapNode = find(ITEM_TO_GATHERING_ITEM_MAPPING, mapping => get(mapping, 'ItemID') === itemId)\r\n      const gatheringItemId = get(gatheringMapNode, 'GatheringItemID')\r\n      const ingredientRecipe = get(rr, `ItemIngredientRecipe${i}[0]`)\r\n      const quantity = get(rr, 'quantity')\r\n      const fishingSpotMatch = hasFishingSpotMatch(itemId)\r\n\r\n      if (!!gatheringItemId || !!fishingSpotMatch) {\r\n        const existingIngredientGatherable = find(ingredientsGatherable, ig => get(ig, 'itemId') === itemId)\r\n        if (!!existingIngredientGatherable) {\r\n          const existingAmount = get(existingIngredientGatherable, 'amount')\r\n          set(existingIngredientGatherable, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsGatherable.push({ itemId, gatheringItemId, amount: amount * quantity })\r\n        }\r\n      }\r\n\r\n      if (!!ingredientRecipe) {\r\n        set(ingredientRecipe, 'quantity', quantity * amount)\r\n        nextRecipeResults.push(ingredientRecipe)\r\n        ingredientsCrafted.push(ingredientRecipe)\r\n      }\r\n\r\n      if (!gatheringItemId && !ingredientRecipe && !fishingSpotMatch && !!itemId) {\r\n        const existingIngredientOther = find(ingredientsOther, ip => get(ip, 'itemId') === itemId)\r\n        if (!!existingIngredientOther) {\r\n          const existingAmount = get(existingIngredientOther, 'amount')\r\n          set(existingIngredientOther, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsOther.push({ itemId, amount: amount * quantity })\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  if (!!nextRecipeResults.length) {\r\n    await getAndSortRecipeResults(nextRecipeResults,\r\n      ingredientsGatherable,\r\n      ingredientsCrafted,\r\n      ingredientsPurchased,\r\n      ingredientsOther\r\n    )\r\n  }\r\n}\r\n","import * as T from './types'\r\nimport * as LocalStorageService from '../../service/localStorage'\r\nimport * as RecipeListService from '../../service/recipe'\r\n\r\nconst recipeListClear = () => ({\r\n  type: T.RECIPE_LIST_CLEAR\r\n})\r\n\r\nconst recipeListSave = recipeList => ({\r\n  type: T.RECIPE_LIST_SAVE,\r\n  recipeList\r\n})\r\n\r\nconst shoppingListClear = () => ({\r\n  type: T.SHOPPING_LIST_CLEAR\r\n})\r\n\r\nconst shoppingListCreate = shoppingList => ({\r\n  type: T.SHOPPING_LIST_CREATE,\r\n  shoppingList\r\n})\r\n\r\nexport const saveMyRecipeList = recipeList => dispatch => {\r\n  LocalStorageService.storeMyRecipeList(recipeList)\r\n  dispatch(recipeListSave(recipeList))\r\n  dispatch(createMyShoppingList(recipeList))\r\n}\r\n\r\nexport const clearMyRecipeList = () => dispatch => {\r\n  LocalStorageService.clearMyRecipeList()\r\n  dispatch(recipeListClear())\r\n  dispatch(clearMyShoppingList())\r\n}\r\n\r\nexport const createMyShoppingList = recipeList => async dispatch => {\r\n  const result = await RecipeListService.getIngredientListForRecipes(recipeList)\r\n  LocalStorageService.storeMyShoppingList(result)\r\n  dispatch(shoppingListCreate(result))\r\n}\r\n\r\nexport const clearMyShoppingList = () => dispatch => {\r\n  LocalStorageService.clearMyShoppingList()\r\n  dispatch(shoppingListClear())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Table, FormControl } from 'react-bootstrap'\r\nimport { isEqual, get } from 'lodash'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class ShoppingList extends React.Component {\r\n  state = {}\r\n\r\n  componentDidMount() {\r\n    this.updateGatherableIngredientsDropdowns()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const { shoppingList } = this.props\r\n\r\n    if (!isEqual(shoppingList, prevProps.shoppingList)) {\r\n      this.updateGatherableIngredientsDropdowns()\r\n    }\r\n  }\r\n\r\n  updateGatherableIngredientsDropdowns () {\r\n    const { shoppingList } = this.props\r\n    const {\r\n      // ingredientsCrafted,\r\n      // ingredientsPurchased,\r\n      ingredientsGatherable\r\n      // ingredientsOther\r\n    } = shoppingList\r\n\r\n    const gatherableStateVars = {}\r\n    if (ingredientsGatherable) {\r\n      ingredientsGatherable.forEach(item => {\r\n        const key = `gatherable-${item.itemId}-location`\r\n        gatherableStateVars[key] = get(item, 'pointData[0]', {})\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      ...gatherableStateVars\r\n    })\r\n  }\r\n\r\n  handleLocationUpdate (event) {\r\n    event.preventDefault()\r\n\r\n    const { target: { value, id } } = event\r\n\r\n    this.setState({\r\n      [id]: JSON.parse(value)\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { shoppingList: { ingredientsCrafted, ingredientsPurchased, ingredientsGatherable, ingredientsOther } } = this.props\r\n\r\n    if (!ingredientsGatherable && !ingredientsCrafted && !ingredientsPurchased) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const headings = (\r\n      <tr>\r\n        <th />\r\n        <th>Name</th>\r\n        <th>Required Class</th>\r\n        <th>Required Level</th>\r\n        <th>Quantity</th>\r\n        <th>Location</th>\r\n      </tr>\r\n    )\r\n\r\n    const headingColumns = 6\r\n\r\n    return (\r\n      <div>\r\n        <Table hover striped className=\"shopping-list\">\r\n          {!!ingredientsGatherable && !!ingredientsGatherable.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Gatherable Items</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsGatherable.map(item => {\r\n                const { name, icon, itemId, amount, pointData } = item\r\n                const key = `gatherable-${itemId}`\r\n                const locationSelectId = `${key}-location`\r\n                const gatheringClass = get(this.state, `${locationSelectId}.gatheringClass`)\r\n                const gatheringType = get(this.state, `${locationSelectId}.type`)\r\n                const level = get(this.state, `${locationSelectId}.level`)\r\n\r\n                return (\r\n                  <tr key={key}>\r\n                    <td><img src={icon} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>{gatheringClass}{!!gatheringType && ` (${gatheringType})`}</td>\r\n                    <td>{level}</td>\r\n                    <td>{amount}</td>\r\n                    <td>\r\n                      {pointData.length === 1 && (\r\n                        <React.Fragment>\r\n                          {pointData[0].region} - {pointData[0].area} - {pointData[0].name}\r\n                        </React.Fragment>\r\n                      )}\r\n                      {pointData.length > 1 && (\r\n                        <FormControl\r\n                          id={locationSelectId}\r\n                          as=\"select\"\r\n                          onChange={this.handleLocationUpdate.bind(this)}\r\n                        >\r\n                          {pointData.map((point, key) => (\r\n                            <option key={key} value={JSON.stringify(point)}>\r\n                              {point.region} - {point.area} - {point.name} (Level {point.level}, {point.gatheringClass})\r\n                            </option>\r\n                          ))}\r\n                        </FormControl>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsOther && !!ingredientsOther.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Items Obtained Elsewhere</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsOther.map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`}>\r\n                    <td><img src={icon} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>N/A</td>\r\n                    <td>N/A</td>\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsPurchased && !!ingredientsPurchased.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Purchasable Items</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsPurchased.map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`}>\r\n                    <td><img src={icon} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>N/A</td>\r\n                    <td>N/A</td>\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsCrafted && !!ingredientsCrafted.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Prerequisite Crafts</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsCrafted.map(item => {\r\n                const name = get(item, 'ItemResult.Name_en')\r\n                const icon = get(item, 'ItemResult.Icon')\r\n                const id = get(item, 'ID')\r\n                const quantity = get(item, 'quantity')\r\n                const craftClass = get(item, 'ClassJob.NameEnglish')\r\n                const craftLevel = get(item, 'RecipeLevelTable.ClassJobLevel')\r\n                return (\r\n                  <tr key={`crafted-${id}`}>\r\n                    <td><img src={getIconUrl(icon)} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>{craftClass}</td>\r\n                    <td>{craftLevel}</td>\r\n                    <td>{quantity}</td>\r\n                    <td>N/A</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  shoppingList: PropTypes.shape().isRequired\r\n}\r\n\r\nShoppingList.defaultProps = {\r\n  shoppingList: {}\r\n}\r\n","import React from 'react'\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { cloneDeep, find, get, omit, reject, indexOf, toNumber } from 'lodash'\r\nimport { recipeSearch } from '../../service/xivApi'\r\nimport RecipeSearch from './RecipeSearch'\r\nimport MyList from './MyList'\r\nimport * as recipeActions from '../../store/recipeList/actions'\r\nimport ShoppingList from './ShoppingList'\r\n\r\nclass RecipeHelper extends React.Component {\r\n  state = {\r\n    recipeSearchString: '',\r\n    recipeSearchIsInvalid: false,\r\n    searching: false,\r\n    myList: [],\r\n    lastSearch: undefined\r\n  }\r\n\r\n  handleFieldUpdate (event) {\r\n    const { target: { name, value } } = event\r\n\r\n    let recipeSearchIsInvalid = false\r\n    if (!value) {\r\n      recipeSearchIsInvalid = true\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      recipeSearchIsInvalid\r\n    })\r\n  }\r\n\r\n  handleClearList () {\r\n    const { clearMyRecipeList } = this.props\r\n    clearMyRecipeList()\r\n    this.handleTabChange('search')\r\n  }\r\n\r\n  async search (page = 1) {\r\n    const { recipeSearchString } = this.state\r\n    const results = await recipeSearch(recipeSearchString, { page })\r\n    this.setState({\r\n      searching: false,\r\n      recipeList: results,\r\n      lastSearch: recipeSearchString\r\n    })\r\n  }\r\n\r\n  handleUpdateQuantity (item, event) {\r\n    const newValue = Math.max(1, toNumber(event.target.value))\r\n\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    const myListItemIndex = indexOf(myRecipeList, item)\r\n    myRecipeList[myListItemIndex].quantity = newValue\r\n    saveMyRecipeList(myRecipeList)\r\n  }\r\n\r\n  handleSearch (event) {\r\n    event.preventDefault()\r\n    const page = get(event, 'target.value', 1)\r\n    const { recipeSearchString } = this.state\r\n    if (!recipeSearchString) {\r\n      document.getElementsByName('recipeSearchString')[0].focus()\r\n      this.setState({\r\n        recipeSearchIsInvalid: true\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      searching: true\r\n    }, () => this.search(page))\r\n  }\r\n\r\n  handleClear () {\r\n    document.getElementsByName('recipeSearchString')[0].focus()\r\n    this.setState({\r\n      recipeSearchIsInvalid: false,\r\n      recipeSearchString: ''\r\n    })\r\n  }\r\n\r\n  handlePageChange (event) {\r\n    this.handleSearch(event)\r\n  }\r\n\r\n  handleTabChange (key) {\r\n    this.setState({\r\n      key\r\n    })\r\n  }\r\n\r\n  toggleListItem (item) {\r\n    console.log('togglin', item)\r\n    item = omit(item, 'quantity')\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    let myClonedList = cloneDeep(myRecipeList)\r\n    const foundItem = find(myRecipeList, i => get(i, 'ID') === get(item, 'ID'))\r\n\r\n    if (!!foundItem) {\r\n      myClonedList = reject(myRecipeList, item)\r\n    } else {\r\n      item.quantity = 1\r\n      myClonedList.push(item)\r\n    }\r\n\r\n    saveMyRecipeList(myClonedList)\r\n  }\r\n\r\n  handleGenerateShoppingList () {\r\n    const { createMyShoppingList, myRecipeList } = this.props\r\n\r\n    createMyShoppingList(myRecipeList)\r\n\r\n    this.setState({\r\n      key: 'shopping-list'\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { recipeList, recipeSearchIsInvalid, recipeSearchString, searching, shoppingListResults } = this.state\r\n    const { myRecipeList, myShoppingList } = this.props\r\n\r\n    return (\r\n      <div className=\"recipe-list pt3\">\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={key => this.setState({ key })}\r\n        >\r\n          <Tab eventKey=\"search\" title=\"Recipe Search\">\r\n            <div className=\"recipe-tab\">\r\n              <RecipeSearch\r\n                handleChange={this.handleFieldUpdate.bind(this)}\r\n                handlePageChange={this.handlePageChange.bind(this)}\r\n                handleReset={this.handleClear.bind(this)}\r\n                handleSubmit={this.handleSearch.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                myList={myRecipeList}\r\n                recipeSearchResults={recipeList}\r\n                recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n                recipeSearchString={recipeSearchString}\r\n                searching={searching}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"recipe-list\" title={`My Recipe List (${myRecipeList.length})`}>\r\n            <div className=\"recipe-tab\">\r\n              <MyList\r\n                list={myRecipeList}\r\n                handleClearList={this.handleClearList.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                handleUpdateQuantity={this.handleUpdateQuantity.bind(this)}\r\n                handleGenerateShoppingList={this.handleGenerateShoppingList.bind(this)}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"shopping-list\" title={`My Shopping List`}>\r\n            <div className=\"recipe-tab\">\r\n              <ShoppingList\r\n                shoppingList={myShoppingList}\r\n              />\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  myRecipeList: get(state, 'recipeList.myRecipeList', []),\r\n  myShoppingList: get(state, 'recipeList.myShoppingList', [])\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveMyRecipeList: recipeList => dispatch(recipeActions.saveMyRecipeList(recipeList)),\r\n  clearMyRecipeList: () => dispatch(recipeActions.clearMyRecipeList()),\r\n  createMyShoppingList: recipeList => dispatch(recipeActions.createMyShoppingList(recipeList)),\r\n  clearMyShoppingList: () => dispatch(recipeActions.clearMyShoppingList())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeHelper)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport { get } from 'lodash'\r\nimport * as actions from '../store/local/actions'\r\nimport Navigation from './navigation/Navigation'\r\nimport CraftingGatheringCalculator from './calculator/CraftingGatheringCalculator'\r\nimport RecipeHelper from './recipes/RecipeHelper'\r\n\r\nconst externalLink = (url, text) => (\r\n  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    {text}\r\n  </a>\r\n)\r\n\r\nclass XivCraftingGatheringHelper extends React.Component {\r\n  componentDidMount () {\r\n    this.props.getLocalClassData()\r\n    this.props.getLocalCharacterData()\r\n  }\r\n\r\n  render () {\r\n    const { characterData, craftingClassData } = this.props\r\n\r\n    const Calculator = props => (\r\n      <CraftingGatheringCalculator\r\n        characterData={characterData}\r\n        craftingClassData={craftingClassData}\r\n        {...props}\r\n      />\r\n    )\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Navigation\r\n          characterData={characterData}\r\n          craftingClassData={craftingClassData}\r\n        />\r\n        <Container fluid>\r\n          <Switch>\r\n            <Route exact path=\"/\" render={Calculator} />\r\n            <Route path=\"/calculations\" render={Calculator} />\r\n            <Route path=\"/recipes\" component={RecipeHelper} />\r\n            </Switch>\r\n          <hr />\r\n          <div className=\"tc text-muted\">\r\n            Created by {externalLink('https://na.finalfantasyxiv.com/lodestone/character/22858010/',\r\n            'Xythyt')} with the help of {externalLink('https://www.xivapi.com', 'XIVAPI')}.\r\n            <br />\r\n            Version {process.env.REACT_APP_VERSION}\r\n          </div>\r\n        </Container>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return ({\r\n    craftingClassData: get(state, 'local.classData'),\r\n    characterData: get(state, 'local.characterData')\r\n  })\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLocalCharacterData: () => dispatch(actions.getLocalCharacterData()),\r\n  getLocalClassData: () => dispatch(actions.getLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(XivCraftingGatheringHelper)\r\n","import { get } from 'lodash'\r\nimport * as LocalStorage from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  classData: LocalStorage.getDefaultCraftingClasses()\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case T.LOCAL_CLASS_DATA_STORE:\r\n    case T.LOCAL_CLASS_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        classData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        characterData: undefined\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_STORE:\r\n    case T.LOCAL_CHARACTER_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CLASS_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        classData: LocalStorage.getDefaultCraftingClasses()\r\n      }\r\n    case T.LODESTONE_CHARACTER_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'payload')\r\n      }\r\n    case T.API_REQUEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as LocalStorageService from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  myRecipeList: LocalStorageService.getMyRecipeList(),\r\n  myShoppingList: LocalStorageService.getMyShoppingList()\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case T.SHOPPING_LIST_CREATE:\r\n      return {\r\n        ...state,\r\n        myShoppingList: action.shoppingList\r\n      }\r\n    case T.SHOPPING_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myShoppingList: []\r\n      }\r\n    case T.RECIPE_LIST_SAVE:\r\n      return {\r\n        ...state,\r\n        myRecipeList: action.recipeList\r\n      }\r\n    case T.RECIPE_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myRecipeList: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './local/reducer'\r\nimport recipeListReducer from './recipeList/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  local: reducer,\r\n  recipeList: recipeListReducer\r\n})\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n)\r\n","import React from 'react'\r\nimport XivCraftingGatheringHelper from './XivCraftingGatheringHelper'\r\nimport Provider from 'react-redux/es/components/Provider'\r\nimport store from '../store'\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n        <XivCraftingGatheringHelper />\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport './styles/index.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}