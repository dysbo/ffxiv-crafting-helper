{"version":3,"sources":["service/localStorage.js","service/xivApi.js","store/types.js","store/actions.js","components/navigation/LodestoneCharacterModal.jsx","components/navigation/LodestoneCharacterMenu.jsx","components/navigation/Navigation.jsx","components/calculator/FilterDropdown.jsx","service/calculations.js","components/calculator/SortableTableHeaderCell.jsx","components/calculator/CalculationsTableHeader.jsx","components/calculator/CalculationsTableBody.jsx","components/calculator/CraftingGatheringCalculator.jsx","components/recipes/RecipeHelper.jsx","components/XivCraftingGatheringHelper.jsx","store/reducer.js","store/index.js","components/App.js","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","store","key","data","localStorage","setItem","JSON","stringify","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","getDefaultCraftingClasses","storedData","getItem","craftingClasses","parse","result","forEach","defaultCraftingClass","storedCraftingClass","_find","c","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","levelingGuideDiffs","push","retrieveAndUpdateCharacterData","updateCraftingClassDataWithCharacterData","classJobCategories","craftingClassData","characterData","_values","_get","_includes","_map","lodestoneClassData","_set","totalExperience","CRAFTING_CLASSES","currentLevel","currentExperience","experiencePerItem","BASE_URL","searchForCharacter","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","get","concat","sent","abrupt","stop","_x","_x2","apply","this","getCharacter","_ref2","_callee2","id","_context2","_x3","LOCAL_CLASS_DATA_RETRIEVAL","LOCAL_CLASS_DATA_STORE","LOCAL_CLASS_DATA_CLEAR","LOCAL_CHARACTER_DATA_RETRIEVAL","LOCAL_CHARACTER_DATA_STORE","LOCAL_CHARACTER_DATA_CLEAR","LODESTONE_CHARACTER_DATA_REQUEST","LODESTONE_CHARACTER_DATA_SUCCESS","API_REQUEST_FAILURE","lodestoneCharacterDataRequest","characterId","T","apiRequestSuccess","payload","getLocalClassData","dispatch","localData","localClassDataRetrieve","LocalStorage","saveLocalClassData","classData","clearLocalClassData","removeItem","saveLocalCharacterData","getLocalCharacterData","localCharacterDataRetrieve","clearLocalCharacterData","LodestoneCharacterModal","state","event","_event$target","target","value","setState","defineProperty","preventDefault","loading","performSearch","XivApi","lodestoneResults","onHide","props","getLodestoneCharacterData","handleClose","_this2","show","_this$state2","results","prevPage","nextPage","react_default","createElement","Modal","bind","Form","onSubmit","handleSearch","onReset","Header","closeButton","Title","Body","Group","Label","Control","as","onChange","handleSetField","XIV_SERVERS","Button","disabled","className","Spinner","animation","variant","Fragment","map","char","ID","Name","Avatar","Check","htmlFor","src","alt","onClick","Footer","handleSubmitCharacterSelection","React","Component","defaultProps","getDropdownTitle","_characterData$Charac","Character","LodestoneCharacterMenu","showModal","_this$props","searchLodestoneCharacterData","importText","replace","NavDropdown","alignRight","title","Item","Divider","handleModalToggle","navigation_LodestoneCharacterModal","connect","t0","error","Navigation","Navbar","bg","lib","to","NavbarBrand","Nav","Link","process","navigation_LodestoneCharacterMenu","FilterDropdown","_this","label","applyFilterFunc","DropdownButton","Dropdown","orderBy","craftingClass","calculateRemainingExp","currentExp","totalExp","Math","max","calculateRemainingItems","remainingExp","expPerItem","ceil","calculateProgressPercentage","floor","SortableTableHeaderCell","text","sortFunc","applySorting","style","cursor","index_es","icon","faSort","tableHeaders","CalculationsTableHeader","applySortFunc","h","calculator_SortableTableHeaderCell","CalculationsTableBody","levelingGuide","find","LEVELING_GUIDE_LINKS","g","matchedPage","pages","p","maxLevel","minLevel","url","targetCraftingClass","otherCraftingClasses","filter","set","toNumber","EXP_PER_LEVEL","_event$target2","min","updateField","remainingExperience","remainingItems","progressPercentage","popover","Popover","href","getLevelingGuidePageUrl","rel","OverlayTrigger","trigger","placement","overlay","rootClose","faIcon","validateNumericFieldChange","ProgressBar","now","CraftingGatheringCalculator","sort","func","direction","sortDirection","isEqual","filterFunc","innerText","sortedAndFilteredCraftingClassData","getSortedCraftingClassData","getFilteredCraftingClassData","FilterDropdown_FilterDropdown","applyFilter","Table","striped","hover","CalculationsTableHeader_CalculationsTableHeader","applySort","calculator_CalculationsTableBody","match","params","XivCraftingGatheringHelper","Calculator","CraftingGatheringCalculator_CraftingGatheringCalculator","assign","react_router_dom","basename","Navigation_Navigation","Container","fluid","react_router","exact","path","render","actions","INITIAL_STATE","createStore","action","objectSpread","applyMiddleware","thunk","App","Provider","components_XivCraftingGatheringHelper","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b7a019fe.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\nimport { applyChanges, diff } from 'diff-json'\nimport {\n  filter as _filter,\n  find as _find,\n  get as _get,\n  includes as _includes,\n  map as _map,\n  set as _set,\n  values as _values\n} from 'lodash'\n\nconst KEYS = {\n  CHARACTER_DATA: 'character',\n  CRAFTING_CLASS_DATA: 'craftingClasses'\n}\n\nfunction store (key, data) {\n  localStorage.setItem(key, JSON.stringify(data))\n}\n\nexport function retrieveAndUpdateCraftingClassData () {\n  // get the default crafting class data\n  const defaultCraftingClasses = getDefaultCraftingClasses()\n\n  // retrieve the stored data from local storage\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\n\n  // if there is no stored data, return the default data\n  if (!storedData) {\n    return defaultCraftingClasses\n  }\n\n  // if there is stored data, convert it to JSON\n  const craftingClasses = JSON.parse(storedData)\n\n  // create a variable for the result\n  const result = []\n\n  // cycle through all \"default\" classes\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\n    // retrieve the matching stored class\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\n\n    // if there is no matching stored class data, add the default for this class to the result\n    if (!storedCraftingClass) {\n      result.push(defaultCraftingClass)\n      return\n    }\n\n    // get any added data to the default data set and apply it to the stored data\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\n    if (classDiffs.length > 0) {\n      applyChanges(storedCraftingClass, classDiffs)\n    }\n\n    // get any leveling guide data and remove it from stored data\n    const levelingGuideDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.key === 'levelingGuide')\n    if (levelingGuideDiffs.length > 0) {\n      applyChanges(storedCraftingClass, levelingGuideDiffs)\n    }\n\n    // add this record to the result to return\n    result.push(storedCraftingClass)\n  })\n\n  // send back the updated stored data\n  return result\n}\n\nexport function retrieveAndUpdateCharacterData () {\n  // get the stored character data\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\n\n  // if there is no character data, return undefined\n  if (!storedData) {\n    return undefined\n  }\n\n  // if there is, update it\n  // TBD\n\n  // return the character data\n  return JSON.parse(storedData)\n}\n\nexport function storeCharacterData (characterData) {\n  // localStorage.setItem(KEYS.CHARACTER_DATA, JSON.stringify(characterData))\n  store(KEYS.CHARACTER_DATA, characterData)\n}\n\nexport function storeCraftingClassData (craftingClasses) {\n  // localStorage.setItem(KEYS.CRAFTING_CLASS_DATA, JSON.stringify(craftingClasses))\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\n}\n\nexport function clearCharacterData () {\n  if (!!localStorage.getItem(KEYS.CHARACTER_DATA)) {\n    localStorage.removeItem(KEYS.CHARACTER_DATA)\n  }\n}\n\nexport function clearCraftingClassData () {\n  if (!!localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)) {\n    localStorage.removeItem(KEYS.CRAFTING_CLASS_DATA)\n  }\n}\n\nexport function updateCraftingClassDataWithCharacterData () {\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\n\n  return _map(craftingClassData, c => {\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\n    return c\n  })\n}\n\nexport function getDefaultCraftingClasses () {\n  return _map(CRAFTING_CLASSES, c => {\n    c.currentLevel = 1\n    c.currentExperience = 0\n    c.experiencePerItem = 1\n    c.totalExperience = 300\n    return c\n  })\n}\n","import axios from 'axios'\nimport { get as _get, isArray as _isArray, set as _set } from 'lodash'\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\n\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\nconst BASE_URL = 'https://xivapi.com'\n\nexport const searchForCharacter = async (server, name, page = 1) => {\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\n  return _get(result, 'data', [])\n}\n\nexport const getCharacter = async id => {\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\n  _set(result, 'data.characterId', id)\n  return _get(result, 'data', {})\n}\n\nconst search = async (indexes, filters, sortField, columns) => {\n  if (_isArray(indexes)) {\n    indexes = indexes.join(',')\n  }\n\n  if (_isArray(filters)) {\n    filters = filters.join(',')\n  }\n\n  const params = {\n    indexes,\n    filters,\n    columns\n  }\n\n  if (!!sortField) {\n    params['sort_field'] = sortField\n    params['sort_order'] = 'asc'\n  }\n\n  const result = await axios.get(`${BASE_URL}/search`, {\n    params\n  })\n  return _get(result, 'data', {})\n}\n\nexport const getRecipesForLevelRange = async (abbreviation, minLevel, maxLevel) => {\n  const index = 'Recipe'\n  const sortField = 'RecipeLevelTable.ClassJobLevel'\n  const columns = ['ID', 'ClassJob.Abbreviation_en', 'RecipeLevelTable.ClassJobLevel', 'Name', 'Icon']\n  const filters = [\n    `ClassJob.Abbreviation_en=${abbreviation}`,\n    `RecipeLevelTable.ClassJobLevel>=${minLevel}`,\n    `RecipeLevelTable.ClassJobLevel<=${maxLevel}`,\n    'StatusRequiredTargetID=0'\n  ]\n\n  return await search(\n    index,\n    filters,\n    sortField,\n    columns.join(',')\n  )\n}\n\nexport const getIconUrl = iconRelativePath => `${BASE_URL}${iconRelativePath}`\n","const LODESTONE = 'LODESTONE'\nconst LOCAL = 'LOCAL'\n\nconst REQUEST = 'REQUEST'\nconst SUCCESS = 'SUCCESS'\nconst FAILURE = 'FAILURE'\n\nexport const LOCAL_CLASS_DATA_RETRIEVAL = `${LOCAL}_CLASS_DATA_RETRIEVAL`\nexport const LOCAL_CLASS_DATA_STORE = `${LOCAL}_CLASS_DATA_STORE`\nexport const LOCAL_CLASS_DATA_CLEAR = `${LOCAL}_CLASS_DATA_CLEAR`\n\nexport const LOCAL_CHARACTER_DATA_RETRIEVAL = `${LOCAL}_CHARACTER_DATA_RETRIEVAL`\nexport const LOCAL_CHARACTER_DATA_STORE = `${LOCAL}_CHARACTER_DATA_STORE`\nexport const LOCAL_CHARACTER_DATA_CLEAR = `${LOCAL}_CHARACTER_DATA_CLEAR`\n\nexport const LODESTONE_CHARACTER_DATA_REQUEST = `${LODESTONE}_CHARACTER_DATA_${REQUEST}`\nexport const LODESTONE_CHARACTER_DATA_SUCCESS = `${LODESTONE}_CHARACTER_DATA_${SUCCESS}`\nexport const API_REQUEST_FAILURE = `${LODESTONE}_CHARACTER_DATA_${FAILURE}`\n","import * as LocalStorage from '../service/localStorage'\nimport * as XivApi from '../service/xivApi'\nimport * as T from './types'\n\nconst localClassDataRetrieve = localData => ({\n  type: T.LOCAL_CLASS_DATA_RETRIEVAL,\n  localData\n})\n\nconst localClassDataStore = localData => ({\n  type: T.LOCAL_CLASS_DATA_STORE,\n  localData\n})\n\nconst localClassDataClear = () => ({\n  type: T.LOCAL_CLASS_DATA_CLEAR\n})\n\nconst localCharacterDataRetrieve = localData => ({\n  type: T.LOCAL_CHARACTER_DATA_RETRIEVAL,\n  localData\n})\n\nconst localCharacterDataStore = localData => ({\n  type: T.LOCAL_CHARACTER_DATA_STORE,\n  localData\n})\n\nconst localCharacterDataClear = () => ({\n  type: T.LOCAL_CHARACTER_DATA_CLEAR\n})\n\nconst lodestoneCharacterDataRequest = characterId => ({\n  type: T.LODESTONE_CHARACTER_DATA_REQUEST,\n  characterId\n})\n\nconst apiRequestSuccess = (type, payload) => ({\n  type,\n  payload\n})\n\nconst apiRequestFailure = (type, error) => ({\n  type,\n  error\n})\n\nexport const getLocalClassData = () => {\n  return dispatch => {\n    const localData = LocalStorage.retrieveAndUpdateCraftingClassData()\n    dispatch(localClassDataRetrieve(localData))\n  }\n}\n\nexport const saveLocalClassData = classData => {\n  return dispatch => {\n    LocalStorage.storeCraftingClassData(classData)\n    dispatch(localClassDataStore(classData))\n  }\n}\n\nexport const clearLocalClassData = () => {\n  return dispatch => {\n    LocalStorage.clearCraftingClassData()\n    dispatch(localClassDataClear())\n  }\n}\n\nexport const saveLocalCharacterData = characterData => {\n  return dispatch => {\n    LocalStorage.storeCharacterData(characterData)\n    dispatch(localCharacterDataStore(characterData))\n  }\n}\n\nexport const getLocalCharacterData = () => {\n  return dispatch => {\n    const localData = LocalStorage.retrieveAndUpdateCharacterData()\n    dispatch(localCharacterDataRetrieve(localData))\n  }\n}\n\nexport const clearLocalCharacterData = () => {\n  return dispatch => {\n    LocalStorage.clearCharacterData()\n    dispatch(localCharacterDataClear())\n  }\n}\n\nexport const getLodestoneCharacterData = characterId => {\n  return async dispatch => {\n    dispatch(lodestoneCharacterDataRequest(characterId))\n    try {\n      const payload = await XivApi.getCharacter(characterId)\n      dispatch(apiRequestSuccess(T.LODESTONE_CHARACTER_DATA_SUCCESS, payload))\n      dispatch(saveLocalCharacterData(payload))\n      dispatch(saveLocalClassData(LocalStorage.updateCraftingClassDataWithCharacterData()))\n      dispatch(getLocalClassData())\n    } catch (err) {\n      dispatch(apiRequestFailure(T.API_REQUEST_FAILURE, err))\n    }\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap'\nimport { get, map as _map } from 'lodash'\nimport XIV_SERVERS from '../../data/xiv-servers'\nimport * as XivApi from '../../service/xivApi'\n\nclass LodestoneCharacterModal extends React.Component {\n  state = {}\n\n  handleSetField (event) {\n    const { target: { name, value } } = event\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSearch (page = 1, event) {\n    !!event && event.preventDefault()\n    this.setState({\n      loading: true,\n      page\n    }, this.performSearch)\n  }\n\n  async performSearch () {\n    const { name, server, page } = this.state\n    const result = await XivApi.searchForCharacter(server, name, page)\n    this.setState({\n      lodestoneResults: result,\n      loading: false\n    })\n  }\n\n  handleClose () {\n    const { onHide } = this.props\n    this.setState({\n      name: undefined,\n      server: undefined,\n      lodestoneResults: undefined,\n      characterId: undefined\n    }, onHide)\n  }\n\n  handleSubmitCharacterSelection () {\n    const { getLodestoneCharacterData } = this.props\n    const { characterId } = this.state\n\n    getLodestoneCharacterData(characterId)\n    this.handleClose()\n  }\n\n  render () {\n    const { show } = this.props\n    const { characterId, loading, lodestoneResults, name, server } = this.state\n\n    const results = get(lodestoneResults, 'Results', [])\n    const prevPage = get(lodestoneResults, 'Pagination.PagePrev')\n    const nextPage = get(lodestoneResults, 'Pagination.PageNext')\n\n    return (\n      <Modal show={show} onHide={this.handleClose.bind(this)}>\n        <Form\n          onSubmit={this.handleSearch.bind(this, 1)}\n          onReset={this.handleClose.bind(this)}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              Import Character Data\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Server</Form.Label>\n              <Form.Control name=\"server\" as=\"select\" onChange={this.handleSetField.bind(this)}>\n                <option>Choose a Server</option>\n                {_map(XIV_SERVERS, (server, key) => (\n                  <option key={key} value={server}>{server}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control name=\"name\" type=\"text\" onChange={this.handleSetField.bind(this)} />\n            </Form.Group>\n            <Button type=\"submit\" disabled={!name || !server}>\n              Search\n            </Button>\n            <hr />\n            {!!loading && (\n              <div className=\"fullWidth text-center\">\n                <Spinner animation=\"grow\" variant=\"danger\" />\n                <Spinner animation=\"grow\" variant=\"warning\" />\n                <Spinner animation=\"grow\" variant=\"success\" />\n              </div>\n            )}\n            {!loading && !results.length && (\n              <div>\n                No results available.\n              </div>\n            )}\n            {!loading && !!results.length && (\n              <React.Fragment>\n                <div className=\"lodestoneResults\">\n                  {results.map((char, key) => {\n                    const { ID, Name, Avatar } = char\n                    return (\n                      <div\n                        key={key}\n                        className=\"flex justify-between items-center\"\n                      >\n                        <Form.Check\n                          id={ID}\n                          type=\"radio\"\n                          name=\"characterId\"\n                          value={ID}\n                          onChange={this.handleSetField.bind(this)}\n                        />\n                        <label htmlFor={ID}>{Name}</label>\n                        <label htmlFor={ID}>\n                          <img className=\"avatar\" src={Avatar} alt={Name} />\n                        </label>\n                      </div>\n                    )\n                  })}\n                </div>\n                <div className=\"flex justify-between items-center pt2\">\n                  <div className=\"w-50 tl\">\n                    {!!prevPage && (\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, prevPage)}>\n                        Prev Page\n                      </Button>\n                    )}\n                  </div>\n                  <div className=\"w-50 tr\">\n                    {nextPage && (\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, nextPage)}>\n                        Next Page\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"danger\"\n              type=\"reset\"\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              disabled={!characterId}\n              onClick={this.handleSubmitCharacterSelection.bind(this)}\n            >\n              Load Data\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    )\n  }\n}\n\nLodestoneCharacterModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired\n}\n\nLodestoneCharacterModal.defaultProps = {\n  show: false\n}\n\nexport default LodestoneCharacterModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { get } from 'lodash'\nimport { NavDropdown } from 'react-bootstrap'\nimport { clearLocalCharacterData, clearLocalClassData, getLodestoneCharacterData } from '../../store/actions'\nimport LodestoneCharacterModal from './LodestoneCharacterModal'\n\nconst getDropdownTitle = characterData => {\n  if (get(characterData, 'Character.Avatar')) {\n    const { Character: { Avatar, Name } } = characterData\n    return (\n      <span className=\"items-center\">\n        {Name}\n        <span className=\"ml2\"><img src={Avatar} alt={Name} className=\"avatar\" /></span>\n      </span>\n    )\n  }\n\n  return 'Options'\n}\n\nclass LodestoneCharacterMenu extends React.Component {\n  state = {\n    showModal: false\n  }\n\n  handleModalToggle (showModal) {\n    this.setState({\n      showModal: showModal\n    })\n  }\n\n  render () {\n    const {\n      characterData,\n      clearLocalCharacterData,\n      clearLocalClassData,\n      getLodestoneCharacterData,\n      lodestoneResults,\n      searchLodestoneCharacterData\n    } = this.props\n\n    const importText = `Import ${!characterData ? '' : 'Different'} Character Data`.replace('  ', ' ')\n\n    return (\n      <React.Fragment>\n        <NavDropdown\n          alignRight\n          title={getDropdownTitle(characterData)}\n        >\n          {!!characterData && (\n            <React.Fragment>\n              <NavDropdown.Item onClick={getLodestoneCharacterData.bind(this, characterData.characterId)}>\n                Refresh Character Data\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n            </React.Fragment>\n          )}\n          <NavDropdown.Item onClick={this.handleModalToggle.bind(this, true)}>\n            {importText}\n          </NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item onClick={clearLocalClassData}>\n            Clear Crafting Class Data\n          </NavDropdown.Item>\n          {!!characterData && (\n            <NavDropdown.Item onClick={clearLocalCharacterData}>\n              Clear Character Data\n            </NavDropdown.Item>\n          )}\n        </NavDropdown>\n        <LodestoneCharacterModal\n          lodestoneResults={lodestoneResults}\n          onHide={this.handleModalToggle.bind(this, false)}\n          searchLodestoneCharacterData={searchLodestoneCharacterData}\n          show={this.state.showModal}\n          getLodestoneCharacterData={getLodestoneCharacterData}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nLodestoneCharacterMenu.propTypes = {\n  characterData: PropTypes.shape()\n}\n\nconst mapStateToProps = () => ({})\n\nconst mapDispatchToProps = dispatch => ({\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId)),\n  clearLocalCharacterData: () => dispatch(clearLocalCharacterData()),\n  clearLocalClassData: () => dispatch(clearLocalClassData())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LodestoneCharacterMenu)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Nav, Navbar, NavbarBrand } from 'react-bootstrap'\nimport LodestoneCharacterMenu from './LodestoneCharacterMenu'\n\nexport default class Navigation extends React.Component {\n  render () {\n    const { characterData } = this.props\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <LinkContainer to=\"/\">\n          <NavbarBrand>\n            FFXIV Crafting & Gathering Helper\n          </NavbarBrand>\n        </LinkContainer>\n        <Nav className=\"mr-auto\">\n          <LinkContainer to=\"/calculations\">\n            <Nav.Link>\n              Calculations\n            </Nav.Link>\n          </LinkContainer>\n          {process.env.NODE_ENV === 'development' && (\n            <LinkContainer to=\"/recipes/all\">\n              <Nav.Link>\n                Recipes\n              </Nav.Link>\n            </LinkContainer>\n          )}\n        </Nav>\n        <Nav>\n          <LodestoneCharacterMenu\n            characterData={characterData}\n          />\n        </Nav>\n      </Navbar>\n    )\n  }\n}\n\nNavigation.propTypes = {\n  characterData: PropTypes.shape(),\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape())\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport { orderBy } from 'lodash'\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\n\nexport default class FilterDropdown extends React.Component {\n  render () {\n    const { label, applyFilterFunc } = this.props\n    return (\n      <DropdownButton title={`Showing ${label}`}>\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => !!c)}>\n          All\n        </Dropdown.Item>\n        <Dropdown.Divider/>\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'crafting')}>\n          Crafting Classes\n        </Dropdown.Item>\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'gathering')}>\n          Gathering Classes\n        </Dropdown.Item>\n        <Dropdown.Divider/>\n        {orderBy(CRAFTING_CLASSES, 'name').map((craftingClass, key) => (\n          <Dropdown.Item\n            key={key}\n            onClick={applyFilterFunc.bind(this, c => c.abbreviation === craftingClass.abbreviation)}\n          >\n            {craftingClass.name}\n          </Dropdown.Item>\n        ))}\n      </DropdownButton>\n    )\n  }\n}\n\nFilterDropdown.propTypes = {\n  label: PropTypes.string.isRequired,\n  applyFilterFunc: PropTypes.func.isRequired\n}\n","export function calculateRemainingExp (currentExp, totalExp) {\n  return Math.max(totalExp - currentExp, 0)\n}\n\nexport function calculateRemainingItems (remainingExp, expPerItem) {\n  return Math.ceil(remainingExp / expPerItem)\n}\n\nexport function calculateProgressPercentage (currentExp, totalExp) {\n  return totalExp <= 0 ? 0 : Math.floor((currentExp / totalExp) * 100)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\n\nclass SortableTableHeaderCell extends React.Component {\n  render () {\n    const { className, text, sortFunc, applySorting } = this.props\n    return (\n      <th className={className} onClick={applySorting.bind(this, sortFunc)}\n        style={{ cursor: 'pointer' }}\n      >\n        {text}\n        <FontAwesomeIcon\n          className=\"margin-left\"\n          icon={faSort}\n        />\n      </th>\n    )\n  }\n}\n\nSortableTableHeaderCell.propTypes = {\n  text: PropTypes.string.isRequired,\n  sortFunc: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  applySorting: PropTypes.func.isRequired\n}\n\nexport default SortableTableHeaderCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\nimport SortableTableHeaderCell from './SortableTableHeaderCell'\n\nconst tableHeaders = [\n  { name: 'Class', sortFunc: 'name' },\n  { name: 'Level', sortFunc: 'currentLevel' },\n  { name: 'Current Exp.', sortFunc: 'currentExperience' },\n  { name: 'Required Exp.', sortFunc: undefined },\n  { name: 'Remaining Exp.', sortFunc: c => calculateRemainingExp(c.currentExperience, c.totalExperience) },\n  { name: 'Exp. Per Item', sortFunc: 'experiencePerItem' },\n  {\n    name: 'Remaining Items',\n    sortFunc: c => calculateRemainingItems(\n      calculateRemainingExp(c.currentExperience, c.totalExperience), c.experiencePerItem\n    )\n  },\n  { name: 'Progress', sortFunc: c => calculateProgressPercentage(c.currentExperience, c.totalExperience) }\n]\n\nexport default class CalculationsTableHeader extends React.Component {\n  render () {\n    const { applySortFunc } = this.props\n    return (\n      <thead>\n      <tr>\n        {tableHeaders.map((h, key) => {\n          if (h.sortFunc) {\n            return (\n              <SortableTableHeaderCell\n                key={key}\n                text={h.name}\n                sortFunc={h.sortFunc}\n                applySorting={applySortFunc}\n              />\n            )\n          } else {\n            return (\n              <th key={key}>\n                {h.name}\n              </th>\n            )\n          }\n        })}\n      </tr>\n      </thead>\n    )\n  }\n}\n\nCalculationsTableHeader.propTypes = {\n  applySortFunc: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\nimport Form from 'react-bootstrap/es/Form'\nimport { OverlayTrigger, Popover, ProgressBar } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\nimport { concat, filter, find, orderBy, set, toNumber } from 'lodash'\nimport LEVELING_GUIDE_LINKS from '../../data/leveling-guide-links'\nimport EXP_PER_LEVEL from '../../data/exp-per-level'\nimport { saveLocalClassData } from '../../store/actions'\n\nclass CalculationsTableBody extends React.Component {\n  getLevelingGuidePageUrl (abbreviation, currentLevel) {\n    const classGuideData = find(LEVELING_GUIDE_LINKS, g => g.abbreviation === abbreviation)\n    const { levelingGuide } = classGuideData\n\n    const matchedPage = find(levelingGuide.pages, p => {\n      const { maxLevel, minLevel } = p\n\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\n        return true\n      }\n    })\n\n    return !!matchedPage ? `${levelingGuide.url}/${matchedPage.page}/` : levelingGuide.url\n  }\n\n  updateField (abbreviation, event) {\n    const { target: { value, name } } = event\n    const { craftingClasses, saveLocalClassData } = this.props\n\n    const targetCraftingClass = find(craftingClasses, c => c.abbreviation === abbreviation)\n    const otherCraftingClasses = filter(craftingClasses, c => c.abbreviation !== abbreviation)\n    set(targetCraftingClass, name, toNumber(value))\n\n    if (name === 'currentLevel') {\n      set(targetCraftingClass, 'totalExperience', EXP_PER_LEVEL[value])\n    }\n\n    const updatedCraftingClasses = orderBy(concat(otherCraftingClasses, targetCraftingClass), ['type', 'name'])\n\n    saveLocalClassData(updatedCraftingClasses)\n  }\n\n  validateNumericFieldChange (abbreviation, event) {\n    const { target: { value, max, min } } = event\n\n    if (!!min && toNumber(value) < min) {\n      set(event, 'target.value', min)\n    }\n\n    if (!!max && toNumber(value) > max) {\n      set(event, 'target.value', max)\n    }\n\n    this.updateField(abbreviation, event)\n  }\n\n  render () {\n    const { craftingClasses } = this.props\n    return (\n      <tbody>\n      {craftingClasses.map((c, key) => {\n        const remainingExperience = calculateRemainingExp(c.currentExperience, c.totalExperience)\n        const remainingItems = calculateRemainingItems(remainingExperience, c.experiencePerItem)\n        const progressPercentage = calculateProgressPercentage(c.currentExperience, c.totalExperience)\n\n        const popover = (\n          <Popover id={`links-${c.name}`}>\n            <a\n              href={this.getLevelingGuidePageUrl(c.abbreviation, c.currentLevel)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Leveling Guide\n            </a>\n          </Popover>\n        )\n\n        return (\n          <tr key={key}>\n            <td>\n              <div className=\"flex justify-between items-center\">\n                {c.name}\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\n                  <FontAwesomeIcon icon={faIcon} className=\"text-primary pointer\" />\n                </OverlayTrigger>\n              </div>\n            </td>\n            <td>\n              <Form.Control\n                name=\"currentLevel\"\n                type=\"number\"\n                value={c.currentLevel}\n                min=\"1\"\n                max=\"70\"\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\n              />\n            </td>\n            <td>\n              <Form.Control\n                name=\"currentExperience\"\n                type=\"number\"\n                value={c.currentExperience}\n                min=\"0\"\n                max={c.totalExperience}\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\n              />\n            </td>\n            <td>{c.totalExperience}</td>\n            <td>{remainingExperience}</td>\n            <td>\n              <Form.Control\n                name=\"experiencePerItem\"\n                type=\"number\"\n                value={c.experiencePerItem}\n                min=\"1\"\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\n              />\n            </td>\n            <td>{remainingItems}</td>\n            <td>\n              <ProgressBar\n                now={progressPercentage}\n                label={`${c.currentExperience} / ${c.totalExperience} (${progressPercentage}%)`}\n              />\n            </td>\n          </tr>\n        )\n      })}\n      </tbody>\n    )\n  }\n}\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = dispatch => ({\n  saveLocalClassData: (classData) => dispatch(saveLocalClassData(classData))\n})\n\nCalculationsTableBody.propTypes = {\n  craftingClasses: PropTypes.arrayOf(PropTypes.shape()).isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalculationsTableBody)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Table } from 'react-bootstrap'\nimport { filter, isEqual, orderBy } from 'lodash'\nimport FilterDropdown from './FilterDropdown'\nimport CalculationsTableHeader from './CalculationsTableHeader'\nimport CalculationsTableBody from './CalculationsTableBody'\n\nexport default class CraftingGatheringCalculator extends React.Component {\n  state = {\n    sort: {\n      func: 'name',\n      direction: 'asc'\n    },\n    filter: {\n      func: undefined,\n      label: 'All'\n    }\n  }\n\n  applySort (sortFunc) {\n    const { sort } = this.state\n    const sortDirection = isEqual(sortFunc, sort.func) && sort.direction === 'asc' ? 'desc' : 'asc'\n    this.setState({\n      sort: {\n        func: sortFunc,\n        direction: sortDirection\n      }\n    })\n  }\n\n  applyFilter (filterFunc, event) {\n    this.setState({\n      filter: {\n        func: filterFunc,\n        label: event.target.innerText\n      }\n    })\n  }\n\n  getSortedCraftingClassData (craftingClassData) {\n    const { sort } = this.state\n    return orderBy(craftingClassData, sort.func, sort.direction)\n  }\n\n  getFilteredCraftingClassData (craftingClassData) {\n    const { filter: { func } } = this.state\n    return filter(craftingClassData, func)\n  }\n\n  render () {\n    const { craftingClassData } = this.props\n    const sortedAndFilteredCraftingClassData = this.getSortedCraftingClassData(\n      this.getFilteredCraftingClassData(craftingClassData)\n    )\n\n    return (\n      <div>\n        <div className=\"w-100 pv3 tc\">\n          <FilterDropdown label={this.state.filter.label} applyFilterFunc={this.applyFilter.bind(this)} />\n        </div>\n        <div className=\"table-responsive\">\n          <Table className=\"calculations\" striped hover>\n            <CalculationsTableHeader applySortFunc={this.applySort.bind(this)} />\n            <CalculationsTableBody craftingClasses={sortedAndFilteredCraftingClassData} />\n          </Table>\n        </div>\n      </div>\n    )\n  }\n}\n\nCraftingGatheringCalculator.propTypes = {\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  characterData: PropTypes.shape()\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class RecipeHelper extends React.Component {\n  render () {\n    const { match: { params: { craftingClass } } } = this.props\n    return (\n      <div>\n        Hi......... {craftingClass}\n      </div>\n    )\n  }\n}\n\nRecipeHelper.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      craftingClass: PropTypes.string\n    })\n  })\n}\n\nRecipeHelper.defaultProps = {\n  match: {\n    params: {\n      craftingClass: 'all'\n    }\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport { get } from 'lodash'\nimport * as actions from '../store/actions'\nimport Navigation from './navigation/Navigation'\nimport CraftingGatheringCalculator from './calculator/CraftingGatheringCalculator'\nimport RecipeHelper from './recipes/RecipeHelper'\n\nclass XivCraftingGatheringHelper extends React.Component {\n  componentDidMount () {\n    this.props.getLocalClassData()\n    this.props.getLocalCharacterData()\n  }\n\n  render () {\n    const { characterData, craftingClassData } = this.props\n\n    const Calculator = props => (\n      <CraftingGatheringCalculator\n        characterData={characterData}\n        craftingClassData={craftingClassData}\n        {...props}\n      />\n    )\n\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navigation\n          characterData={characterData}\n          craftingClassData={craftingClassData}\n        />\n        <Container fluid>\n          <Switch>\n            <Route exact path=\"/\" render={Calculator} />\n            <Route path=\"/calculations\" render={Calculator} />\n            {process.env.NODE_ENV === 'development' && (\n              <Route path=\"/recipes/:craftingClass\" component={RecipeHelper} />\n            )}\n          </Switch>\n          <div className=\"tc text-muted\">\n            Version {process.env.REACT_APP_VERSION}\n          </div>\n        </Container>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  craftingClassData: get(state, 'classData'),\n  characterData: get(state, 'characterData')\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getLocalCharacterData: () => dispatch(actions.getLocalCharacterData()),\n  getLocalClassData: () => dispatch(actions.getLocalClassData())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(XivCraftingGatheringHelper)\n","import { get } from 'lodash'\nimport * as LocalStorage from '../service/localStorage'\nimport * as T from './types'\n\nconst INITIAL_STATE = {\n  classData: LocalStorage.getDefaultCraftingClasses()\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case T.LOCAL_CLASS_DATA_STORE:\n    case T.LOCAL_CLASS_DATA_RETRIEVAL:\n      return {\n        ...state,\n        classData: get(action, 'localData')\n      }\n    case T.LOCAL_CHARACTER_DATA_CLEAR:\n      return {\n        ...state,\n        characterData: undefined\n      }\n    case T.LOCAL_CHARACTER_DATA_STORE:\n    case T.LOCAL_CHARACTER_DATA_RETRIEVAL:\n      return {\n        ...state,\n        characterData: get(action, 'localData')\n      }\n    case T.LOCAL_CLASS_DATA_CLEAR:\n      return {\n        ...state,\n        classData: LocalStorage.getDefaultCraftingClasses()\n      }\n    case T.LODESTONE_CHARACTER_DATA_SUCCESS:\n      return {\n        ...state,\n        characterData: get(action, 'payload')\n      }\n    case T.API_REQUEST_FAILURE:\n      return {\n        ...state,\n        error: action.error\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducer'\n\nexport default createStore(\n  reducer,\n  applyMiddleware(thunk)\n)\n","import React from 'react'\nimport XivCraftingGatheringHelper from './XivCraftingGatheringHelper'\nimport Provider from 'react-redux/es/components/Provider'\nimport store from '../store'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <XivCraftingGatheringHelper />\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}