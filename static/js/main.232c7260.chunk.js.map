{"version":3,"sources":["service/localStorage.js","service/xivApi.js","store/types.js","store/actions.js","components/navigation/LodestoneCharacterModal.jsx","components/navigation/LodestoneCharacterMenu.jsx","components/navigation/Navigation.jsx","components/calculator/FilterDropdown.jsx","service/calculations.js","components/calculator/SortableTableHeaderCell.jsx","components/calculator/CalculationsTableHeader.jsx","components/calculator/CalculationsTableBody.jsx","components/calculator/CraftingGatheringCalculator.jsx","components/recipes/RecipeSearchForm.jsx","components/recipes/RecipeSearchResult.jsx","components/recipes/RecipeSearch.jsx","components/recipes/MyList.jsx","service/recipe.js","components/recipes/ShoppingList.jsx","components/recipes/RecipeHelper.jsx","components/XivCraftingGatheringHelper.jsx","store/reducer.js","store/index.js","components/App.js","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","store","key","data","localStorage","setItem","JSON","stringify","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","getDefaultCraftingClasses","storedData","getItem","craftingClasses","parse","result","forEach","defaultCraftingClass","storedCraftingClass","_find","c","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","levelingGuideDiffs","push","retrieveAndUpdateCharacterData","updateCraftingClassDataWithCharacterData","classJobCategories","craftingClassData","characterData","_values","_get","_includes","_map","lodestoneClassData","_set","totalExperience","CRAFTING_CLASSES","currentLevel","currentExperience","experiencePerItem","BASE_URL","searchForCharacter","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","get","concat","sent","abrupt","stop","_x","_x2","apply","this","getCharacter","_ref2","_callee2","id","_context2","set","_x3","recipeSearch","_ref4","_callee4","searchString","columns","paramsToSend","should","_args4","_context4","toLower","indexes","body","query","bool","must","wildcard","NameCombined_en","size","from","sort","RecipeLevelTable.ClassJobLevel","limit","isArray","map","match","ClassJob.Abbreviation_en","minimum_should_match","post","_x9","_x10","getIconUrl","iconRelativePath","getRecipesById","_ref5","_callee5","recipeIds","i","_context5","params","ids","join","_x11","getItemsById","_ref6","_callee6","itemIds","_context6","_x12","LOCAL_CLASS_DATA_RETRIEVAL","LOCAL_CLASS_DATA_STORE","LOCAL_CLASS_DATA_CLEAR","LOCAL_CHARACTER_DATA_RETRIEVAL","LOCAL_CHARACTER_DATA_STORE","LOCAL_CHARACTER_DATA_CLEAR","LODESTONE_CHARACTER_DATA_REQUEST","LODESTONE_CHARACTER_DATA_SUCCESS","API_REQUEST_FAILURE","lodestoneCharacterDataRequest","characterId","T","apiRequestSuccess","payload","getLocalClassData","dispatch","localData","localClassDataRetrieve","LocalStorage","saveLocalClassData","classData","clearLocalClassData","removeItem","saveLocalCharacterData","getLocalCharacterData","localCharacterDataRetrieve","clearLocalCharacterData","LodestoneCharacterModal","state","event","_event$target","target","value","setState","defineProperty","preventDefault","loading","performSearch","XivApi","lodestoneResults","onHide","props","getLodestoneCharacterData","handleClose","_this2","show","_this$state2","results","prevPage","nextPage","react_default","createElement","Modal","bind","Form","onSubmit","handleSearch","onReset","Header","closeButton","Title","Body","Group","Label","Control","as","onChange","handleSetField","XIV_SERVERS","Button","disabled","className","Spinner","animation","variant","Fragment","char","ID","Name","Avatar","Check","htmlFor","src","alt","onClick","Footer","handleSubmitCharacterSelection","React","Component","defaultProps","getDropdownTitle","_characterData$Charac","Character","LodestoneCharacterMenu","showModal","_this$props","searchLodestoneCharacterData","importText","replace","NavDropdown","alignRight","title","Item","Divider","handleModalToggle","navigation_LodestoneCharacterModal","connect","t0","error","Navigation","Navbar","bg","sticky","lib","to","NavbarBrand","Nav","Link","process","navigation_LodestoneCharacterMenu","FilterDropdown","_this","label","applyFilterFunc","DropdownButton","Dropdown","orderBy","craftingClass","calculateRemainingExp","currentExp","totalExp","Math","max","calculateRemainingItems","remainingExp","expPerItem","ceil","calculateProgressPercentage","floor","SortableTableHeaderCell","text","sortFunc","applySorting","style","cursor","index_es","icon","faSort","tableHeaders","CalculationsTableHeader","applySortFunc","h","calculator_SortableTableHeaderCell","CalculationsTableBody","focusedRow","levelingGuide","find","LEVELING_GUIDE_LINKS","g","matchedPage","pages","p","maxLevel","minLevel","url","min","updateField","toNumber","focused","remainingExperience","remainingItems","progressPercentage","popover","Popover","href","getLevelingGuidePageUrl","rel","onFocus","handleRowFocus","onBlur","cx","OverlayTrigger","trigger","placement","overlay","rootClose","faIcon","validateNumericFieldChange","ProgressBar","now","CraftingGatheringCalculator","func","direction","filter","sortDirection","isEqual","filterFunc","innerText","targetCraftingClass","otherCraftingClasses","EXP_PER_LEVEL","sortedAndFilteredCraftingClassData","getSortedCraftingClassData","getFilteredCraftingClassData","FilterDropdown_FilterDropdown","applyFilter","Table","striped","hover","CalculationsTableHeader_CalculationsTableHeader","applySort","calculator_CalculationsTableBody","RecipeSearchForm","handleChange","handleReset","handleSubmit","recipeSearchIsInvalid","recipeSearchString","searching","isInvalid","FormControl","Feedback","RecipeSearchResult","handlePageChange","handleToggleListItem","myList","pagination","ready","recipeList","pagePrev","pageNext","r","iconUrl","craftingClassName","level","isOnList","item","faMinusSquare","faPlusSquare","colSpan","RecipeSearch","recipeSearchResults","RecipeSearchForm_RecipeSearchForm","RecipeSearchResult_RecipeSearchResult","MyList","handleGenerateShoppingList","handleUpdateQuantity","list","k","Icon","ClassJob","NameEnglish","RecipeLevelTable","ClassJobLevel","quantity","getIngredientListForRecipes","ingredientsGatherable","ingredientsCrafted","ingredientsOther","ingredientsPurchased","itemData","getAndSortRecipeResults","XivApiService","foundItem","ig","io","val","includes","addGatheringItemData","uniqBy","ic","gatheringItemId","filteredGatheringPoints","GATHERING_ITEM_POINTS","point","startsWith","pointData","getPointData","namePath","areaPath","regionPath","levelPath","typePath","aetherytePath","area","region","aetheryteId","AETHERYTE","gatheringClass","Mining","Quarrying","Logging","Harvesting","recipeResults","nextRecipeResults","recipe","t1","t2","rr","recipeListEntry","rle","_loop","itemId","amount","gatheringMapNode","ITEM_TO_GATHERING_ITEM_MAPPING","mapping","ingredientRecipe","existingIngredientGatherable","existingAmount","existingIngredientPurchased","ip","_x4","_x5","_x6","ShoppingList","prevProps","prevState","snapshot","shoppingList","gatherableStateVars","objectSpread","_this$props$shoppingL","headings","locationSelectId","gatheringType","handleLocationUpdate","craftClass","craftLevel","externalLink","XivCraftingGatheringHelper","Calculator","calculator_CraftingGatheringCalculator","assign","react_router_dom","basename","Navigation_Navigation","Container","fluid","react_router","exact","path","render","actions","INITIAL_STATE","rootReducer","combineReducers","local","action","createStore","applyMiddleware","thunk","App","Provider","components_XivCraftingGatheringHelper","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.232c7260.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\nimport { applyChanges, diff } from 'diff-json'\nimport {\n  filter as _filter,\n  find as _find,\n  get as _get,\n  includes as _includes,\n  map as _map,\n  set as _set,\n  values as _values\n} from 'lodash'\n\nconst KEYS = {\n  CHARACTER_DATA: 'character',\n  CRAFTING_CLASS_DATA: 'craftingClasses'\n}\n\nfunction store (key, data) {\n  localStorage.setItem(key, JSON.stringify(data))\n}\n\nexport function retrieveAndUpdateCraftingClassData () {\n  // get the default crafting class data\n  const defaultCraftingClasses = getDefaultCraftingClasses()\n\n  // retrieve the stored data from local storage\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\n\n  // if there is no stored data, return the default data\n  if (!storedData) {\n    return defaultCraftingClasses\n  }\n\n  // if there is stored data, convert it to JSON\n  const craftingClasses = JSON.parse(storedData)\n\n  // create a variable for the result\n  const result = []\n\n  // cycle through all \"default\" classes\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\n    // retrieve the matching stored class\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\n\n    // if there is no matching stored class data, add the default for this class to the result\n    if (!storedCraftingClass) {\n      result.push(defaultCraftingClass)\n      return\n    }\n\n    // get any added data to the default data set and apply it to the stored data\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\n    if (classDiffs.length > 0) {\n      applyChanges(storedCraftingClass, classDiffs)\n    }\n\n    // get any leveling guide data and remove it from stored data\n    const levelingGuideDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.key === 'levelingGuide')\n    if (levelingGuideDiffs.length > 0) {\n      applyChanges(storedCraftingClass, levelingGuideDiffs)\n    }\n\n    // add this record to the result to return\n    result.push(storedCraftingClass)\n  })\n\n  // send back the updated stored data\n  return result\n}\n\nexport function retrieveAndUpdateCharacterData () {\n  // get the stored character data\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\n\n  // if there is no character data, return undefined\n  if (!storedData) {\n    return undefined\n  }\n\n  // if there is, update it\n  // TBD\n\n  // return the character data\n  return JSON.parse(storedData)\n}\n\nexport function storeCharacterData (characterData) {\n  // localStorage.setItem(KEYS.CHARACTER_DATA, JSON.stringify(characterData))\n  store(KEYS.CHARACTER_DATA, characterData)\n}\n\nexport function storeCraftingClassData (craftingClasses) {\n  // localStorage.setItem(KEYS.CRAFTING_CLASS_DATA, JSON.stringify(craftingClasses))\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\n}\n\nexport function clearCharacterData () {\n  if (!!localStorage.getItem(KEYS.CHARACTER_DATA)) {\n    localStorage.removeItem(KEYS.CHARACTER_DATA)\n  }\n}\n\nexport function clearCraftingClassData () {\n  if (!!localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)) {\n    localStorage.removeItem(KEYS.CRAFTING_CLASS_DATA)\n  }\n}\n\nexport function updateCraftingClassDataWithCharacterData () {\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\n\n  return _map(craftingClassData, c => {\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\n    return c\n  })\n}\n\nexport function getDefaultCraftingClasses () {\n  return _map(CRAFTING_CLASSES, c => {\n    c.currentLevel = 1\n    c.currentExperience = 0\n    c.experiencePerItem = 1\n    c.totalExperience = 300\n    return c\n  })\n}\n","import axios from 'axios'\nimport { map, get, isArray, set, toLower } from 'lodash'\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\n\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\nconst BASE_URL = 'https://xivapi.com'\n\nexport const searchForCharacter = async (server, name, page = 1) => {\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\n  return get(result, 'data', [])\n}\n\nexport const getCharacter = async id => {\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\n  set(result, 'data.characterId', id)\n  return get(result, 'data', {})\n}\n\nconst search = async (indexes, filters, sortField, columns, searchString) => {\n  if (isArray(indexes)) {\n    indexes = indexes.join(',')\n  }\n\n  if (isArray(filters)) {\n    filters = filters.join(',')\n  }\n\n  const params = {\n    indexes,\n    filters,\n    columns,\n    string: searchString\n  }\n\n  if (!!sortField) {\n    params['sort_field'] = sortField\n    params['sort_order'] = 'asc'\n  }\n\n  const result = await axios.get(`${BASE_URL}/search`, {\n    params\n  })\n  return get(result, 'data', {})\n}\n\nexport const recipeSearch = async (abbreviation, searchString, page = 1) => {\n  const indexes = 'recipe'\n  const size = 10\n  const columns = [\n    'ID',\n    'ClassJob.Abbreviation_en',\n    'ClassJob.Icon',\n    'ClassJob.NameEnglish',\n    'RecipeLevelTable.ClassJobLevel',\n    'Name',\n    'Icon'\n  ]\n\n  searchString = toLower(searchString)\n\n  const paramsToSend = {\n    indexes,\n    body: {\n      query: {\n        bool: {\n          must: [\n            {\n              wildcard: {\n                'NameCombined_en': `*${searchString}*`\n              }\n            }\n          ]\n        }\n      },\n      size,\n      from: size * (page - 1),\n      sort: [\n        {\n          'RecipeLevelTable.ClassJobLevel': 'asc'\n        }\n      ]\n    },\n    columns,\n    limit: size,\n    page\n  }\n\n  if (!!abbreviation) {\n    const minimum_should_match = 1\n    // const should = []\n        // {\n        //   match: {\n        //     'ClassJob.Abbreviation_en': 'WVR'\n        //   }\n        // },\n\n    abbreviation = isArray(abbreviation) ? abbreviation : [abbreviation]\n    const should = map(abbreviation, a => ({\n      match: {\n        'ClassJob.Abbreviation_en': a\n      }\n    }))\n\n    paramsToSend.body.query.bool.should = should\n    paramsToSend.body.query.bool.minimum_should_match = minimum_should_match\n  }\n\n  const result = await axios.post(`${BASE_URL}/search`,\n    paramsToSend\n  )\n  return get(result, 'data', {})\n}\n\nexport const getIconUrl = iconRelativePath => `${BASE_URL}${iconRelativePath}`\n\nexport const getRecipesById = async recipeIds => {\n  const columns = [\n    'ID',\n    'Name'\n  ]\n\n  for (let i = 0; i < 10; i++) {\n    columns.push(`AmountIngredient${i}`)\n    columns.push(`ItemIngredient${i}.ID`)\n    columns.push(`ItemIngredient${i}.Icon`)\n    columns.push(`ItemIngredient${i}.Name`)\n    columns.push(`ItemIngredientRecipe${i}`)\n  }\n\n  const result = await axios.get(`${BASE_URL}/recipe`, {\n    params: {\n      ids: recipeIds.join(','),\n      columns: columns.join(',')\n    }\n  })\n  return get(result, 'data', {})\n}\n\nexport const getItemsById = async itemIds => {\n  const columns = [\n    'ID',\n    'Name',\n    'Icon',\n    'GameContentLinks'\n  ]\n\n  const result = await axios.get(`${BASE_URL}/item`, {\n    params: {\n      ids: itemIds.join(','),\n      columns: columns.join(',')\n    }\n  })\n\n  return get(result, 'data', {})\n}\n","const LODESTONE = 'LODESTONE'\nconst LOCAL = 'LOCAL'\n\nconst REQUEST = 'REQUEST'\nconst SUCCESS = 'SUCCESS'\nconst FAILURE = 'FAILURE'\n\nexport const LOCAL_CLASS_DATA_RETRIEVAL = `${LOCAL}_CLASS_DATA_RETRIEVAL`\nexport const LOCAL_CLASS_DATA_STORE = `${LOCAL}_CLASS_DATA_STORE`\nexport const LOCAL_CLASS_DATA_CLEAR = `${LOCAL}_CLASS_DATA_CLEAR`\n\nexport const LOCAL_CHARACTER_DATA_RETRIEVAL = `${LOCAL}_CHARACTER_DATA_RETRIEVAL`\nexport const LOCAL_CHARACTER_DATA_STORE = `${LOCAL}_CHARACTER_DATA_STORE`\nexport const LOCAL_CHARACTER_DATA_CLEAR = `${LOCAL}_CHARACTER_DATA_CLEAR`\n\nexport const LODESTONE_CHARACTER_DATA_REQUEST = `${LODESTONE}_CHARACTER_DATA_${REQUEST}`\nexport const LODESTONE_CHARACTER_DATA_SUCCESS = `${LODESTONE}_CHARACTER_DATA_${SUCCESS}`\nexport const API_REQUEST_FAILURE = `${LODESTONE}_CHARACTER_DATA_${FAILURE}`\n","import * as LocalStorage from '../service/localStorage'\nimport * as XivApi from '../service/xivApi'\nimport * as T from './types'\n\nconst localClassDataRetrieve = localData => ({\n  type: T.LOCAL_CLASS_DATA_RETRIEVAL,\n  localData\n})\n\nconst localClassDataStore = localData => ({\n  type: T.LOCAL_CLASS_DATA_STORE,\n  localData\n})\n\nconst localClassDataClear = () => ({\n  type: T.LOCAL_CLASS_DATA_CLEAR\n})\n\nconst localCharacterDataRetrieve = localData => ({\n  type: T.LOCAL_CHARACTER_DATA_RETRIEVAL,\n  localData\n})\n\nconst localCharacterDataStore = localData => ({\n  type: T.LOCAL_CHARACTER_DATA_STORE,\n  localData\n})\n\nconst localCharacterDataClear = () => ({\n  type: T.LOCAL_CHARACTER_DATA_CLEAR\n})\n\nconst lodestoneCharacterDataRequest = characterId => ({\n  type: T.LODESTONE_CHARACTER_DATA_REQUEST,\n  characterId\n})\n\nconst apiRequestSuccess = (type, payload) => ({\n  type,\n  payload\n})\n\nconst apiRequestFailure = (type, error) => ({\n  type,\n  error\n})\n\nexport const getLocalClassData = () => {\n  return dispatch => {\n    const localData = LocalStorage.retrieveAndUpdateCraftingClassData()\n    dispatch(localClassDataRetrieve(localData))\n  }\n}\n\nexport const saveLocalClassData = classData => {\n  return dispatch => {\n    LocalStorage.storeCraftingClassData(classData)\n    dispatch(localClassDataStore(classData))\n  }\n}\n\nexport const clearLocalClassData = () => {\n  return dispatch => {\n    LocalStorage.clearCraftingClassData()\n    dispatch(localClassDataClear())\n  }\n}\n\nexport const saveLocalCharacterData = characterData => {\n  return dispatch => {\n    LocalStorage.storeCharacterData(characterData)\n    dispatch(localCharacterDataStore(characterData))\n  }\n}\n\nexport const getLocalCharacterData = () => {\n  return dispatch => {\n    const localData = LocalStorage.retrieveAndUpdateCharacterData()\n    dispatch(localCharacterDataRetrieve(localData))\n  }\n}\n\nexport const clearLocalCharacterData = () => {\n  return dispatch => {\n    LocalStorage.clearCharacterData()\n    dispatch(localCharacterDataClear())\n  }\n}\n\nexport const getLodestoneCharacterData = characterId => {\n  return async dispatch => {\n    dispatch(lodestoneCharacterDataRequest(characterId))\n    try {\n      const payload = await XivApi.getCharacter(characterId)\n      dispatch(apiRequestSuccess(T.LODESTONE_CHARACTER_DATA_SUCCESS, payload))\n      dispatch(saveLocalCharacterData(payload))\n      dispatch(saveLocalClassData(LocalStorage.updateCraftingClassDataWithCharacterData()))\n      dispatch(getLocalClassData())\n    } catch (err) {\n      dispatch(apiRequestFailure(T.API_REQUEST_FAILURE, err))\n    }\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap'\nimport { get, map as _map } from 'lodash'\nimport XIV_SERVERS from '../../data/xiv-servers'\nimport * as XivApi from '../../service/xivApi'\n\nclass LodestoneCharacterModal extends React.Component {\n  state = {}\n\n  handleSetField (event) {\n    const { target: { name, value } } = event\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSearch (page = 1, event) {\n    !!event && event.preventDefault()\n    this.setState({\n      loading: true,\n      page\n    }, this.performSearch)\n  }\n\n  async performSearch () {\n    const { name, server, page } = this.state\n    const result = await XivApi.searchForCharacter(server, name, page)\n    this.setState({\n      lodestoneResults: result,\n      loading: false\n    })\n  }\n\n  handleClose () {\n    const { onHide } = this.props\n    this.setState({\n      name: undefined,\n      server: undefined,\n      lodestoneResults: undefined,\n      characterId: undefined\n    }, onHide)\n  }\n\n  handleSubmitCharacterSelection () {\n    const { getLodestoneCharacterData } = this.props\n    const { characterId } = this.state\n\n    getLodestoneCharacterData(characterId)\n    this.handleClose()\n  }\n\n  render () {\n    const { show } = this.props\n    const { characterId, loading, lodestoneResults, name, server } = this.state\n\n    const results = get(lodestoneResults, 'Results', [])\n    const prevPage = get(lodestoneResults, 'Pagination.PagePrev')\n    const nextPage = get(lodestoneResults, 'Pagination.PageNext')\n\n    return (\n      <Modal show={show} onHide={this.handleClose.bind(this)}>\n        <Form\n          onSubmit={this.handleSearch.bind(this, 1)}\n          onReset={this.handleClose.bind(this)}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              Import Character Data\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Server</Form.Label>\n              <Form.Control name=\"server\" as=\"select\" onChange={this.handleSetField.bind(this)}>\n                <option>Choose a Server</option>\n                {_map(XIV_SERVERS, (server, key) => (\n                  <option key={key} value={server}>{server}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control name=\"name\" type=\"text\" onChange={this.handleSetField.bind(this)} />\n            </Form.Group>\n            <Button type=\"submit\" disabled={!name || !server}>\n              Search\n            </Button>\n            <hr />\n            {!!loading && (\n              <div className=\"fullWidth text-center\">\n                <Spinner animation=\"grow\" variant=\"danger\" />\n                <Spinner animation=\"grow\" variant=\"warning\" />\n                <Spinner animation=\"grow\" variant=\"success\" />\n              </div>\n            )}\n            {!loading && !results.length && (\n              <div>\n                No results available.\n              </div>\n            )}\n            {!loading && !!results.length && (\n              <React.Fragment>\n                <div className=\"lodestoneResults\">\n                  {results.map((char, key) => {\n                    const { ID, Name, Avatar } = char\n                    return (\n                      <div\n                        key={key}\n                        className=\"flex justify-between items-center\"\n                      >\n                        <Form.Check\n                          id={ID}\n                          type=\"radio\"\n                          name=\"characterId\"\n                          value={ID}\n                          onChange={this.handleSetField.bind(this)}\n                        />\n                        <label htmlFor={ID}>{Name}</label>\n                        <label htmlFor={ID}>\n                          <img className=\"avatar\" src={Avatar} alt={Name} />\n                        </label>\n                      </div>\n                    )\n                  })}\n                </div>\n                <div className=\"flex justify-between items-center pt2\">\n                  <div className=\"w-50 tl\">\n                    {!!prevPage && (\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, prevPage)}>\n                        Prev Page\n                      </Button>\n                    )}\n                  </div>\n                  <div className=\"w-50 tr\">\n                    {nextPage && (\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, nextPage)}>\n                        Next Page\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"danger\"\n              type=\"reset\"\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              disabled={!characterId}\n              onClick={this.handleSubmitCharacterSelection.bind(this)}\n            >\n              Load Data\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    )\n  }\n}\n\nLodestoneCharacterModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired\n}\n\nLodestoneCharacterModal.defaultProps = {\n  show: false\n}\n\nexport default LodestoneCharacterModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { get } from 'lodash'\nimport { NavDropdown } from 'react-bootstrap'\nimport { clearLocalCharacterData, clearLocalClassData, getLodestoneCharacterData } from '../../store/actions'\nimport LodestoneCharacterModal from './LodestoneCharacterModal'\n\nconst getDropdownTitle = characterData => {\n  if (get(characterData, 'Character.Avatar')) {\n    const { Character: { Avatar, Name } } = characterData\n    return (\n      <span className=\"items-center\">\n        {Name}\n        <span className=\"ml2\"><img src={Avatar} alt={Name} className=\"avatar\" /></span>\n      </span>\n    )\n  }\n\n  return 'Options'\n}\n\nclass LodestoneCharacterMenu extends React.Component {\n  state = {\n    showModal: false\n  }\n\n  handleModalToggle (showModal) {\n    this.setState({\n      showModal: showModal\n    })\n  }\n\n  render () {\n    const {\n      characterData,\n      clearLocalCharacterData,\n      clearLocalClassData,\n      getLodestoneCharacterData,\n      lodestoneResults,\n      searchLodestoneCharacterData\n    } = this.props\n\n    const importText = `Import ${!characterData ? '' : 'Different'} Character Data`.replace('  ', ' ')\n\n    return (\n      <React.Fragment>\n        <NavDropdown\n          alignRight\n          title={getDropdownTitle(characterData)}\n        >\n          {!!characterData && (\n            <React.Fragment>\n              <NavDropdown.Item onClick={getLodestoneCharacterData.bind(this, characterData.characterId)}>\n                Refresh Character Data\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n            </React.Fragment>\n          )}\n          <NavDropdown.Item onClick={this.handleModalToggle.bind(this, true)}>\n            {importText}\n          </NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item onClick={clearLocalClassData}>\n            Clear Crafting Class Data\n          </NavDropdown.Item>\n          {!!characterData && (\n            <NavDropdown.Item onClick={clearLocalCharacterData}>\n              Clear Character Data\n            </NavDropdown.Item>\n          )}\n        </NavDropdown>\n        <LodestoneCharacterModal\n          lodestoneResults={lodestoneResults}\n          onHide={this.handleModalToggle.bind(this, false)}\n          searchLodestoneCharacterData={searchLodestoneCharacterData}\n          show={this.state.showModal}\n          getLodestoneCharacterData={getLodestoneCharacterData}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nLodestoneCharacterMenu.propTypes = {\n  characterData: PropTypes.shape()\n}\n\nconst mapStateToProps = () => ({})\n\nconst mapDispatchToProps = dispatch => ({\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId)),\n  clearLocalCharacterData: () => dispatch(clearLocalCharacterData()),\n  clearLocalClassData: () => dispatch(clearLocalClassData())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LodestoneCharacterMenu)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Nav, Navbar, NavbarBrand } from 'react-bootstrap'\nimport LodestoneCharacterMenu from './LodestoneCharacterMenu'\n\nexport default class Navigation extends React.Component {\n  render () {\n    const { characterData } = this.props\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n        <LinkContainer to=\"/\">\n          <NavbarBrand>\n            FFXIV Crafting & Gathering Helper\n          </NavbarBrand>\n        </LinkContainer>\n        <Nav className=\"mr-auto\">\n          <LinkContainer to=\"/calculations\">\n            <Nav.Link>\n              Calculations\n            </Nav.Link>\n          </LinkContainer>\n          {process.env.NODE_ENV === 'development' && (\n            <LinkContainer to=\"/recipes/all\">\n              <Nav.Link>\n                Recipes\n              </Nav.Link>\n            </LinkContainer>\n          )}\n        </Nav>\n        <Nav>\n          <LodestoneCharacterMenu\n            characterData={characterData}\n          />\n        </Nav>\n      </Navbar>\n    )\n  }\n}\n\nNavigation.propTypes = {\n  characterData: PropTypes.shape(),\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape())\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport { orderBy } from 'lodash'\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\n\nexport default class FilterDropdown extends React.Component {\n  render () {\n    const { label, applyFilterFunc } = this.props\n    return (\n      <DropdownButton title={`Showing ${label}`}>\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => !!c)}>\n          All\n        </Dropdown.Item>\n        <Dropdown.Divider/>\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'crafting')}>\n          Crafting Classes\n        </Dropdown.Item>\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'gathering')}>\n          Gathering Classes\n        </Dropdown.Item>\n        <Dropdown.Divider/>\n        {orderBy(CRAFTING_CLASSES, 'name').map((craftingClass, key) => (\n          <Dropdown.Item\n            key={key}\n            onClick={applyFilterFunc.bind(this, c => c.abbreviation === craftingClass.abbreviation)}\n          >\n            {craftingClass.name}\n          </Dropdown.Item>\n        ))}\n      </DropdownButton>\n    )\n  }\n}\n\nFilterDropdown.propTypes = {\n  label: PropTypes.string.isRequired,\n  applyFilterFunc: PropTypes.func.isRequired\n}\n","export function calculateRemainingExp (currentExp, totalExp) {\n  return Math.max(totalExp - currentExp, 0)\n}\n\nexport function calculateRemainingItems (remainingExp, expPerItem) {\n  return Math.ceil(remainingExp / expPerItem)\n}\n\nexport function calculateProgressPercentage (currentExp, totalExp) {\n  return totalExp <= 0 ? 0 : Math.floor((currentExp / totalExp) * 100)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\n\nclass SortableTableHeaderCell extends React.Component {\n  render () {\n    const { className, text, sortFunc, applySorting } = this.props\n    return (\n      <th className={className} onClick={applySorting.bind(this, sortFunc)}\n        style={{ cursor: 'pointer' }}\n      >\n        {text}\n        <FontAwesomeIcon\n          className=\"margin-left\"\n          icon={faSort}\n        />\n      </th>\n    )\n  }\n}\n\nSortableTableHeaderCell.propTypes = {\n  text: PropTypes.string.isRequired,\n  sortFunc: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  applySorting: PropTypes.func.isRequired\n}\n\nexport default SortableTableHeaderCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\nimport SortableTableHeaderCell from './SortableTableHeaderCell'\n\nconst tableHeaders = [\n  { name: 'Class', sortFunc: 'name' },\n  { name: 'Level', sortFunc: 'currentLevel' },\n  { name: 'Current Exp.', sortFunc: 'currentExperience' },\n  { name: 'Required Exp.', sortFunc: undefined },\n  { name: 'Remaining Exp.', sortFunc: c => calculateRemainingExp(c.currentExperience, c.totalExperience) },\n  { name: 'Exp. Per Item', sortFunc: 'experiencePerItem' },\n  {\n    name: 'Remaining Items',\n    sortFunc: c => calculateRemainingItems(\n      calculateRemainingExp(c.currentExperience, c.totalExperience), c.experiencePerItem\n    )\n  },\n  { name: 'Progress', sortFunc: c => calculateProgressPercentage(c.currentExperience, c.totalExperience) }\n]\n\nexport default class CalculationsTableHeader extends React.Component {\n  render () {\n    const { applySortFunc } = this.props\n    return (\n      <thead>\n      <tr>\n        {tableHeaders.map((h, key) => {\n          if (h.sortFunc) {\n            return (\n              <SortableTableHeaderCell\n                key={key}\n                text={h.name}\n                sortFunc={h.sortFunc}\n                applySorting={applySortFunc}\n              />\n            )\n          } else {\n            return (\n              <th key={key}>\n                {h.name}\n              </th>\n            )\n          }\n        })}\n      </tr>\n      </thead>\n    )\n  }\n}\n\nCalculationsTableHeader.propTypes = {\n  applySortFunc: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\nimport Form from 'react-bootstrap/es/Form'\nimport { OverlayTrigger, Popover, ProgressBar } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\nimport { find, set, toNumber } from 'lodash'\nimport LEVELING_GUIDE_LINKS from '../../data/leveling-guide-links'\n\nclass CalculationsTableBody extends React.Component {\n  state = {\n    focusedRow: undefined\n  }\n\n  getLevelingGuidePageUrl (abbreviation, currentLevel) {\n    const classGuideData = find(LEVELING_GUIDE_LINKS, g => g.abbreviation === abbreviation)\n    const { levelingGuide } = classGuideData\n\n    const matchedPage = find(levelingGuide.pages, p => {\n      const { maxLevel, minLevel } = p\n\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\n        return true\n      }\n    })\n\n    return !!matchedPage ? `${levelingGuide.url}/${matchedPage.page}/` : levelingGuide.url\n  }\n\n  validateNumericFieldChange (abbreviation, event) {\n    const { target: { value, max, min } } = event\n    const { updateField } = this.props\n\n    if (!!min && toNumber(value) < min) {\n      set(event, 'target.value', min)\n    }\n\n    if (!!max && toNumber(value) > max) {\n      set(event, 'target.value', max)\n    }\n\n    updateField(abbreviation, event)\n  }\n\n  handleRowFocus (abbreviation, focused) {\n    this.setState({\n      focusedRow: focused ? abbreviation : undefined\n    })\n  }\n\n  render () {\n    const { craftingClasses } = this.props\n    return (\n      <tbody>\n      {craftingClasses.map(c => {\n        const remainingExperience = calculateRemainingExp(c.currentExperience, c.totalExperience)\n        const remainingItems = calculateRemainingItems(remainingExperience, c.experiencePerItem)\n        const progressPercentage = calculateProgressPercentage(c.currentExperience, c.totalExperience)\n\n        const popover = (\n          <Popover id={`links-${c.name}`}>\n            <a\n              href={this.getLevelingGuidePageUrl(c.abbreviation, c.currentLevel)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Leveling Guide\n            </a>\n          </Popover>\n        )\n\n        return (\n          <tr\n            key={`calculationTableRow${c.abbreviation}`}\n            onFocus={this.handleRowFocus.bind(this, c.abbreviation, true)}\n            onBlur={this.handleRowFocus.bind(this, c.abbreviation, false)}\n            className={cx(this.state.focusedRow === c.abbreviation ? 'focused' : undefined)}\n          >\n            <td>\n              <div className=\"flex justify-between items-center\">\n                {c.name}\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\n                  <FontAwesomeIcon icon={faIcon} className=\"text-primary pointer\" />\n                </OverlayTrigger>\n              </div>\n            </td>\n            <td>\n              <Form.Control\n                name=\"currentLevel\"\n                type=\"number\"\n                value={c.currentLevel}\n                min=\"1\"\n                max=\"70\"\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\n              />\n            </td>\n            <td>\n              <Form.Control\n                name=\"currentExperience\"\n                type=\"number\"\n                value={c.currentExperience}\n                min=\"0\"\n                max={c.totalExperience}\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\n              />\n            </td>\n            <td>{c.totalExperience}</td>\n            <td>{remainingExperience}</td>\n            <td>\n              <Form.Control\n                name=\"experiencePerItem\"\n                type=\"number\"\n                value={c.experiencePerItem}\n                min=\"1\"\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\n              />\n            </td>\n            <td>{remainingItems}</td>\n            <td>\n              <ProgressBar\n                now={progressPercentage}\n                label={`${c.currentExperience} / ${c.totalExperience} (${progressPercentage}%)`}\n              />\n            </td>\n          </tr>\n        )\n      })}\n      </tbody>\n    )\n  }\n}\n\nCalculationsTableBody.propTypes = {\n  craftingClasses: PropTypes.arrayOf(PropTypes.shape()).isRequired\n}\n\nexport default CalculationsTableBody\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Table } from 'react-bootstrap'\nimport { concat, filter, find, isEqual, orderBy, set, toNumber } from 'lodash'\nimport FilterDropdown from './FilterDropdown'\nimport CalculationsTableHeader from './CalculationsTableHeader'\nimport CalculationsTableBody from './CalculationsTableBody'\nimport EXP_PER_LEVEL from '../../data/exp-per-level'\nimport { saveLocalClassData } from '../../store/actions'\n\nclass CraftingGatheringCalculator extends React.Component {\n  state = {\n    sort: {\n      func: 'name',\n      direction: 'asc'\n    },\n    filter: {\n      func: undefined,\n      label: 'All'\n    }\n  }\n\n  applySort (sortFunc) {\n    const { sort } = this.state\n    const sortDirection = isEqual(sortFunc, sort.func) && sort.direction === 'asc' ? 'desc' : 'asc'\n    this.setState({\n      sort: {\n        func: sortFunc,\n        direction: sortDirection\n      }\n    })\n  }\n\n  applyFilter (filterFunc, event) {\n    this.setState({\n      filter: {\n        func: filterFunc,\n        label: event.target.innerText\n      }\n    })\n  }\n\n  getSortedCraftingClassData (craftingClassData) {\n    const { sort } = this.state\n    return orderBy(craftingClassData, sort.func, sort.direction)\n  }\n\n  getFilteredCraftingClassData (craftingClassData) {\n    const { filter: { func } } = this.state\n    return filter(craftingClassData, func)\n  }\n\n  updateField (abbreviation, event) {\n    const { target: { value, name } } = event\n    const { craftingClassData, saveLocalClassData } = this.props\n\n    const targetCraftingClass = find(craftingClassData, c => c.abbreviation === abbreviation)\n    const otherCraftingClasses = filter(craftingClassData, c => c.abbreviation !== abbreviation)\n    set(targetCraftingClass, name, toNumber(value))\n\n    if (name === 'currentLevel') {\n      set(targetCraftingClass, 'totalExperience', EXP_PER_LEVEL[value])\n    }\n\n    const updatedCraftingClasses = orderBy(concat(otherCraftingClasses, targetCraftingClass), ['type', 'name'])\n\n    saveLocalClassData(updatedCraftingClasses)\n  }\n\n  render () {\n    const { craftingClassData } = this.props\n    const sortedAndFilteredCraftingClassData = this.getSortedCraftingClassData(\n      this.getFilteredCraftingClassData(craftingClassData)\n    )\n\n    return (\n      <div>\n        <div className=\"w-100 pv3 tc\">\n          <FilterDropdown label={this.state.filter.label} applyFilterFunc={this.applyFilter.bind(this)} />\n        </div>\n        <div className=\"table-responsive\">\n          <Table className=\"calculations\" striped hover>\n            <CalculationsTableHeader applySortFunc={this.applySort.bind(this)} />\n            <CalculationsTableBody\n              craftingClasses={sortedAndFilteredCraftingClassData}\n              updateField={this.updateField.bind(this)}\n            />\n          </Table>\n        </div>\n      </div>\n    )\n  }\n}\n\nCraftingGatheringCalculator.propTypes = {\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  characterData: PropTypes.shape()\n}\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = dispatch => ({\n  saveLocalClassData: (classData) => dispatch(saveLocalClassData(classData))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CraftingGatheringCalculator)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Form, FormControl } from 'react-bootstrap'\n\nexport default class RecipeSearchForm extends React.Component {\n  render () {\n    const { handleChange, handleReset, handleSubmit, recipeSearchIsInvalid, recipeSearchString, searching } = this.props\n    return (\n      <React.Fragment>\n        <Form onReset={handleReset} onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Enter Your Search Term(s)</Form.Label>\n            <Form.Control\n              as=\"input\"\n              name=\"recipeSearchString\"\n              value={recipeSearchString}\n              onChange={handleChange}\n              isInvalid={!!recipeSearchIsInvalid}\n            />\n            <FormControl.Feedback type=\"invalid\">\n              Please enter a search term.\n            </FormControl.Feedback>\n          </Form.Group>\n          <Button type=\"reset\" variant=\"danger\" className=\"mr1\" disabled={!!searching}>Clear</Button>\n          <Button type=\"submit\" variant=\"primary\" className=\"ml1\" disabled={!!searching}>Go!</Button>\n        </Form>\n      </React.Fragment>\n    )\n  }\n}\n\nRecipeSearchForm.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleReset: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\n  recipeSearchString: PropTypes.string.isRequired,\n  searching: PropTypes.bool.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { find, get } from 'lodash'\nimport { Button, Spinner, Table } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare, faMinusSquare } from '@fortawesome/free-solid-svg-icons'\nimport { getIconUrl } from '../../service/xivApi'\n\nexport default class RecipeSearchResult extends React.Component {\n  render () {\n    const { handlePageChange, handleToggleListItem, myList, pagination, ready, recipeList } = this.props\n\n    if (!ready) {\n      return (\n        <div className=\"tc\">\n          <Spinner animation=\"grow\" variant=\"primary\" />\n          <Spinner animation=\"grow\" variant=\"primary\" />\n          <Spinner animation=\"grow\" variant=\"primary\" />\n        </div>\n      )\n    }\n\n    if (!recipeList.length) {\n      return (\n        <div className=\"tc\">\n          No Results to Display\n        </div>\n      )\n    }\n\n    const pagePrev = get(pagination, 'PagePrev')\n    const pageNext = get(pagination, 'PageNext')\n\n    return (\n      <Table className=\"recipes\" hover striped>\n        <thead>\n        <tr>\n          <th />\n          <th>Crafting Class</th>\n          <th>Item Name</th>\n          <th>Required Level to Craft</th>\n          <th>Add/Remove</th>\n        </tr>\n        </thead>\n        <tbody>\n        {recipeList.map((r, key) => {\n          const iconUrl = getIconUrl(get(r, 'Icon', ''))\n          const name = get(r, 'Name')\n          const craftingClassName = get(r, 'ClassJob.NameEnglish')\n          const level = get(r, 'RecipeLevelTable.ClassJobLevel')\n          const isOnList = !!find(myList, item => get(item, 'ID') === get(r, 'ID'))\n\n          return (\n            <tr key={key}>\n              <td><img src={iconUrl} alt={name} /></td>\n              <td>{craftingClassName}</td>\n              <td>{name}</td>\n              <td>{level}</td>\n              <td>\n                <Button onClick={handleToggleListItem.bind(this, r)} variant={isOnList ? 'danger' : 'success'}>\n                  <FontAwesomeIcon\n                    icon={isOnList ? faMinusSquare : faPlusSquare}\n                  />\n                </Button>\n              </td>\n            </tr>\n          )\n        })}\n        </tbody>\n        {(!!pagePrev || !!pageNext) && (\n          <tfoot>\n          <tr>\n            <td colSpan={5}>\n              <div className=\"w-50 dib tl\">\n                {!!pagePrev && (\n                  <Button value={pagePrev} onClick={handlePageChange}>\n                    Previous\n                  </Button>\n                )}\n              </div>\n              <div className=\"w-50 dib tr\">\n                {!!pageNext && (\n                  <Button value={pageNext} onClick={handlePageChange}>\n                    Next\n                  </Button>\n                )}\n              </div>\n            </td>\n          </tr>\n          </tfoot>\n        )}\n      </Table>\n    )\n  }\n}\n\nRecipeSearchResult.propTypes = {\n  handlePageChange: PropTypes.func.isRequired,\n  handleToggleListItem: PropTypes.func.isRequired,\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  pagination: PropTypes.shape().isRequired,\n  recipeList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  ready: PropTypes.bool.isRequired\n}\n\nRecipeSearchResult.defaultProps = {\n  myList: [],\n  pagination: {},\n  recipeList: [],\n  ready: true\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { get } from 'lodash'\nimport RecipeSearchForm from './RecipeSearchForm'\nimport RecipeSearchResult from './RecipeSearchResult'\n\nexport default class RecipeSearch extends React.Component {\n  render () {\n    const {\n      handleChange,\n      handlePageChange,\n      handleReset,\n      handleSubmit,\n      handleToggleListItem,\n      myList,\n      recipeSearchIsInvalid,\n      recipeSearchResults,\n      recipeSearchString,\n      searching\n    } = this.props\n\n    const pagination = get(recipeSearchResults, 'Pagination')\n    const recipeList = get(recipeSearchResults, 'Results')\n\n    return (\n      <React.Fragment>\n        <RecipeSearchForm\n          handleChange={handleChange}\n          handleReset={handleReset}\n          handleSubmit={handleSubmit}\n          recipeSearchIsInvalid={recipeSearchIsInvalid}\n          recipeSearchString={recipeSearchString}\n          searching={searching}\n        />\n        <hr />\n        <RecipeSearchResult\n          handlePageChange={handlePageChange}\n          handleToggleListItem={handleToggleListItem}\n          myList={myList}\n          pagination={pagination}\n          recipeList={recipeList}\n          ready={!searching}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nRecipeSearch.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handlePageChange: PropTypes.func.isRequired,\n  handleReset: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleToggleListItem: PropTypes.func.isRequired,\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\n  recipeSearchResults: PropTypes.shape(),\n  recipeSearchString: PropTypes.string.isRequired,\n  searching: PropTypes.bool.isRequired\n}\n\nRecipeSearch.defaultProps = {\n  myList: [],\n  recipeSearchResults: {}\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Form, Table } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinusSquare } from '@fortawesome/free-solid-svg-icons'\nimport { getIconUrl } from '../../service/xivApi'\n\nexport default class MyList extends React.Component {\n  render () {\n    const { handleGenerateShoppingList, handleToggleListItem, handleUpdateQuantity, list } = this.props\n\n    if (!list.length) {\n      return (\n        <div className=\"tc\">\n          No Items in List\n        </div>\n      )\n    }\n\n    return (\n      <Table className=\"recipes\" hover striped>\n        <thead>\n        <tr>\n          <th />\n          <th>Crafting Class</th>\n          <th>Item Name</th>\n          <th>Required Level to Craft</th>\n          <th>Quantity</th>\n          <th>Remove</th>\n        </tr>\n        </thead>\n        <tbody>\n        {list.map((i, k) => (\n          <tr key={k}>\n            <td><img src={getIconUrl(i.Icon)} alt={i.Name} /></td>\n            <td>{i.ClassJob.NameEnglish}</td>\n            <td>{i.Name}</td>\n            <td>{i.RecipeLevelTable.ClassJobLevel}</td>\n            <td>\n              <Form.Control type=\"number\" value={i.quantity} onChange={handleUpdateQuantity.bind(this, i)} />\n            </td>\n            <td>\n              <Button variant=\"danger\" onClick={handleToggleListItem.bind(this, i)}>\n                <FontAwesomeIcon icon={faMinusSquare} />\n              </Button>\n            </td>\n          </tr>\n        ))}\n        </tbody>\n        {list.length && (\n          <tfoot>\n          <tr>\n            <td colSpan={6} className=\"tc\">\n              <Button variant=\"primary\" onClick={handleGenerateShoppingList}>\n                Create My Shopping List\n              </Button>\n            </td>\n          </tr>\n          </tfoot>\n        )}\n      </Table>\n    )\n  }\n}\n\nMyList.propTypes = {\n  handleGenerateShoppingList: PropTypes.func.isRequired,\n  handleToggleListItem: PropTypes.func.isRequired,\n  handleUpdateQuantity: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(PropTypes.shape({\n    ClassJob: PropTypes.shape({\n      Abbreviation_en: PropTypes.string.isRequired,\n      NameEnglish: PropTypes.string.isRequired\n    }),\n    Icon: PropTypes.string.isRequired,\n    Name: PropTypes.string.isRequired,\n    quantity: PropTypes.number,\n    RecipeLevelTable: PropTypes.shape({\n      ClassJobLevel: PropTypes.number.isRequired\n    }).isRequired\n  })).isRequired\n}\n\nMyList.defaultProps = {\n  list: []\n}\n","import { concat, filter, find, forEach, get, includes, map, set, toLower, uniqBy, orderBy } from 'lodash'\nimport ITEM_TO_GATHERING_ITEM_MAPPING from '../data/item-to-gathering-item-mapping'\nimport GATHERING_ITEM_POINTS from '../data/gathering-item-points'\nimport AETHERYTE from '../data/aetheryte'\nimport * as XivApiService from './xivApi'\n\n/**\n * Gets a list of ingredients required to craft a given set of recipes.\n *\n * @param recipeList\n * @returns {Promise<*>}\n */\nexport const getIngredientListForRecipes = async recipeList => {\n  if (!recipeList || !recipeList.length) return {}\n\n  // we will want to keep the following lists:\n  // 1. Ingredients that can be gathered\n  const ingredientsGatherable = []\n\n  // 2. Ingredients that can be crafted\n  const ingredientsCrafted = []\n\n  // 3. Ingredients that can be obtained from monsters\n  const ingredientsOther = []\n\n  // 3. Ingredients that can be bought (that cannot be gathered or dropped by monsters)\n  const ingredientsPurchased = []\n\n  await getAndSortRecipeResults(recipeList,\n    ingredientsGatherable,\n    ingredientsCrafted,\n    ingredientsPurchased,\n    ingredientsOther\n  )\n\n  // get item IDs for the gatherable and purchasable things so we can get their info\n  const itemIds = map(concat(ingredientsGatherable, ingredientsOther), item => get(item, 'itemId'))\n  const itemData = await XivApiService.getItemsById(itemIds)\n\n  forEach(get(itemData, 'Results', []), item => {\n    const foundItem = find(ingredientsGatherable, ig => get(ig, 'itemId') === get(item, 'ID')) ||\n      find(ingredientsOther, io => get(io, 'itemId') === get(item, 'ID'))\n    set(foundItem, 'name', get(item, 'Name'))\n    set(foundItem, 'icon', XivApiService.getIconUrl(get(item, 'Icon')))\n    // set(foundItem, 'gameContentLinks', get(item, 'GameContentLinks', {}))\n    set(foundItem, 'gameContentLinks',\n      filter(\n        map(\n          get(item, 'GameContentLinks', {}), (value, key) => ({ key, value })\n        ), result => {\n          const val = toLower(result.key)\n          return includes(val, 'shop') && !includes(val, 'special')\n        }\n      )\n    )\n\n    if (!!get(foundItem, 'gameContentLinks.length')) {\n      ingredientsPurchased.push(foundItem)\n    }\n  })\n\n  // add gathering item data\n  addGatheringItemData(ingredientsGatherable)\n\n  // sort the results\n  const results = {\n    ingredientsCrafted: orderBy(uniqBy(ingredientsCrafted, ic => get(ic, 'ID')), 'Name'),\n    ingredientsGatherable: orderBy(ingredientsGatherable, 'name'),\n    ingredientsPurchased: orderBy(ingredientsPurchased, 'name'),\n    ingredientsOther: orderBy(ingredientsOther, 'name')\n  }\n\n  return results\n}\n\nconst addGatheringItemData = ingredientsGatherable => {\n  forEach(ingredientsGatherable, item => {\n    const gatheringItemId = get(item, 'gatheringItemId')\n\n    const filteredGatheringPoints = filter(\n      GATHERING_ITEM_POINTS, point => get(point, 'ID', '').startsWith(`${gatheringItemId}.`)\n    )\n\n    const namePath = 'GatheringPoint.PlaceName.Name_en'\n    const areaPath = 'GatheringPoint.TerritoryType.PlaceName.Name_en'\n    const regionPath = 'GatheringPoint.TerritoryType.PlaceNameRegion.Name_en'\n    const levelPath = 'GatheringPoint.GatheringPointBase.GatheringLevel'\n    const typePath = 'GatheringPoint.GatheringPointBase.GatheringType.Name_en'\n    const aetherytePath = 'GatheringPoint.TerritoryType.AetheryteTargetID'\n\n    const pointData = map(filteredGatheringPoints, point => getPointData(\n      point,\n      namePath,\n      areaPath,\n      regionPath,\n      levelPath,\n      typePath,\n      aetherytePath\n    ))\n\n    set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\n  })\n}\n\nconst getPointData = (data, namePath, areaPath, regionPath, levelPath, typePath, aetherytePath) => {\n  const typeMap = {\n    'Mining': 'Miner',\n    'Quarrying': 'Miner',\n    'Logging': 'Botanist',\n    'Harvesting': 'Botanist'\n  }\n  const name = get(data, namePath)\n  const area = get(data, areaPath)\n  const region = get(data, regionPath)\n  const level = get(data, levelPath)\n  const type = get(data, typePath)\n  const aetheryteId = get(data, aetherytePath)\n\n  return {\n    name: name || get(find(AETHERYTE, a => get(a, 'ID') === aetheryteId), 'PlaceName.Name_en'),\n    area,\n    region,\n    level,\n    gatheringClass: get(typeMap, type),\n    type,\n    id: get(data, 'ID')\n  }\n}\n\nconst getAndSortRecipeResults = async (\n  recipeList,\n  ingredientsGatherable,\n  ingredientsCrafted,\n  ingredientsPurchased,\n  ingredientsOther\n) => {\n  const recipeIds = map(recipeList, recipe => get(recipe, 'ID'))\n  const recipeResults = get(await XivApiService.getRecipesById(recipeIds), 'Results', [])\n  const nextRecipeResults = []\n  forEach(recipeResults, rr => {\n    const recipeListEntry = find(recipeList, rle => get(rle, 'ID') === get(rr, 'ID'))\n    set(rr, 'quantity', get(recipeListEntry, 'quantity'))\n\n    // go through each ingredient\n    for (let i = 0; i < 10; i++) {\n      const itemId = get(rr, `ItemIngredient${i}.ID`)\n      const amount = get(rr, `AmountIngredient${i}`)\n      const gatheringMapNode = find(ITEM_TO_GATHERING_ITEM_MAPPING, mapping => get(mapping, 'ItemID') === itemId)\n      const gatheringItemId = get(gatheringMapNode, 'GatheringItemID')\n      const ingredientRecipe = get(rr, `ItemIngredientRecipe${i}[0]`)\n      const quantity = get(rr, 'quantity')\n\n      if (!!gatheringItemId) {\n        const existingIngredientGatherable = find(ingredientsGatherable, ig => get(ig, 'itemId') === itemId)\n        if (!!existingIngredientGatherable) {\n          const existingAmount = get(existingIngredientGatherable, 'amount')\n          set(existingIngredientGatherable, 'amount', existingAmount + (amount * quantity))\n        } else {\n          ingredientsGatherable.push({ itemId, gatheringItemId, amount: amount * quantity })\n        }\n      }\n\n      if (!!ingredientRecipe) {\n        set(ingredientRecipe, 'quantity', quantity * amount)\n        nextRecipeResults.push(ingredientRecipe)\n        ingredientsCrafted.push(ingredientRecipe)\n      }\n\n      if (!gatheringItemId && !ingredientRecipe && !!itemId) {\n        const existingIngredientPurchased = find(ingredientsOther, ip => get(ip, 'itemId') === itemId)\n        if (!!existingIngredientPurchased) {\n          const existingAmount = get(existingIngredientPurchased, 'amount')\n          set(existingIngredientPurchased, 'amount', existingAmount + (amount * quantity))\n        }\n        ingredientsOther.push({ itemId, amount: amount * quantity })\n      }\n    }\n  })\n\n  if (!!nextRecipeResults.length) {\n    await getAndSortRecipeResults(nextRecipeResults,\n      ingredientsGatherable,\n      ingredientsCrafted,\n      ingredientsPurchased,\n      ingredientsOther\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Table, FormControl } from 'react-bootstrap'\nimport { isEqual, get } from 'lodash'\nimport { getIconUrl } from '../../service/xivApi'\n\nexport default class ShoppingList extends React.Component {\n  state = {}\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    const { shoppingList } = this.props\n\n    if (!isEqual(shoppingList, prevProps.shoppingList)) {\n      const {\n        // ingredientsCrafted,\n        // ingredientsPurchased,\n        ingredientsGatherable\n        // ingredientsOther\n      } = shoppingList\n\n      const gatherableStateVars = {}\n      ingredientsGatherable.forEach(item => {\n        const key = `gatherable-${item.itemId}-location`\n        gatherableStateVars[key] = get(item, 'pointData[0]', {})\n      })\n\n      this.setState({\n        ...gatherableStateVars\n      })\n    }\n  }\n\n  handleLocationUpdate (event) {\n    event.preventDefault()\n\n    const { target: { value, id } } = event\n\n    this.setState({\n      [id]: JSON.parse(value)\n    })\n  }\n\n  render () {\n    const { shoppingList: { ingredientsCrafted, ingredientsPurchased, ingredientsGatherable, ingredientsOther } } = this.props\n\n    if (!ingredientsGatherable && !ingredientsCrafted && !ingredientsPurchased) {\n      return (\n        <div className=\"tc\">\n          No Results to Display\n        </div>\n      )\n    }\n\n    const headings = (\n      <tr>\n        <th />\n        <th>Name</th>\n        <th>Required Class</th>\n        <th>Required Level</th>\n        <th>Quantity</th>\n        <th>Location</th>\n      </tr>\n    )\n\n    const headingColumns = 6\n\n    return (\n      <div>\n        <Table hover striped className=\"shopping-list\">\n          {!!ingredientsGatherable && !!ingredientsGatherable.length && (\n            <React.Fragment>\n              <thead>\n              <tr className=\"section-head\">\n                <th colSpan={headingColumns}>Gatherable Items</th>\n              </tr>\n              {headings}\n              </thead>\n              <tbody>\n              {ingredientsGatherable.map(item => {\n                const { name, icon, itemId, amount, pointData } = item\n                const key = `gatherable-${itemId}`\n                const locationSelectId = `${key}-location`\n                const gatheringClass = get(this.state, `${locationSelectId}.gatheringClass`)\n                const gatheringType = get(this.state, `${locationSelectId}.type`)\n                const level = get(this.state, `${locationSelectId}.level`)\n\n                return (\n                  <tr key={key}>\n                    <td><img src={icon} alt={name} /></td>\n                    <td>{name}</td>\n                    <td>{gatheringClass}{!!gatheringType && ` (${gatheringType})`}</td>\n                    <td>{level}</td>\n                    <td>{amount}</td>\n                    <td>\n                      {pointData.length === 1 && (\n                        <React.Fragment>\n                          {pointData[0].region} - {pointData[0].area} - {pointData[0].name}\n                        </React.Fragment>\n                      )}\n                      {pointData.length > 1 && (\n                        <FormControl\n                          id={locationSelectId}\n                          as=\"select\"\n                          onChange={this.handleLocationUpdate.bind(this)}\n                        >\n                          {pointData.map((point, key) => (\n                            <option key={key} value={JSON.stringify(point)}>\n                              {point.region} - {point.area} - {point.name} (Level {point.level}, {point.gatheringClass})\n                            </option>\n                          ))}\n                        </FormControl>\n                      )}\n                    </td>\n                  </tr>\n                )\n              })}\n              </tbody>\n            </React.Fragment>\n          )}\n          {!!ingredientsOther && !!ingredientsOther.length && (\n            <React.Fragment>\n              <thead>\n              <tr className=\"section-head\">\n                <th colSpan={headingColumns}>Items Obtained Elsewhere</th>\n              </tr>\n              {headings}\n              </thead>\n              <tbody>\n              {ingredientsOther.map(item => {\n                const { name, icon, itemId, amount } = item\n                return (\n                  <tr key={`purchasable-${itemId}`}>\n                    <td><img src={icon} alt={name} /></td>\n                    <td>{name}</td>\n                    <td>N/A</td>\n                    <td>N/A</td>\n                    <td>{amount}</td>\n                    <td>???</td>\n                  </tr>\n                )\n              })}\n              </tbody>\n            </React.Fragment>\n          )}\n          {!!ingredientsPurchased && !!ingredientsPurchased.length && (\n            <React.Fragment>\n              <thead>\n              <tr className=\"section-head\">\n                <th colSpan={headingColumns}>Purchasable Items</th>\n              </tr>\n              {headings}\n              </thead>\n              <tbody>\n              {ingredientsPurchased.map(item => {\n                const { name, icon, itemId, amount } = item\n                return (\n                  <tr key={`purchasable-${itemId}`}>\n                    <td><img src={icon} alt={name} /></td>\n                    <td>{name}</td>\n                    <td>N/A</td>\n                    <td>N/A</td>\n                    <td>{amount}</td>\n                    <td>???</td>\n                  </tr>\n                )\n              })}\n              </tbody>\n            </React.Fragment>\n          )}\n          {!!ingredientsCrafted && !!ingredientsCrafted.length && (\n            <React.Fragment>\n              <thead>\n              <tr className=\"section-head\">\n                <th colSpan={headingColumns}>Prerequisite Crafts</th>\n              </tr>\n              {headings}\n              </thead>\n              <tbody>\n              {ingredientsCrafted.map(item => {\n                const name = get(item, 'ItemResult.Name_en')\n                const icon = get(item, 'ItemResult.Icon')\n                const id = get(item, 'ID')\n                const quantity = get(item, 'quantity')\n                const craftClass = get(item, 'ClassJob.NameEnglish')\n                const craftLevel = get(item, 'RecipeLevelTable.ClassJobLevel')\n                return (\n                  <tr key={`crafted-${id}`}>\n                    <td><img src={getIconUrl(icon)} alt={name} /></td>\n                    <td>{name}</td>\n                    <td>{craftClass}</td>\n                    <td>{craftLevel}</td>\n                    <td>{quantity}</td>\n                    <td>N/A</td>\n                  </tr>\n                )\n              })}\n              </tbody>\n            </React.Fragment>\n          )}\n        </Table>\n      </div>\n    )\n  }\n}\n\nShoppingList.propTypes = {\n  shoppingList: PropTypes.shape().isRequired\n}\n\nShoppingList.defaultProps = {\n  shoppingList: {}\n}\n","import React from 'react'\nimport { Tab, Tabs } from 'react-bootstrap'\nimport { cloneDeep, find, get, omit, reject, indexOf, toNumber } from 'lodash'\nimport { recipeSearch } from '../../service/xivApi'\nimport RecipeSearch from './RecipeSearch'\nimport MyList from './MyList'\nimport * as RecipeService from '../../service/recipe'\nimport ShoppingList from './ShoppingList'\n\nexport default class RecipeHelper extends React.Component {\n  state = {\n    recipeSearchString: '',\n    recipeSearchIsInvalid: false,\n    searching: false,\n    myList: [],\n    lastSearch: undefined\n  }\n\n  handleFieldUpdate (event) {\n    const { target: { name, value } } = event\n\n    let recipeSearchIsInvalid = false\n    if (!value) {\n      recipeSearchIsInvalid = true\n    }\n\n    this.setState({\n      [name]: value,\n      recipeSearchIsInvalid\n    })\n  }\n\n  async search (page = 1) {\n    const { recipeSearchString } = this.state\n    const results = await recipeSearch(undefined, recipeSearchString, page)\n    this.setState({\n      searching: false,\n      recipeList: results,\n      lastSearch: recipeSearchString\n    })\n  }\n\n  handleUpdateQuantity (item, event) {\n    const newValue = Math.max(1, toNumber(event.target.value))\n\n    const { myList } = this.state\n    const idk = indexOf(myList, item)\n    myList[idk].quantity = newValue\n    this.setState({\n      myList\n    })\n  }\n\n  handleSearch (event) {\n    event.preventDefault()\n    const page = get(event, 'target.value', 1)\n    const { recipeSearchString } = this.state\n    if (!recipeSearchString) {\n      document.getElementsByName('recipeSearchString')[0].focus()\n      this.setState({\n        recipeSearchIsInvalid: true\n      })\n      return\n    }\n\n    this.setState({\n      searching: true\n    }, () => this.search(page))\n  }\n\n  handleClear () {\n    document.getElementsByName('recipeSearchString')[0].focus()\n    this.setState({\n      recipeSearchIsInvalid: false,\n      recipeSearchString: ''\n    })\n  }\n\n  handlePageChange (event) {\n    this.handleSearch(event)\n  }\n\n  toggleListItem (item) {\n    item = omit(item, 'quantity')\n    const { myList } = this.state\n    let myClonedList = cloneDeep(myList)\n    const foundItem = find(myList, i => get(i, 'ID') === get(item, 'ID'))\n\n    if (!!foundItem) {\n      myClonedList = reject(myList, item)\n    } else {\n      item.quantity = 1\n      myClonedList.push(item)\n    }\n\n    this.setState({\n      myList: myClonedList\n    })\n  }\n\n  async handleGenerateShoppingList () {\n    const { myList } = this.state\n\n    const shoppingListResults = await RecipeService.getIngredientListForRecipes(myList)\n\n    this.setState({\n      key: 'shopping-list',\n      shoppingListResults\n    })\n  }\n\n  render () {\n    const { myList, recipeList, recipeSearchIsInvalid, recipeSearchString, searching, shoppingListResults } = this.state\n\n    return (\n      <div className=\"recipe-list pt3\">\n        <Tabs\n          activeKey={this.state.key}\n          onSelect={key => this.setState({ key })}\n        >\n          <Tab eventKey=\"search\" title=\"Recipe Search\">\n            <div className=\"recipe-tab\">\n              <RecipeSearch\n                handleChange={this.handleFieldUpdate.bind(this)}\n                handlePageChange={this.handlePageChange.bind(this)}\n                handleReset={this.handleClear.bind(this)}\n                handleSubmit={this.handleSearch.bind(this)}\n                handleToggleListItem={this.toggleListItem.bind(this)}\n                myList={myList}\n                recipeSearchResults={recipeList}\n                recipeSearchIsInvalid={recipeSearchIsInvalid}\n                recipeSearchString={recipeSearchString}\n                searching={searching}\n              />\n            </div>\n          </Tab>\n          <Tab eventKey=\"recipe-list\" title={`My Recipe List (${myList.length})`}>\n            <div className=\"recipe-tab\">\n              <MyList\n                list={myList}\n                handleToggleListItem={this.toggleListItem.bind(this)}\n                handleUpdateQuantity={this.handleUpdateQuantity.bind(this)}\n                handleGenerateShoppingList={this.handleGenerateShoppingList.bind(this)}\n              />\n            </div>\n          </Tab>\n          <Tab eventKey=\"shopping-list\" title={`My Shopping List`}>\n            <div className=\"recipe-tab\">\n              <ShoppingList shoppingList={shoppingListResults} />\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport { get } from 'lodash'\nimport * as actions from '../store/actions'\nimport Navigation from './navigation/Navigation'\nimport CraftingGatheringCalculator from './calculator/CraftingGatheringCalculator'\nimport RecipeHelper from './recipes/RecipeHelper'\n\nconst externalLink = (url, text) => (\n  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n    {text}\n  </a>\n)\n\nclass XivCraftingGatheringHelper extends React.Component {\n  componentDidMount () {\n    this.props.getLocalClassData()\n    this.props.getLocalCharacterData()\n  }\n\n  render () {\n    const { characterData, craftingClassData } = this.props\n\n    const Calculator = props => (\n      <CraftingGatheringCalculator\n        characterData={characterData}\n        craftingClassData={craftingClassData}\n        {...props}\n      />\n    )\n\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navigation\n          characterData={characterData}\n          craftingClassData={craftingClassData}\n        />\n        <Container fluid>\n          <Switch>\n            <Route exact path=\"/\" render={Calculator} />\n            <Route path=\"/calculations\" render={Calculator} />\n            {process.env.NODE_ENV === 'development' && (\n              <Route path=\"/recipes\" component={RecipeHelper} />\n            )}\n          </Switch>\n          <hr />\n          <div className=\"tc text-muted\">\n            Created by {externalLink('https://na.finalfantasyxiv.com/lodestone/character/22858010/',\n            'Xythyt')} with the help of {externalLink('https://www.xivapi.com', 'XIVAPI')}.\n            <br />\n            Version {process.env.REACT_APP_VERSION}\n          </div>\n        </Container>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    craftingClassData: get(state, 'local.classData'),\n    characterData: get(state, 'local.characterData')\n  })\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getLocalCharacterData: () => dispatch(actions.getLocalCharacterData()),\n  getLocalClassData: () => dispatch(actions.getLocalClassData())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(XivCraftingGatheringHelper)\n","import { get } from 'lodash'\nimport * as LocalStorage from '../service/localStorage'\nimport * as T from './types'\n\nconst INITIAL_STATE = {\n  classData: LocalStorage.getDefaultCraftingClasses()\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case T.LOCAL_CLASS_DATA_STORE:\n    case T.LOCAL_CLASS_DATA_RETRIEVAL:\n      return {\n        ...state,\n        classData: get(action, 'localData')\n      }\n    case T.LOCAL_CHARACTER_DATA_CLEAR:\n      return {\n        ...state,\n        characterData: undefined\n      }\n    case T.LOCAL_CHARACTER_DATA_STORE:\n    case T.LOCAL_CHARACTER_DATA_RETRIEVAL:\n      return {\n        ...state,\n        characterData: get(action, 'localData')\n      }\n    case T.LOCAL_CLASS_DATA_CLEAR:\n      return {\n        ...state,\n        classData: LocalStorage.getDefaultCraftingClasses()\n      }\n    case T.LODESTONE_CHARACTER_DATA_SUCCESS:\n      return {\n        ...state,\n        characterData: get(action, 'payload')\n      }\n    case T.API_REQUEST_FAILURE:\n      return {\n        ...state,\n        error: action.error\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducer'\n\nconst rootReducer = combineReducers({\n  local: reducer\n})\n\nexport default createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n)\n","import React from 'react'\nimport XivCraftingGatheringHelper from './XivCraftingGatheringHelper'\nimport Provider from 'react-redux/es/components/Provider'\nimport store from '../store'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <XivCraftingGatheringHelper />\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}