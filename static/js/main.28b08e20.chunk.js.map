{"version":3,"sources":["service/localStorage.js","service/xivApi.js","store/local/types.js","store/local/actions.js","components/navigation/LodestoneCharacterModal.jsx","components/navigation/LodestoneCharacterMenu.jsx","components/navigation/Navigation.jsx","components/recipes/RecipeSearchForm.jsx","components/common/Pagination.jsx","components/recipes/RecipeSearchResult.jsx","components/recipes/RecipeSearch.jsx","components/recipes/MyList.jsx","store/recipeList/types.js","service/recipe.js","store/recipeList/actions.js","components/common/SortableTableHeaderCell.jsx","components/recipes/ShoppingList.jsx","components/calculator/FilterDropdown.jsx","service/calculations.js","components/calculator/CalculationsTableHeader.jsx","components/calculator/CalculationsTableBody.jsx","components/calculator/CraftingGatheringCalculator.jsx","components/RecipeHelper.jsx","components/XivCraftingGatheringHelper.jsx","store/local/reducer.js","store/recipeList/reducer.js","store/index.js","components/App.js","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","MY_RECIPE_LIST","MY_SHOPPING_LIST","get","key","defaultValue","data","localStorage","getItem","JSON","parse","store","setItem","stringify","clear","removeItem","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","getDefaultCraftingClasses","storedData","craftingClasses","result","forEach","defaultCraftingClass","storedCraftingClass","_find","c","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","levelingGuideDiffs","push","retrieveAndUpdateCharacterData","updateCraftingClassDataWithCharacterData","classJobCategories","craftingClassData","characterData","_values","_get","_includes","_map","lodestoneClassData","_set","totalExperience","CRAFTING_CLASSES","currentLevel","currentExperience","experiencePerItem","BASE_URL","getIconUrl","iconRelativePath","concat","findCharacterByServerAndName","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","sent","abrupt","stop","_x","_x2","apply","this","getCharacterById","_ref2","_callee2","id","_context2","set","_x3","recipeSearch","_ref3","_callee3","searchString","options","columns","_options$exact","exact","_options$page","_options$includeMaste","includeMasterRecipes","request","_args3","_context3","toLower","replace","indexes","body","query","bool","must","wildcard","NameCombined_en","size","from","sort","RecipeLevelTable.ClassJobLevel","limit","match","SecretRecipeBookTargetID","isArray","minimum_should_match","should","map","ClassJob.Abbreviation_en","post","getRecipesById","_ref4","_callee4","recipeIds","i","_context4","params","ids","join","_x4","getItemsById","_ref5","_callee5","itemIds","_context5","_x5","LOCAL_CLASS_DATA_RETRIEVAL","LOCAL_CLASS_DATA_STORE","LOCAL_CLASS_DATA_CLEAR","LOCAL_CHARACTER_DATA_RETRIEVAL","LOCAL_CHARACTER_DATA_STORE","LOCAL_CHARACTER_DATA_CLEAR","LODESTONE_CHARACTER_DATA_REQUEST","LODESTONE_CHARACTER_DATA_SUCCESS","API_REQUEST_FAILURE","lodestoneCharacterDataRequest","characterId","T","apiRequestSuccess","payload","getLocalClassData","dispatch","localData","localClassDataRetrieve","LocalStorage","saveLocalClassData","classData","clearLocalClassData","saveLocalCharacterData","getLocalCharacterData","localCharacterDataRetrieve","clearLocalCharacterData","LodestoneCharacterModal","state","event","_event$target","target","value","setState","defineProperty","preventDefault","loading","performSearch","XivApi","lodestoneResults","onHide","props","getLodestoneCharacterData","handleClose","_this2","show","_this$state2","results","prevPage","nextPage","react_default","createElement","Modal","bind","Form","onSubmit","handleSearch","onReset","Header","closeButton","Title","Body","Group","Label","Control","as","onChange","handleSetField","XIV_SERVERS","Button","disabled","className","Spinner","animation","variant","Fragment","char","ID","Name","Avatar","Check","htmlFor","src","alt","onClick","Footer","handleSubmitCharacterSelection","React","Component","defaultProps","getDropdownTitle","_characterData$Charac","Character","LodestoneCharacterMenu","showModal","_this$props","searchLodestoneCharacterData","importText","NavDropdown","alignRight","title","Item","Divider","handleModalToggle","navigation_LodestoneCharacterModal","connect","t0","error","Navigation","Navbar","bg","sticky","lib","to","NavbarBrand","Nav","navigation_LodestoneCharacterMenu","RecipeSearchForm","craftingClassSelections","ButtonGroup","updateCraftingClassSelections","prevProps","prevState","snapshot","recipeSearchClasses","isEqual","handleToggleRecipeSearchClass","buttons","filter","cc","OverlayTrigger","overlay","Tooltip","includes","icon","_this$props2","handleChange","handleReset","handleSubmit","handleToggleRecipeIncludeMaster","recipeSearchIncludeMaster","handleToggleRecipeSearchExact","recipeSearchExact","recipeSearchIsInvalid","recipeSearchString","searching","isInvalid","FormControl","Feedback","checked","Pagination","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","currentPage","handlePageChange","totalPages","minPage","Math","max","min","maxPage","activePage","option","RecipeSearchResult","handleTabChange","handleToggleListItem","myList","pagination","ready","recipeList","pagePrev","pageNext","pageTotal","pageCurrent","Table","hover","striped","colSpan","Pagination_Pagination","r","iconUrl","craftingClassName","level","isOnList","find","item","index_es","faMinusSquare","faPlusSquare","RecipeSearch","recipeSearchResults","RecipeSearchForm_RecipeSearchForm","RecipeSearchResult_RecipeSearchResult","MyList","handleClearList","handleUpdateQuantity","list","k","Icon","ClassJob","NameEnglish","RecipeLevelTable","ClassJobLevel","quantity","RECIPE_LIST_CLEAR","RECIPE_LIST_SAVE","SHOPPING_LIST_CREATE","SHOPPING_LIST_CLEAR","getIngredientListForRecipes","ingredientsGatherable","ingredientsCrafted","ingredientsOther","ingredientsPurchased","itemData","getAndSortRecipeResults","XivApiService","foundItem","ig","io","val","addGatheringItemData","orderBy","uniqBy","ic","gatheringItemId","filteredGatheringPoints","GATHERING_ITEM_POINTS","point","startsWith","pointData","getPointData","itemId","filteredFishingSpots","FISHING_SPOTS","spot","path","pd","namePath","areaPath","regionPath","levelPath","typePath","aetherytePath","area","region","aetheryteId","AETHERYTE","gatheringClass","Mining","Quarrying","Logging","Harvesting","hasFishingSpotMatch","matched","fishingId","recipeResults","nextRecipeResults","recipe","t1","t2","rr","recipeListEntry","rle","_loop","itemCategory","amount","gatheringMapNode","ITEM_TO_GATHERING_ITEM_MAPPING","mapping","ingredientRecipe","fishingSpotMatch","existingIngredientGatherable","existingAmount","existingIngredientCrafted","ir","existingIngredientOther","ip","_x6","saveMyRecipeList","myRecipeList","recipeListSave","createMyShoppingList","clearMyRecipeList","clearMyShoppingList","RecipeListService","myShoppingList","shoppingList","SortableTableHeaderCell","text","sortFunc","applySorting","style","cursor","faSort","ShoppingList","ingredientsGatherableSort","func","direction","updateGatherableIngredients","gatherableStateVars","objectSpread","ingredientsCrystals","newIngredientsGatherableSort","_this$props$shoppingL","_this$state","headings","Badge","position","top","right","common_SortableTableHeaderCell","handleApplyIngredientsGatherableSort","locationSelectId","gatheringType","handleLocationUpdate","craftClass","craftLevel","FilterDropdown","label","applyFilterFunc","DropdownButton","Dropdown","craftingClass","calculateRemainingExp","currentExp","totalExp","calculateRemainingItems","remainingExp","expPerItem","ceil","calculateProgressPercentage","floor","tableHeaders","CalculationsTableHeader","applySortFunc","h","CalculationsTableBody","focusedRow","levelingGuide","LEVELING_GUIDE_LINKS","g","matchedPage","pages","p","maxLevel","minLevel","url","updateField","toNumber","focused","remainingExperience","remainingItems","progressPercentage","popover","Popover","href","getLevelingGuidePageUrl","rel","onFocus","handleRowFocus","onBlur","cx","trigger","placement","rootClose","faIcon","validateNumericFieldChange","ProgressBar","now","CraftingGatheringCalculator","sortDirection","filterFunc","innerText","targetCraftingClass","otherCraftingClasses","EXP_PER_LEVEL","sortedAndFilteredCraftingClassData","getSortedCraftingClassData","getFilteredCraftingClassData","FilterDropdown_FilterDropdown","applyFilter","CalculationsTableHeader_CalculationsTableHeader","applySort","calculator_CalculationsTableBody","RecipeHelper","lastSearch","cloneDeep","splice","indexOf","sortBy","s","toLowerCase","_this$setState","newValue","document","getElementsByName","focus","search","omit","myClonedList","reject","_this3","_this$props3","Tabs","activeKey","onSelect","Tab","eventKey","calculator_CraftingGatheringCalculator","RecipeSearch_RecipeSearch","handleFieldUpdate","handleClear","toggleListItem","MyList_MyList","ShoppingList_ShoppingList","recipeActions","externalLink","XivCraftingGatheringHelper","react_router_dom","basename","process","Navigation_Navigation","Container","fluid","components_RecipeHelper","actions","INITIAL_STATE","rootReducer","combineReducers","local","action","createStore","applyMiddleware","thunk","App","Provider","components_XivCraftingGatheringHelper","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.28b08e20.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\r\nimport { applyChanges, diff } from 'diff-json'\r\nimport {\r\n  filter as _filter,\r\n  find as _find,\r\n  get as _get,\r\n  includes as _includes,\r\n  map as _map,\r\n  set as _set,\r\n  values as _values\r\n} from 'lodash'\r\n\r\nconst KEYS = {\r\n  CHARACTER_DATA: 'character',\r\n  CRAFTING_CLASS_DATA: 'craftingClasses',\r\n  MY_RECIPE_LIST: 'myRecipeList',\r\n  MY_SHOPPING_LIST: 'myShoppingList'\r\n}\r\n\r\nfunction get (key, defaultValue) {\r\n  const data = localStorage.getItem(key)\r\n  if (!!data) {\r\n    return JSON.parse(data)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nfunction store (key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data))\r\n}\r\n\r\nfunction clear (key) {\r\n  if (!!localStorage.getItem(key)) {\r\n    localStorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport function getMyRecipeList () {\r\n  return get(KEYS.MY_RECIPE_LIST, [])\r\n}\r\n\r\nexport function getMyShoppingList () {\r\n  return get(KEYS.MY_SHOPPING_LIST, {})\r\n}\r\n\r\nexport function storeCharacterData (characterData) {\r\n  store(KEYS.CHARACTER_DATA, characterData)\r\n}\r\n\r\nexport function storeCraftingClassData (craftingClasses) {\r\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\r\n}\r\n\r\nexport function storeMyRecipeList (myRecipeList) {\r\n  store(KEYS.MY_RECIPE_LIST, myRecipeList)\r\n}\r\n\r\nexport function storeMyShoppingList (myShoppingList) {\r\n  store(KEYS.MY_SHOPPING_LIST, myShoppingList)\r\n}\r\n\r\nexport function clearCharacterData () {\r\n  clear(KEYS.CHARACTER_DATA)\r\n}\r\n\r\nexport function clearCraftingClassData () {\r\n  clear(KEYS.CRAFTING_CLASS_DATA)\r\n}\r\n\r\nexport function clearMyRecipeList () {\r\n  clear(KEYS.MY_RECIPE_LIST)\r\n}\r\n\r\nexport function clearMyShoppingList () {\r\n  clear(KEYS.MY_SHOPPING_LIST)\r\n}\r\n\r\nexport function retrieveAndUpdateCraftingClassData () {\r\n  // get the default crafting class data\r\n  const defaultCraftingClasses = getDefaultCraftingClasses()\r\n\r\n  // retrieve the stored data from local storage\r\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\r\n\r\n  // if there is no stored data, return the default data\r\n  if (!storedData) {\r\n    return defaultCraftingClasses\r\n  }\r\n\r\n  // if there is stored data, convert it to JSON\r\n  const craftingClasses = JSON.parse(storedData)\r\n\r\n  // create a variable for the result\r\n  const result = []\r\n\r\n  // cycle through all \"default\" classes\r\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\r\n    // retrieve the matching stored class\r\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\r\n\r\n    // if there is no matching stored class data, add the default for this class to the result\r\n    if (!storedCraftingClass) {\r\n      result.push(defaultCraftingClass)\r\n      return\r\n    }\r\n\r\n    // get any added data to the default data set and apply it to the stored data\r\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\r\n    if (classDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, classDiffs)\r\n    }\r\n\r\n    // get any leveling guide data and remove it from stored data\r\n    const levelingGuideDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.key === 'levelingGuide')\r\n    if (levelingGuideDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, levelingGuideDiffs)\r\n    }\r\n\r\n    // add this record to the result to return\r\n    result.push(storedCraftingClass)\r\n  })\r\n\r\n  // send back the updated stored data\r\n  return result\r\n}\r\n\r\nexport function retrieveAndUpdateCharacterData () {\r\n  // get the stored character data\r\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\r\n\r\n  // if there is no character data, return undefined\r\n  if (!storedData) {\r\n    return undefined\r\n  }\r\n\r\n  // if there is, update it\r\n  // TBD\r\n\r\n  // return the character data\r\n  return JSON.parse(storedData)\r\n}\r\n\r\nexport function updateCraftingClassDataWithCharacterData () {\r\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\r\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\r\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\r\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\r\n\r\n  return _map(craftingClassData, c => {\r\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\r\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\r\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\r\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\r\n    return c\r\n  })\r\n}\r\n\r\nexport function getDefaultCraftingClasses () {\r\n  return _map(CRAFTING_CLASSES, c => {\r\n    c.currentLevel = 1\r\n    c.currentExperience = 0\r\n    c.experiencePerItem = 1\r\n    c.totalExperience = 300\r\n    return c\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { map, get, isArray, set, toLower } from 'lodash'\r\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\r\n\r\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\r\nconst BASE_URL = 'https://xivapi.com'\r\n\r\n/**\r\n * Retrieves the URL of an icon provided in a response from XIVAPI.\r\n * @param   {string}  iconRelativePath  The relative path of the icon.\r\n * @returns {string}                    The full URL path of the icon.\r\n */\r\nexport const getIconUrl = iconRelativePath => `${BASE_URL}${iconRelativePath}`\r\n\r\n/**\r\n * Finds a character by server and name.\r\n *\r\n * @param   {string}  server  The name of the server.\r\n * @param   {string}  name    The name of the character.\r\n * @param   {number}  page    The page of results to view.\r\n * @returns {object}          An object containing the search results.\r\n */\r\nexport const findCharacterByServerAndName = async (server, name, page = 1) => {\r\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\r\n  return get(result, 'data', [])\r\n}\r\n\r\n/**\r\n * Retrieves character data by the character's ID.\r\n *\r\n * @param   {number}  id  The ID of the character to retrieve.\r\n * @returns {object}      An object containing the character's data.\r\n */\r\nexport const getCharacterById = async id => {\r\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\r\n  set(result, 'data.characterId', id)\r\n  return get(result, 'data', {})\r\n}\r\n\r\n/**\r\n * Searches for recipes via the XIPAPI.\r\n *\r\n * @param   {string}          searchString                    The string for which to search.\r\n * @param   {object}          [options]                       Options to apply to this search.\r\n * @param   {boolean}         [options.exact]                 Whether we are searching for the exact string (true) or\r\n *                                                              should substitute spaces for wildcards (false).\r\n * @param   {number}          [options.page]                  The page on which to begin the search.\r\n * @param   {string|[string]} [options.abbreviation]          Any crafting class abbreviations that should be queried.\r\n * @param   {boolean}         [options.includeMasterRecipes]  Indicates whether master recipes should be included.\r\n * @returns {object}                                          An object containing search results.\r\n */\r\nexport const recipeSearch = async (searchString = '', options = {}) => {\r\n  const indexes = 'recipe'\r\n  const size = 20\r\n  const columns = [\r\n    'ID',\r\n    'ClassJob.Abbreviation_en',\r\n    'ClassJob.Icon',\r\n    'ClassJob.NameEnglish',\r\n    'RecipeLevelTable.ClassJobLevel',\r\n    'Name',\r\n    'Icon'\r\n  ]\r\n\r\n  const { exact = false, page = 1, includeMasterRecipes = false } = options\r\n\r\n  searchString = toLower(searchString)\r\n\r\n  if (!exact) {\r\n    searchString = searchString.replace(' ', '*')\r\n  }\r\n\r\n  const request = {\r\n    indexes,\r\n    body: {\r\n      query: {\r\n        bool: {\r\n          must: [\r\n            {\r\n              wildcard: {\r\n                'NameCombined_en': `*${searchString}*`\r\n              }\r\n            },\r\n            // {\r\n            //   match: {\r\n            //     'SecretRecipeBookTargetID': 0\r\n            //   }\r\n            // },\r\n            // {\r\n            //   match: {\r\n            //     'StatusRequiredTargetID': 0\r\n            //   }\r\n            // }\r\n          ]\r\n        }\r\n      },\r\n      size,\r\n      from: size * (page - 1),\r\n      sort: [\r\n        {\r\n          'RecipeLevelTable.ClassJobLevel': 'asc'\r\n        }\r\n      ]\r\n    },\r\n    columns,\r\n    limit: size,\r\n    page\r\n  }\r\n\r\n  if (!includeMasterRecipes) {\r\n    request.body.query.bool.must.push({\r\n      match: {\r\n        'SecretRecipeBookTargetID': 0\r\n      }\r\n    })\r\n  }\r\n\r\n  if (!!options.abbreviation && !!options.abbreviation.length && options.abbreviation.length < 8) {\r\n    let { abbreviation } = options\r\n    const minimum_should_match = 1\r\n\r\n    abbreviation = isArray(abbreviation) ? abbreviation : [abbreviation]\r\n\r\n    request.body.query.bool.minimum_should_match = minimum_should_match\r\n    request.body.query.bool.should = map(abbreviation, a => ({\r\n      match: {\r\n        'ClassJob.Abbreviation_en': a\r\n      }\r\n    }))\r\n  }\r\n\r\n  const result = await axios.post(`${BASE_URL}/search`,\r\n    request\r\n  )\r\n  return get(result, 'data', {})\r\n}\r\n\r\n/**\r\n * Retrieves a list of recipes by their IDs.\r\n *\r\n * @param   {[number]}  recipeIds The IDs of the recipes that should be retrieved.\r\n * @returns {object}              An object containing the recipe data retrieved.\r\n */\r\nexport const getRecipesById = async recipeIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name'\r\n  ]\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    columns.push(`AmountIngredient${i}`)\r\n    columns.push(`ItemIngredient${i}.ID`)\r\n    columns.push(`ItemIngredient${i}.Icon`)\r\n    columns.push(`ItemIngredient${i}.Name`)\r\n    columns.push(`ItemIngredient${i}.ItemSearchCategoryTargetID`)\r\n    columns.push(`ItemIngredientRecipe${i}`)\r\n  }\r\n\r\n  const result = await axios.get(`${BASE_URL}/recipe`, {\r\n    params: {\r\n      ids: recipeIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n  return get(result, 'data', {})\r\n}\r\n\r\n/**\r\n * Retrieves a list of items by their IDs.\r\n *\r\n * @param   {[number]}  itemIds The IDs of the items that should be retrieved.\r\n * @returns {object}            An object containing the item data retrieved.\r\n */\r\nexport const getItemsById = async itemIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name',\r\n    'Icon',\r\n    'GameContentLinks'\r\n  ]\r\n\r\n  const result = await axios.get(`${BASE_URL}/item`, {\r\n    params: {\r\n      ids: itemIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n\r\n  return get(result, 'data', {})\r\n}\r\n","const LODESTONE = 'LODESTONE'\r\nconst LOCAL = 'LOCAL'\r\n\r\nconst REQUEST = 'REQUEST'\r\nconst SUCCESS = 'SUCCESS'\r\nconst FAILURE = 'FAILURE'\r\n\r\nexport const LOCAL_CLASS_DATA_RETRIEVAL = `${LOCAL}_CLASS_DATA_RETRIEVAL`\r\nexport const LOCAL_CLASS_DATA_STORE = `${LOCAL}_CLASS_DATA_STORE`\r\nexport const LOCAL_CLASS_DATA_CLEAR = `${LOCAL}_CLASS_DATA_CLEAR`\r\n\r\nexport const LOCAL_CHARACTER_DATA_RETRIEVAL = `${LOCAL}_CHARACTER_DATA_RETRIEVAL`\r\nexport const LOCAL_CHARACTER_DATA_STORE = `${LOCAL}_CHARACTER_DATA_STORE`\r\nexport const LOCAL_CHARACTER_DATA_CLEAR = `${LOCAL}_CHARACTER_DATA_CLEAR`\r\n\r\nexport const LODESTONE_CHARACTER_DATA_REQUEST = `${LODESTONE}_CHARACTER_DATA_${REQUEST}`\r\nexport const LODESTONE_CHARACTER_DATA_SUCCESS = `${LODESTONE}_CHARACTER_DATA_${SUCCESS}`\r\nexport const API_REQUEST_FAILURE = `${LODESTONE}_CHARACTER_DATA_${FAILURE}`\r\n","import * as LocalStorage from '../../service/localStorage'\r\nimport * as XivApi from '../../service/xivApi'\r\nimport * as T from './types'\r\n\r\nconst localClassDataRetrieve = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localClassDataStore = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localClassDataClear = () => ({\r\n  type: T.LOCAL_CLASS_DATA_CLEAR\r\n})\r\n\r\nconst localCharacterDataRetrieve = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataStore = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataClear = () => ({\r\n  type: T.LOCAL_CHARACTER_DATA_CLEAR\r\n})\r\n\r\nconst lodestoneCharacterDataRequest = characterId => ({\r\n  type: T.LODESTONE_CHARACTER_DATA_REQUEST,\r\n  characterId\r\n})\r\n\r\nconst apiRequestSuccess = (type, payload) => ({\r\n  type,\r\n  payload\r\n})\r\n\r\nconst apiRequestFailure = (type, error) => ({\r\n  type,\r\n  error\r\n})\r\n\r\nexport const getLocalClassData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCraftingClassData()\r\n    dispatch(localClassDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const saveLocalClassData = classData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCraftingClassData(classData)\r\n    dispatch(localClassDataStore(classData))\r\n  }\r\n}\r\n\r\nexport const clearLocalClassData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCraftingClassData()\r\n    dispatch(localClassDataClear())\r\n  }\r\n}\r\n\r\nexport const saveLocalCharacterData = characterData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCharacterData(characterData)\r\n    dispatch(localCharacterDataStore(characterData))\r\n  }\r\n}\r\n\r\nexport const getLocalCharacterData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCharacterData()\r\n    dispatch(localCharacterDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const clearLocalCharacterData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCharacterData()\r\n    dispatch(localCharacterDataClear())\r\n  }\r\n}\r\n\r\nexport const getLodestoneCharacterData = characterId => {\r\n  return async dispatch => {\r\n    dispatch(lodestoneCharacterDataRequest(characterId))\r\n    try {\r\n      const payload = await XivApi.getCharacterById(characterId)\r\n      dispatch(apiRequestSuccess(T.LODESTONE_CHARACTER_DATA_SUCCESS, payload))\r\n      dispatch(saveLocalCharacterData(payload))\r\n      dispatch(saveLocalClassData(LocalStorage.updateCraftingClassDataWithCharacterData()))\r\n      dispatch(getLocalClassData())\r\n    } catch (err) {\r\n      dispatch(apiRequestFailure(T.API_REQUEST_FAILURE, err))\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap'\r\nimport { get, map as _map } from 'lodash'\r\nimport XIV_SERVERS from '../../data/xiv-servers'\r\nimport * as XivApi from '../../service/xivApi'\r\n\r\nclass LodestoneCharacterModal extends React.Component {\r\n  state = {}\r\n\r\n  handleSetField (event) {\r\n    const { target: { name, value } } = event\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSearch (page = 1, event) {\r\n    !!event && event.preventDefault()\r\n    this.setState({\r\n      loading: true,\r\n      page\r\n    }, this.performSearch)\r\n  }\r\n\r\n  async performSearch () {\r\n    const { name, server, page } = this.state\r\n    const result = await XivApi.findCharacterByServerAndName(server, name, page)\r\n    this.setState({\r\n      lodestoneResults: result,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleClose () {\r\n    const { onHide } = this.props\r\n    this.setState({\r\n      name: undefined,\r\n      server: undefined,\r\n      lodestoneResults: undefined,\r\n      characterId: undefined\r\n    }, onHide)\r\n  }\r\n\r\n  handleSubmitCharacterSelection () {\r\n    const { getLodestoneCharacterData } = this.props\r\n    const { characterId } = this.state\r\n\r\n    getLodestoneCharacterData(characterId)\r\n    this.handleClose()\r\n  }\r\n\r\n  render () {\r\n    const { show } = this.props\r\n    const { characterId, loading, lodestoneResults, name, server } = this.state\r\n\r\n    const results = get(lodestoneResults, 'Results', [])\r\n    const prevPage = get(lodestoneResults, 'Pagination.PagePrev')\r\n    const nextPage = get(lodestoneResults, 'Pagination.PageNext')\r\n\r\n    return (\r\n      <Modal show={show} onHide={this.handleClose.bind(this)}>\r\n        <Form\r\n          onSubmit={this.handleSearch.bind(this, 1)}\r\n          onReset={this.handleClose.bind(this)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Import Character Data\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Label>Server</Form.Label>\r\n              <Form.Control name=\"server\" as=\"select\" onChange={this.handleSetField.bind(this)}>\r\n                <option>Choose a Server</option>\r\n                {_map(XIV_SERVERS, (server, key) => (\r\n                  <option key={key} value={server}>{server}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control name=\"name\" type=\"text\" onChange={this.handleSetField.bind(this)} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" disabled={!name || !server}>\r\n              Search\r\n            </Button>\r\n            <hr />\r\n            {!!loading && (\r\n              <div className=\"fullWidth text-center\">\r\n                <Spinner animation=\"grow\" variant=\"danger\" />\r\n                <Spinner animation=\"grow\" variant=\"warning\" />\r\n                <Spinner animation=\"grow\" variant=\"success\" />\r\n              </div>\r\n            )}\r\n            {!loading && !results.length && (\r\n              <div>\r\n                No results available.\r\n              </div>\r\n            )}\r\n            {!loading && !!results.length && (\r\n              <React.Fragment>\r\n                <div className=\"lodestoneResults\">\r\n                  {results.map((char, key) => {\r\n                    const { ID, Name, Avatar } = char\r\n                    return (\r\n                      <div\r\n                        key={key}\r\n                        className=\"flex justify-between items-center\"\r\n                      >\r\n                        <Form.Check\r\n                          id={ID}\r\n                          type=\"radio\"\r\n                          name=\"characterId\"\r\n                          value={ID}\r\n                          onChange={this.handleSetField.bind(this)}\r\n                        />\r\n                        <label htmlFor={ID}>{Name}</label>\r\n                        <label htmlFor={ID}>\r\n                          <img className=\"avatar\" src={Avatar} alt={Name} />\r\n                        </label>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n                <div className=\"flex justify-between items-center pt2\">\r\n                  <div className=\"w-50 tl\">\r\n                    {!!prevPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, prevPage)}>\r\n                        Prev Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"w-50 tr\">\r\n                    {nextPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, nextPage)}>\r\n                        Next Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"reset\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"primary\"\r\n              disabled={!characterId}\r\n              onClick={this.handleSubmitCharacterSelection.bind(this)}\r\n            >\r\n              Load Data\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired\r\n}\r\n\r\nLodestoneCharacterModal.defaultProps = {\r\n  show: false\r\n}\r\n\r\nexport default LodestoneCharacterModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { get } from 'lodash'\r\nimport { NavDropdown } from 'react-bootstrap'\r\nimport { clearLocalCharacterData, clearLocalClassData, getLodestoneCharacterData } from '../../store/local/actions'\r\nimport LodestoneCharacterModal from './LodestoneCharacterModal'\r\n\r\nconst getDropdownTitle = characterData => {\r\n  if (get(characterData, 'Character.Avatar')) {\r\n    const { Character: { Avatar, Name } } = characterData\r\n    return (\r\n      <span className=\"items-center\">\r\n        {Name}\r\n        <span className=\"ml2\"><img src={Avatar} alt={Name} className=\"avatar\" /></span>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return 'Options'\r\n}\r\n\r\nclass LodestoneCharacterMenu extends React.Component {\r\n  state = {\r\n    showModal: false\r\n  }\r\n\r\n  handleModalToggle (showModal) {\r\n    this.setState({\r\n      showModal: showModal\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      characterData,\r\n      clearLocalCharacterData,\r\n      clearLocalClassData,\r\n      getLodestoneCharacterData,\r\n      lodestoneResults,\r\n      searchLodestoneCharacterData\r\n    } = this.props\r\n\r\n    const importText = `Import ${!characterData ? '' : 'Different'} Character Data`.replace('  ', ' ')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavDropdown\r\n          alignRight\r\n          title={getDropdownTitle(characterData)}\r\n        >\r\n          {!!characterData && (\r\n            <React.Fragment>\r\n              <NavDropdown.Item onClick={getLodestoneCharacterData.bind(this, characterData.characterId)}>\r\n                Refresh Character Data\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n            </React.Fragment>\r\n          )}\r\n          <NavDropdown.Item onClick={this.handleModalToggle.bind(this, true)}>\r\n            {importText}\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={clearLocalClassData}>\r\n            Clear Crafting Class Data\r\n          </NavDropdown.Item>\r\n          {!!characterData && (\r\n            <NavDropdown.Item onClick={clearLocalCharacterData}>\r\n              Clear Character Data\r\n            </NavDropdown.Item>\r\n          )}\r\n        </NavDropdown>\r\n        <LodestoneCharacterModal\r\n          lodestoneResults={lodestoneResults}\r\n          onHide={this.handleModalToggle.bind(this, false)}\r\n          searchLodestoneCharacterData={searchLodestoneCharacterData}\r\n          show={this.state.showModal}\r\n          getLodestoneCharacterData={getLodestoneCharacterData}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterMenu.propTypes = {\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId)),\r\n  clearLocalCharacterData: () => dispatch(clearLocalCharacterData()),\r\n  clearLocalClassData: () => dispatch(clearLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LodestoneCharacterMenu)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Nav, Navbar, NavbarBrand } from 'react-bootstrap'\r\nimport LodestoneCharacterMenu from './LodestoneCharacterMenu'\r\n\r\nexport default class Navigation extends React.Component {\r\n  render () {\r\n    const { characterData } = this.props\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <LinkContainer to=\"/\">\r\n          <NavbarBrand>\r\n            FFXIV Crafting & Gathering Helper\r\n          </NavbarBrand>\r\n        </LinkContainer>\r\n        <Nav className=\"mr-auto\" />\r\n        <Nav>\r\n          <LodestoneCharacterMenu\r\n            characterData={characterData}\r\n          />\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  characterData: PropTypes.shape(),\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, ButtonGroup, Form, FormControl, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { filter, forEach, includes, isEqual } from 'lodash'\r\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class RecipeSearchForm extends React.Component {\r\n  state = {\r\n    craftingClassSelections: <ButtonGroup />\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.updateCraftingClassSelections()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const { recipeSearchClasses } = this.props\r\n    if (!isEqual(recipeSearchClasses, prevProps.recipeSearchClasses)) {\r\n      this.updateCraftingClassSelections()\r\n    }\r\n  }\r\n\r\n  updateCraftingClassSelections () {\r\n    const { recipeSearchClasses, handleToggleRecipeSearchClass } = this.props\r\n\r\n    const buttons = []\r\n\r\n    forEach(filter(CRAFTING_CLASSES, cc => cc.type === 'crafting'), cc => {\r\n      buttons.push((\r\n        <OverlayTrigger\r\n          key={`overlayTrigger-${cc.abbreviation}`}\r\n          overlay={\r\n            <Tooltip id={`tooltip-${cc.abbreviation}`}>\r\n              {cc.name}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <Button\r\n            className=\"craftingClassSelections\"\r\n            key={cc.abbreviation}\r\n            value={cc.abbreviation}\r\n            variant={includes(recipeSearchClasses, cc.abbreviation) ? 'primary' : 'light'}\r\n          >\r\n            <img\r\n              src={getIconUrl(cc.icon)}\r\n              alt={cc.name}\r\n              onClick={handleToggleRecipeSearchClass.bind(this, cc.abbreviation)}\r\n            />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      ))\r\n    })\r\n\r\n    const craftingClassSelections = (\r\n      <ButtonGroup>\r\n        {buttons}\r\n      </ButtonGroup>\r\n    )\r\n\r\n    this.setState({\r\n      craftingClassSelections\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      handleChange,\r\n      handleReset,\r\n      handleSubmit,\r\n      handleToggleRecipeIncludeMaster,\r\n      handleToggleRecipeSearchExact,\r\n      recipeSearchExact,\r\n      recipeSearchIncludeMaster,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchString,\r\n      searching\r\n    } = this.props\r\n\r\n    const { craftingClassSelections } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Form onReset={handleReset} onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Enter Your Search Term(s)</Form.Label>\r\n            <Form.Control\r\n              as=\"input\"\r\n              name=\"recipeSearchString\"\r\n              value={recipeSearchString}\r\n              onChange={handleChange}\r\n              isInvalid={!!recipeSearchIsInvalid}\r\n            />\r\n            <FormControl.Feedback type=\"invalid\">\r\n              Please enter a search term.\r\n            </FormControl.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              Choose Crafting Classes to Search\r\n              <br />\r\n              <small>(if none are selected, all will be searched)</small>\r\n            </Form.Label>\r\n            <br />\r\n            {craftingClassSelections}\r\n          </Form.Group>\r\n          <div className=\"flex flex-row\">\r\n            <Form.Check onChange={handleToggleRecipeIncludeMaster} checked={recipeSearchIncludeMaster} />\r\n            <Form.Label>Include Master Recipes</Form.Label>\r\n          </div>\r\n          {false && (\r\n            <div className=\"flex flex-row\">\r\n              <Form.Check onChange={handleToggleRecipeSearchExact} checked={recipeSearchExact} />\r\n              <Form.Label>Search Exact Phrase</Form.Label>\r\n            </div>\r\n          )}\r\n          <Button type=\"reset\" variant=\"danger\" className=\"mr1\" disabled={!!searching}>Clear</Button>\r\n          <Button type=\"submit\" variant=\"primary\" className=\"ml1\" disabled={!!searching}>Go!</Button>\r\n        </Form>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleToggleRecipeIncludeMaster: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchClass: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchExact: PropTypes.func.isRequired,\r\n  recipeSearchClasses: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  recipeSearchExact: PropTypes.bool.isRequired,\r\n  recipeSearchIncludeMaster: PropTypes.bool.isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchString: PropTypes.string.isRequired,\r\n  searching: PropTypes.bool.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, ButtonGroup } from 'react-bootstrap'\r\n\r\nexport default class Pagination extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    const { currentPage, handlePageChange, totalPages } = props\r\n    const minPage = Math.max(1, Math.min(currentPage - 3, totalPages - 6))\r\n    const maxPage = Math.min(totalPages, minPage + 6)\r\n\r\n    const options = []\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"first\"\r\n          value={1}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === 1}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &lt;&lt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 1) {\r\n      options.push((\r\n        <Button\r\n          key=\"prev\"\r\n          value={Math.max(currentPage - 1, 1)}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === 1}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &lt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"prevGroup\"\r\n          value={Math.max(1, currentPage - 7)}\r\n          onClick={handlePageChange}\r\n          disabled={minPage === 1}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          ...\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    for (let i = minPage; i <= maxPage; i++) {\r\n      const activePage = i === currentPage\r\n      const option = (\r\n        <Button\r\n          key={i}\r\n          value={i}\r\n          onClick={handlePageChange}\r\n          variant={activePage ? 'primary' : 'light'}\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          {i}\r\n        </Button>\r\n      )\r\n\r\n      options.push(option)\r\n    }\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"nextGroup\"\r\n          value={Math.min(totalPages, currentPage + 7)}\r\n          onClick={handlePageChange}\r\n          disabled={maxPage === totalPages}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          ...\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 1) {\r\n      options.push((\r\n        <Button\r\n          key=\"next\"\r\n          value={Math.min(currentPage + 1, totalPages)}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === totalPages}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &gt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"last\"\r\n          value={totalPages}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === totalPages}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &gt;&gt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    this.state = {\r\n      options\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { options } = this.state\r\n    return (\r\n      <div>\r\n        <ButtonGroup>\r\n          {options}\r\n        </ButtonGroup>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  totalPages: PropTypes.number.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { find, get } from 'lodash'\r\nimport { Button, Spinner, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare, faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\nimport Pagination from '../common/Pagination'\r\n\r\nexport default class RecipeSearchResult extends React.Component {\r\n  render () {\r\n    const {\r\n      handlePageChange,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      myList,\r\n      pagination,\r\n      ready,\r\n      recipeList\r\n    } = this.props\r\n\r\n    if (!ready) {\r\n      return (\r\n        <div className=\"tc\">\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (!recipeList.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const pagePrev = get(pagination, 'PagePrev')\r\n    const pageNext = get(pagination, 'PageNext')\r\n    const pageTotal = get(pagination, 'PageTotal')\r\n    const pageCurrent = get(pagination, 'Page')\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <td colSpan={5} className=\"tc\">\r\n            <Pagination currentPage={pageCurrent} totalPages={pageTotal} handlePageChange={handlePageChange} />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Add/Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {recipeList.map((r, key) => {\r\n          const iconUrl = getIconUrl(get(r, 'Icon', ''))\r\n          const name = get(r, 'Name')\r\n          const craftingClassName = get(r, 'ClassJob.NameEnglish')\r\n          const level = get(r, 'RecipeLevelTable.ClassJobLevel')\r\n          const isOnList = !!find(myList, item => get(item, 'ID') === get(r, 'ID'))\r\n\r\n          return (\r\n            <tr key={key}>\r\n              <td><img src={iconUrl} alt={name} /></td>\r\n              <td>{craftingClassName}</td>\r\n              <td>{name}</td>\r\n              <td>{level}</td>\r\n              <td>\r\n                <Button onClick={handleToggleListItem.bind(this, r)} variant={isOnList ? 'danger' : 'success'}>\r\n                  <FontAwesomeIcon\r\n                    icon={isOnList ? faMinusSquare : faPlusSquare}\r\n                  />\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n        <tfoot>\r\n        <tr>\r\n          <td colSpan={5} className=\"tc\">\r\n            <Pagination currentPage={pageCurrent} totalPages={pageTotal} handlePageChange={handlePageChange} />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td colSpan={5}>\r\n            <div className=\"w-third dib tl\">\r\n              {!!pagePrev && (\r\n                <Button value={pagePrev} onClick={handlePageChange}>\r\n                  Previous\r\n                </Button>\r\n              )}\r\n            </div>\r\n            <div className=\"w-third dib tc\">\r\n              <Button onClick={handleTabChange.bind(this, 'recipe-list')}>\r\n                Go to Recipe List\r\n              </Button>\r\n            </div>\r\n            <div className=\"w-third dib tr\">\r\n              {!!pageNext && (\r\n                <Button value={pageNext} onClick={handlePageChange}>\r\n                  Next\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        </tfoot>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchResult.propTypes = {\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  pagination: PropTypes.shape().isRequired,\r\n  recipeList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  ready: PropTypes.bool.isRequired\r\n}\r\n\r\nRecipeSearchResult.defaultProps = {\r\n  myList: [],\r\n  pagination: {},\r\n  recipeList: [],\r\n  ready: true\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { get } from 'lodash'\r\nimport RecipeSearchForm from './RecipeSearchForm'\r\nimport RecipeSearchResult from './RecipeSearchResult'\r\n\r\nexport default class RecipeSearch extends React.Component {\r\n  render () {\r\n    const {\r\n      handleChange,\r\n      handlePageChange,\r\n      handleReset,\r\n      handleSubmit,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      handleToggleRecipeIncludeMaster,\r\n      handleToggleRecipeSearchClass,\r\n      handleToggleRecipeSearchExact,\r\n      myList,\r\n      recipeSearchClasses,\r\n      recipeSearchExact,\r\n      recipeSearchIncludeMaster,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchResults,\r\n      recipeSearchString,\r\n      searching\r\n    } = this.props\r\n\r\n    const pagination = get(recipeSearchResults, 'Pagination')\r\n    const recipeList = get(recipeSearchResults, 'Results')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <RecipeSearchForm\r\n          handleChange={handleChange}\r\n          handleReset={handleReset}\r\n          handleSubmit={handleSubmit}\r\n          handleToggleRecipeIncludeMaster={handleToggleRecipeIncludeMaster}\r\n          handleToggleRecipeSearchClass={handleToggleRecipeSearchClass}\r\n          handleToggleRecipeSearchExact={handleToggleRecipeSearchExact}\r\n          recipeSearchClasses={recipeSearchClasses}\r\n          recipeSearchExact={recipeSearchExact}\r\n          recipeSearchIncludeMaster={recipeSearchIncludeMaster}\r\n          recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n          recipeSearchString={recipeSearchString}\r\n          searching={searching}\r\n        />\r\n        <hr />\r\n        <RecipeSearchResult\r\n          handlePageChange={handlePageChange}\r\n          handleTabChange={handleTabChange}\r\n          handleToggleListItem={handleToggleListItem}\r\n          myList={myList}\r\n          pagination={pagination}\r\n          recipeList={recipeList}\r\n          ready={!searching}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearch.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  handleToggleRecipeIncludeMaster: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchClass: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchExact: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  recipeSearchClasses: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  recipeSearchExact: PropTypes.bool.isRequired,\r\n  recipeSearchIncludeMaster: PropTypes.bool.isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchResults: PropTypes.shape(),\r\n  recipeSearchString: PropTypes.string.isRequired,\r\n  searching: PropTypes.bool.isRequired\r\n}\r\n\r\nRecipeSearch.defaultProps = {\r\n  myList: [],\r\n  recipeSearchExact: false,\r\n  recipeSearchIncludeMaster: false,\r\n  recipeSearchResults: {}\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class MyList extends React.Component {\r\n  render () {\r\n    const {\r\n      handleClearList,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      handleUpdateQuantity,\r\n      list\r\n    } = this.props\r\n\r\n    if (!list.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Items in List\r\n          <hr />\r\n          <Button onClick={handleTabChange.bind(this, 'search')}>\r\n            Back to Search\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Quantity</th>\r\n          <th>Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {list.map((i, k) => (\r\n          <tr key={k}>\r\n            <td><img src={getIconUrl(i.Icon)} alt={i.Name} /></td>\r\n            <td>{i.ClassJob.NameEnglish}</td>\r\n            <td>{i.Name}</td>\r\n            <td>{i.RecipeLevelTable.ClassJobLevel}</td>\r\n            <td>\r\n              <Form.Control type=\"number\" value={i.quantity} onChange={handleUpdateQuantity.bind(this, i)} />\r\n            </td>\r\n            <td>\r\n              <Button variant=\"danger\" onClick={handleToggleListItem.bind(this, i)}>\r\n                <FontAwesomeIcon icon={faMinusSquare} />\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n        {list.length && (\r\n          <tfoot>\r\n          <tr>\r\n            <td colSpan={6} className=\"tc\">\r\n              <div className=\"space-between\">\r\n                <Button variant=\"danger\" onClick={handleClearList}>\r\n                  Clear Recipe List\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleTabChange.bind(this, 'shopping-list')}>\r\n                  View My Shopping List\r\n                </Button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </tfoot>\r\n        )}\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nMyList.propTypes = {\r\n  handleClearList: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  handleUpdateQuantity: PropTypes.func.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.shape({\r\n    ClassJob: PropTypes.shape({\r\n      Abbreviation_en: PropTypes.string.isRequired,\r\n      NameEnglish: PropTypes.string.isRequired\r\n    }),\r\n    Icon: PropTypes.string.isRequired,\r\n    Name: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number,\r\n    RecipeLevelTable: PropTypes.shape({\r\n      ClassJobLevel: PropTypes.number.isRequired\r\n    }).isRequired\r\n  })).isRequired\r\n}\r\n\r\nMyList.defaultProps = {\r\n  list: []\r\n}\r\n","const RECIPE_LIST = 'RECIPE_LIST'\r\nconst SHOPPING_LIST = 'SHOPPING_LIST'\r\n\r\n// export const RECIPE_LIST_ADD = `${RECIPE_LIST}_ADD`\r\n// export const RECIPE_LIST_REMOVE = `${RECIPE_LIST}_REMOVE`\r\nexport const RECIPE_LIST_CLEAR = `${RECIPE_LIST}_CLEAR`\r\nexport const RECIPE_LIST_SAVE = `${RECIPE_LIST}_SAVE`\r\n\r\nexport const SHOPPING_LIST_CREATE = `${SHOPPING_LIST}_CREATE`\r\nexport const SHOPPING_LIST_CLEAR = `${SHOPPING_LIST}_CLEAR`\r\n","import { concat, filter, find, forEach, get, includes, map, set, toLower, uniqBy, orderBy } from 'lodash'\r\nimport ITEM_TO_GATHERING_ITEM_MAPPING from '../data/item-to-gathering-item-mapping'\r\nimport GATHERING_ITEM_POINTS from '../data/gathering-item-points'\r\nimport AETHERYTE from '../data/aetheryte'\r\nimport FISHING_SPOTS from '../data/fishing-spots'\r\nimport * as XivApiService from './xivApi'\r\n\r\n/**\r\n * Gets a list of ingredients required to craft a given set of recipes.\r\n *\r\n * @param recipeList\r\n * @returns {Promise<*>}\r\n */\r\nexport const getIngredientListForRecipes = async recipeList => {\r\n  if (!recipeList || !recipeList.length) return {}\r\n\r\n  // we will want to keep the following lists:\r\n  // 1. Ingredients that can be gathered\r\n  const ingredientsGatherable = []\r\n\r\n  // 2. Ingredients that can be crafted\r\n  const ingredientsCrafted = []\r\n\r\n  // 3. Ingredients that can be obtained from monsters\r\n  const ingredientsOther = []\r\n\r\n  // 3. Ingredients that can be bought (that cannot be gathered or dropped by monsters)\r\n  const ingredientsPurchased = []\r\n\r\n  await getAndSortRecipeResults(recipeList,\r\n    ingredientsGatherable,\r\n    ingredientsCrafted,\r\n    ingredientsPurchased,\r\n    ingredientsOther\r\n  )\r\n\r\n  // get item IDs for the gatherable and purchasable things so we can get their info\r\n  const itemIds = map(concat(ingredientsGatherable, ingredientsOther), item => get(item, 'itemId'))\r\n  const itemData = await XivApiService.getItemsById(itemIds)\r\n\r\n  forEach(get(itemData, 'Results', []), item => {\r\n    const foundItem = find(ingredientsGatherable, ig => get(ig, 'itemId') === get(item, 'ID')) ||\r\n      find(ingredientsOther, io => get(io, 'itemId') === get(item, 'ID'))\r\n    set(foundItem, 'name', get(item, 'Name'))\r\n    set(foundItem, 'icon', XivApiService.getIconUrl(get(item, 'Icon')))\r\n    // set(foundItem, 'gameContentLinks', get(item, 'GameContentLinks', {}))\r\n    set(foundItem, 'gameContentLinks',\r\n      filter(\r\n        map(\r\n          get(item, 'GameContentLinks', {}), (value, key) => ({ key, value })\r\n        ), result => {\r\n          const val = toLower(result.key)\r\n          return includes(val, 'shop') && !includes(val, 'special')\r\n        }\r\n      )\r\n    )\r\n\r\n    if (!!get(foundItem, 'gameContentLinks.length')) {\r\n      ingredientsPurchased.push(foundItem)\r\n    }\r\n  })\r\n\r\n  // add gathering item data\r\n  addGatheringItemData(ingredientsGatherable)\r\n\r\n  // sort the results\r\n  return {\r\n    ingredientsCrafted: orderBy(uniqBy(ingredientsCrafted, ic => get(ic, 'ID')), 'Name'),\r\n    ingredientsGatherable: orderBy(ingredientsGatherable, 'name'),\r\n    ingredientsPurchased: orderBy(ingredientsPurchased, 'name'),\r\n    ingredientsOther: orderBy(ingredientsOther, 'name')\r\n  }\r\n}\r\n\r\nconst addGatheringItemData = ingredientsGatherable => {\r\n  forEach(ingredientsGatherable, item => {\r\n    const gatheringItemId = get(item, 'gatheringItemId')\r\n\r\n    if (!!gatheringItemId) {\r\n      const filteredGatheringPoints = filter(\r\n        GATHERING_ITEM_POINTS, point => get(point, 'ID', '').startsWith(`${gatheringItemId}.`)\r\n      )\r\n\r\n      const namePath = 'GatheringPoint.PlaceName.Name_en'\r\n      const areaPath = 'GatheringPoint.TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'GatheringPoint.TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringPoint.GatheringPointBase.GatheringLevel'\r\n      const typePath = 'GatheringPoint.GatheringPointBase.GatheringType.Name_en'\r\n      const aetherytePath = 'GatheringPoint.TerritoryType.AetheryteTargetID'\r\n\r\n      const pointData = map(filteredGatheringPoints, point => getPointData(\r\n        point,\r\n        namePath,\r\n        areaPath,\r\n        regionPath,\r\n        levelPath,\r\n        typePath,\r\n        aetherytePath\r\n      ))\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    } else {\r\n      const itemId = get(item, 'itemId')\r\n      const filteredFishingSpots = filter(FISHING_SPOTS, spot => {\r\n        for (let i = 0; i < 10; i++) {\r\n          const path = `Item${i}TargetID`\r\n          const fishId = get(spot, path)\r\n          if (fishId === itemId) return true\r\n        }\r\n      })\r\n\r\n      const namePath = 'PlaceName.Name_en'\r\n      const areaPath = 'TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringLevel'\r\n      const aetherytePath = 'TerritoryType.AetheryteTargetID'\r\n\r\n      const pointData = map(filteredFishingSpots, point => {\r\n        const pd = getPointData(\r\n          point,\r\n          namePath,\r\n          areaPath,\r\n          regionPath,\r\n          levelPath,\r\n          '',\r\n          aetherytePath\r\n        )\r\n        set(pd, 'type', 'Fishing')\r\n        set(pd, 'gatheringClass', 'Fisherman')\r\n        return pd\r\n      })\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    }\r\n  })\r\n}\r\n\r\nconst getPointData = (data, namePath, areaPath, regionPath, levelPath, typePath, aetherytePath) => {\r\n  const typeMap = {\r\n    'Mining': 'Miner',\r\n    'Quarrying': 'Miner',\r\n    'Logging': 'Botanist',\r\n    'Harvesting': 'Botanist'\r\n  }\r\n  const name = get(data, namePath)\r\n  const area = get(data, areaPath)\r\n  const region = get(data, regionPath)\r\n  const level = get(data, levelPath)\r\n  const type = get(data, typePath)\r\n  const aetheryteId = get(data, aetherytePath)\r\n\r\n  return {\r\n    name: name || get(find(AETHERYTE, a => get(a, 'ID') === aetheryteId), 'PlaceName.Name_en'),\r\n    area,\r\n    region,\r\n    level,\r\n    gatheringClass: get(typeMap, type),\r\n    type,\r\n    id: get(data, 'ID')\r\n  }\r\n}\r\n\r\nconst hasFishingSpotMatch = itemId => {\r\n  let matched = false\r\n  forEach(FISHING_SPOTS, spot => {\r\n    for (let i = 0; i < 10; i++) {\r\n      const path = `Item${i}TargetID`\r\n      const fishingId = get(spot, path)\r\n      if (itemId === fishingId) {\r\n        matched = true\r\n        return\r\n      }\r\n    }\r\n  })\r\n\r\n  return matched\r\n}\r\n\r\nconst getAndSortRecipeResults = async (\r\n  recipeList,\r\n  ingredientsGatherable,\r\n  ingredientsCrafted,\r\n  ingredientsPurchased,\r\n  ingredientsOther\r\n) => {\r\n  const recipeIds = map(recipeList, recipe => get(recipe, 'ID'))\r\n  const recipeResults = get(await XivApiService.getRecipesById(recipeIds), 'Results', [])\r\n  const nextRecipeResults = []\r\n  forEach(recipeResults, rr => {\r\n    const recipeListEntry = find(recipeList, rle => get(rle, 'ID') === get(rr, 'ID'))\r\n    set(rr, 'quantity', get(recipeListEntry, 'quantity'))\r\n\r\n    // go through each ingredient\r\n    for (let i = 0; i < 10; i++) {\r\n      const itemId = get(rr, `ItemIngredient${i}.ID`)\r\n      const itemCategory = get(rr, `ItemIngredient${i}.ItemSearchCategoryTargetID`)\r\n      const amount = get(rr, `AmountIngredient${i}`)\r\n      const gatheringMapNode = find(ITEM_TO_GATHERING_ITEM_MAPPING, mapping => get(mapping, 'ItemID') === itemId)\r\n      const gatheringItemId = get(gatheringMapNode, 'GatheringItemID')\r\n      const ingredientRecipe = get(rr, `ItemIngredientRecipe${i}[0]`)\r\n      const quantity = get(rr, 'quantity')\r\n      const fishingSpotMatch = hasFishingSpotMatch(itemId)\r\n\r\n      if (!!gatheringItemId || !!fishingSpotMatch) {\r\n        const existingIngredientGatherable = find(ingredientsGatherable, ig => get(ig, 'itemId') === itemId)\r\n        if (!!existingIngredientGatherable) {\r\n          const existingAmount = get(existingIngredientGatherable, 'amount')\r\n          set(existingIngredientGatherable, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsGatherable.push({ itemId, gatheringItemId, amount: amount * quantity, itemCategory })\r\n        }\r\n      }\r\n\r\n      if (!!ingredientRecipe) {\r\n        const existingIngredientCrafted = find(ingredientsCrafted, ir => get(ingredientRecipe, 'ID') === get(ir, 'ID'))\r\n        const existingAmount = get(existingIngredientCrafted, 'quantity', 0)\r\n        set(existingIngredientCrafted || ingredientRecipe, 'quantity', existingAmount + (quantity * amount))\r\n        if (!existingIngredientCrafted) {\r\n          nextRecipeResults.push(ingredientRecipe)\r\n          ingredientsCrafted.push(ingredientRecipe)\r\n        }\r\n      }\r\n\r\n      if (!gatheringItemId && !ingredientRecipe && !fishingSpotMatch && !!itemId) {\r\n        const existingIngredientOther = find(ingredientsOther, ip => get(ip, 'itemId') === itemId)\r\n        if (!!existingIngredientOther) {\r\n          const existingAmount = get(existingIngredientOther, 'amount')\r\n          set(existingIngredientOther, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsOther.push({ itemId, amount: amount * quantity })\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  if (!!nextRecipeResults.length) {\r\n    await getAndSortRecipeResults(nextRecipeResults,\r\n      ingredientsGatherable,\r\n      ingredientsCrafted,\r\n      ingredientsPurchased,\r\n      ingredientsOther\r\n    )\r\n  }\r\n}\r\n","import * as T from './types'\r\nimport * as LocalStorageService from '../../service/localStorage'\r\nimport * as RecipeListService from '../../service/recipe'\r\n\r\nconst recipeListClear = () => ({\r\n  type: T.RECIPE_LIST_CLEAR\r\n})\r\n\r\nconst recipeListSave = recipeList => ({\r\n  type: T.RECIPE_LIST_SAVE,\r\n  recipeList\r\n})\r\n\r\nconst shoppingListClear = () => ({\r\n  type: T.SHOPPING_LIST_CLEAR\r\n})\r\n\r\nconst shoppingListCreate = shoppingList => ({\r\n  type: T.SHOPPING_LIST_CREATE,\r\n  shoppingList\r\n})\r\n\r\nexport const saveMyRecipeList = recipeList => dispatch => {\r\n  LocalStorageService.storeMyRecipeList(recipeList)\r\n  dispatch(recipeListSave(recipeList))\r\n  dispatch(createMyShoppingList(recipeList))\r\n}\r\n\r\nexport const clearMyRecipeList = () => dispatch => {\r\n  LocalStorageService.clearMyRecipeList()\r\n  dispatch(recipeListClear())\r\n  dispatch(clearMyShoppingList())\r\n}\r\n\r\nexport const createMyShoppingList = recipeList => async dispatch => {\r\n  const result = await RecipeListService.getIngredientListForRecipes(recipeList)\r\n  LocalStorageService.storeMyShoppingList(result)\r\n  dispatch(shoppingListCreate(result))\r\n}\r\n\r\nexport const clearMyShoppingList = () => dispatch => {\r\n  LocalStorageService.clearMyShoppingList()\r\n  dispatch(shoppingListClear())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortableTableHeaderCell extends React.Component {\r\n  render () {\r\n    const { className, text, sortFunc, applySorting } = this.props\r\n    return (\r\n      <th className={className} onClick={applySorting.bind(this, sortFunc)}\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {text}\r\n        <FontAwesomeIcon\r\n          className=\"margin-left\"\r\n          icon={faSort}\r\n        />\r\n      </th>\r\n    )\r\n  }\r\n}\r\n\r\nSortableTableHeaderCell.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  sortFunc: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\r\n  applySorting: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SortableTableHeaderCell\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Table, FormControl, Badge } from 'react-bootstrap'\r\nimport { filter, isEqual, get, orderBy } from 'lodash'\r\nimport { getIconUrl } from '../../service/xivApi'\r\nimport SortableTableHeaderCell from '../common/SortableTableHeaderCell'\r\n\r\nexport default class ShoppingList extends React.Component {\r\n  state = {\r\n    ingredientsGatherableSort: {\r\n      func: 'name',\r\n      direction: 'asc'\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.updateGatherableIngredients()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const { shoppingList } = this.props\r\n\r\n    if (!isEqual(shoppingList, prevProps.shoppingList)) {\r\n      this.updateGatherableIngredients()\r\n    }\r\n  }\r\n\r\n  updateGatherableIngredients () {\r\n    const { shoppingList } = this.props\r\n    const {\r\n      // ingredientsCrafted,\r\n      // ingredientsPurchased,\r\n      ingredientsGatherable\r\n      // ingredientsOther\r\n    } = shoppingList\r\n\r\n    const gatherableStateVars = {}\r\n    if (ingredientsGatherable) {\r\n      ingredientsGatherable.forEach(item => {\r\n        const key = `gatherable-${item.itemId}-location`\r\n        gatherableStateVars[key] = get(item, 'pointData[0]', {})\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      ...gatherableStateVars,\r\n      ingredientsGatherable: filter(ingredientsGatherable, ig => get(ig, 'itemCategory') !== 58),\r\n      ingredientsCrystals: filter(ingredientsGatherable, ig => get(ig, 'itemCategory') === 58)\r\n    })\r\n  }\r\n\r\n  handleLocationUpdate (event) {\r\n    event.preventDefault()\r\n\r\n    const { target: { value, id } } = event\r\n\r\n    this.setState({\r\n      [id]: JSON.parse(value)\r\n    })\r\n  }\r\n\r\n  handleApplyIngredientsGatherableSort (sortFunc) {\r\n    const { ingredientsGatherableSort } = this.state\r\n\r\n    const sortDirection =\r\n      // isEqual(JSON.stringify(sortFunc), JSON.stringify(ingredientsGatherableSort.func)) && ingredientsGatherableSort.direction === 'asc'\r\n      isEqual(\r\n        JSON.stringify(sortFunc),\r\n        JSON.stringify(ingredientsGatherableSort.func)\r\n      ) && ingredientsGatherableSort.direction === 'asc'\r\n        ? 'desc'\r\n        : 'asc'\r\n\r\n    const newIngredientsGatherableSort = {\r\n      func: sortFunc,\r\n      direction: sortDirection\r\n    }\r\n\r\n    this.setState({\r\n      ingredientsGatherableSort: newIngredientsGatherableSort\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { shoppingList: { ingredientsCrafted, ingredientsPurchased, ingredientsOther } } = this.props\r\n    const { ingredientsCrystals, ingredientsGatherable, ingredientsGatherableSort } = this.state\r\n\r\n    if (!ingredientsGatherable && !ingredientsCrafted && !ingredientsPurchased) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const headings = (\r\n      <tr>\r\n        <th />\r\n        <th>Name</th>\r\n        <th>Required Class</th>\r\n        <th>Required Level</th>\r\n        <th>Quantity</th>\r\n        <th>Location</th>\r\n      </tr>\r\n    )\r\n\r\n    const headingColumns = 6\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"flex flex-row justify-center items-center\">\r\n          {!!ingredientsCrystals && (\r\n            ingredientsCrystals.map(ic => {\r\n              const { amount, name, icon } = ic\r\n              return (\r\n                <span key={name} className=\"ph1\">\r\n                  <img src={icon} alt={name} /><br />\r\n                  <Badge variant=\"primary\" style={{ position: 'relative', top: '-15px', right: '-25px' }}>{amount}</Badge>\r\n                </span>\r\n              )\r\n            })\r\n          )}\r\n        </div>\r\n        <Table hover striped className=\"shopping-list\">\r\n          {!!ingredientsGatherable && !!ingredientsGatherable.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Gatherable Items</th>\r\n              </tr>\r\n              <tr>\r\n                <th />\r\n                <SortableTableHeaderCell\r\n                  text=\"Name\"\r\n                  sortFunc=\"name\"\r\n                  applySorting={this.handleApplyIngredientsGatherableSort.bind(this)}\r\n                />\r\n                <th>Required Class</th>\r\n                <th>Required Level</th>\r\n                <th>Quantity</th>\r\n                <SortableTableHeaderCell\r\n                  text=\"Location\"\r\n                  sortFunc={ig => {\r\n                    const point = get(this.state, `gatherable-${ig.itemId}-location`)\r\n                    return `${point.region} - ${point.area} - ${point.name}`\r\n                  }}\r\n                  applySorting={this.handleApplyIngredientsGatherableSort.bind(this)}\r\n                />\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {orderBy(ingredientsGatherable, ingredientsGatherableSort.func, ingredientsGatherableSort.direction)\r\n                .map(item => {\r\n                  const { name, icon, itemId, amount, pointData } = item\r\n                  const key = `gatherable-${itemId}`\r\n                  const locationSelectId = `${key}-location`\r\n                  const gatheringClass = get(this.state, `${locationSelectId}.gatheringClass`)\r\n                  const gatheringType = get(this.state, `${locationSelectId}.type`)\r\n                  const level = get(this.state, `${locationSelectId}.level`)\r\n\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td><img src={icon} alt={name} /></td>\r\n                      <td>{name}</td>\r\n                      <td>{gatheringClass}{!!gatheringType && ` (${gatheringType})`}</td>\r\n                      <td>{level}</td>\r\n                      <td>{amount}</td>\r\n                      <td>\r\n                        {pointData.length === 1 && (\r\n                          <React.Fragment>\r\n                            {pointData[0].region} - {pointData[0].area} - {pointData[0].name}\r\n                          </React.Fragment>\r\n                        )}\r\n                        {pointData.length > 1 && (\r\n                          <FormControl\r\n                            id={locationSelectId}\r\n                            as=\"select\"\r\n                            onChange={this.handleLocationUpdate.bind(this)}\r\n                          >\r\n                            {pointData.map((point, key) => (\r\n                              <option key={key} value={JSON.stringify(point)}>\r\n                                {point.region} - {point.area} - {point.name} (Level {point.level}, {point.gatheringClass})\r\n                              </option>\r\n                            ))}\r\n                          </FormControl>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsOther && !!ingredientsOther.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Items Obtained Elsewhere</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsOther.map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`}>\r\n                    <td><img src={icon} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>N/A</td>\r\n                    <td>N/A</td>\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsPurchased && !!ingredientsPurchased.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Purchasable Items</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsPurchased.map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`}>\r\n                    <td><img src={icon} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>N/A</td>\r\n                    <td>N/A</td>\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsCrafted && !!ingredientsCrafted.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Prerequisite Crafts</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsCrafted.map(item => {\r\n                const name = get(item, 'ItemResult.Name_en')\r\n                const icon = get(item, 'ItemResult.Icon')\r\n                const id = get(item, 'ID')\r\n                const quantity = get(item, 'quantity')\r\n                const craftClass = get(item, 'ClassJob.NameEnglish')\r\n                const craftLevel = get(item, 'RecipeLevelTable.ClassJobLevel')\r\n                return (\r\n                  <tr key={`crafted-${id}`}>\r\n                    <td><img src={getIconUrl(icon)} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>{craftClass}</td>\r\n                    <td>{craftLevel}</td>\r\n                    <td>{quantity}</td>\r\n                    <td>N/A</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  shoppingList: PropTypes.shape().isRequired\r\n}\r\n\r\nShoppingList.defaultProps = {\r\n  shoppingList: {}\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport { orderBy } from 'lodash'\r\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\r\n\r\nexport default class FilterDropdown extends React.Component {\r\n  render () {\r\n    const { label, applyFilterFunc } = this.props\r\n    return (\r\n      <DropdownButton title={`Showing ${label}`}>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => !!c)}>\r\n          All\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'crafting')}>\r\n          Crafting Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'gathering')}>\r\n          Gathering Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        {orderBy(CRAFTING_CLASSES, 'name').map((craftingClass, key) => (\r\n          <Dropdown.Item\r\n            key={key}\r\n            onClick={applyFilterFunc.bind(this, c => c.abbreviation === craftingClass.abbreviation)}\r\n          >\r\n            {craftingClass.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n    )\r\n  }\r\n}\r\n\r\nFilterDropdown.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  applyFilterFunc: PropTypes.func.isRequired\r\n}\r\n","export function calculateRemainingExp (currentExp, totalExp) {\r\n  return Math.max(totalExp - currentExp, 0)\r\n}\r\n\r\nexport function calculateRemainingItems (remainingExp, expPerItem) {\r\n  return Math.ceil(remainingExp / expPerItem)\r\n}\r\n\r\nexport function calculateProgressPercentage (currentExp, totalExp) {\r\n  return totalExp <= 0 ? 0 : Math.floor((currentExp / totalExp) * 100)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport SortableTableHeaderCell from '../common/SortableTableHeaderCell'\r\n\r\nconst tableHeaders = [\r\n  { name: 'Class', sortFunc: 'name' },\r\n  { name: 'Level', sortFunc: 'currentLevel' },\r\n  { name: 'Current Exp.', sortFunc: 'currentExperience' },\r\n  { name: 'Required Exp.', sortFunc: undefined },\r\n  { name: 'Remaining Exp.', sortFunc: c => calculateRemainingExp(c.currentExperience, c.totalExperience) },\r\n  { name: 'Exp. Per Item', sortFunc: 'experiencePerItem' },\r\n  {\r\n    name: 'Remaining Items',\r\n    sortFunc: c => calculateRemainingItems(\r\n      calculateRemainingExp(c.currentExperience, c.totalExperience), c.experiencePerItem\r\n    )\r\n  },\r\n  { name: 'Progress', sortFunc: c => calculateProgressPercentage(c.currentExperience, c.totalExperience) }\r\n]\r\n\r\nexport default class CalculationsTableHeader extends React.Component {\r\n  render () {\r\n    const { applySortFunc } = this.props\r\n    return (\r\n      <thead>\r\n      <tr>\r\n        {tableHeaders.map((h, key) => {\r\n          if (h.sortFunc) {\r\n            return (\r\n              <SortableTableHeaderCell\r\n                key={key}\r\n                text={h.name}\r\n                sortFunc={h.sortFunc}\r\n                applySorting={applySortFunc}\r\n              />\r\n            )\r\n          } else {\r\n            return (\r\n              <th key={key}>\r\n                {h.name}\r\n              </th>\r\n            )\r\n          }\r\n        })}\r\n      </tr>\r\n      </thead>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableHeader.propTypes = {\r\n  applySortFunc: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport Form from 'react-bootstrap/es/Form'\r\nimport { OverlayTrigger, Popover, ProgressBar } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\r\nimport { find, set, toNumber } from 'lodash'\r\nimport LEVELING_GUIDE_LINKS from '../../data/leveling-guide-links'\r\n\r\nclass CalculationsTableBody extends React.Component {\r\n  state = {\r\n    focusedRow: undefined\r\n  }\r\n\r\n  getLevelingGuidePageUrl (abbreviation, currentLevel) {\r\n    const classGuideData = find(LEVELING_GUIDE_LINKS, g => g.abbreviation === abbreviation)\r\n    const { levelingGuide } = classGuideData\r\n\r\n    const matchedPage = find(levelingGuide.pages, p => {\r\n      const { maxLevel, minLevel } = p\r\n\r\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\r\n        return true\r\n      }\r\n    })\r\n\r\n    return !!matchedPage ? `${levelingGuide.url}/${matchedPage.page}/` : levelingGuide.url\r\n  }\r\n\r\n  validateNumericFieldChange (abbreviation, event) {\r\n    const { target: { value, max, min } } = event\r\n    const { updateField } = this.props\r\n\r\n    if (!!min && toNumber(value) < min) {\r\n      set(event, 'target.value', min)\r\n    }\r\n\r\n    if (!!max && toNumber(value) > max) {\r\n      set(event, 'target.value', max)\r\n    }\r\n\r\n    updateField(abbreviation, event)\r\n  }\r\n\r\n  handleRowFocus (abbreviation, focused) {\r\n    this.setState({\r\n      focusedRow: focused ? abbreviation : undefined\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { craftingClasses } = this.props\r\n    return (\r\n      <tbody>\r\n      {craftingClasses.map(c => {\r\n        const remainingExperience = calculateRemainingExp(c.currentExperience, c.totalExperience)\r\n        const remainingItems = calculateRemainingItems(remainingExperience, c.experiencePerItem)\r\n        const progressPercentage = calculateProgressPercentage(c.currentExperience, c.totalExperience)\r\n\r\n        const popover = (\r\n          <Popover id={`links-${c.name}`}>\r\n            <a\r\n              href={this.getLevelingGuidePageUrl(c.abbreviation, c.currentLevel)}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Leveling Guide\r\n            </a>\r\n          </Popover>\r\n        )\r\n\r\n        return (\r\n          <tr\r\n            key={`calculationTableRow${c.abbreviation}`}\r\n            onFocus={this.handleRowFocus.bind(this, c.abbreviation, true)}\r\n            onBlur={this.handleRowFocus.bind(this, c.abbreviation, false)}\r\n            className={cx(this.state.focusedRow === c.abbreviation ? 'focused' : undefined)}\r\n          >\r\n            <td>\r\n              <div className=\"flex justify-between items-center\">\r\n                {c.name}\r\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\r\n                  <FontAwesomeIcon icon={faIcon} className=\"text-primary pointer\" />\r\n                </OverlayTrigger>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentLevel\"\r\n                type=\"number\"\r\n                value={c.currentLevel}\r\n                min=\"1\"\r\n                max=\"70\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentExperience\"\r\n                type=\"number\"\r\n                value={c.currentExperience}\r\n                min=\"0\"\r\n                max={c.totalExperience}\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{c.totalExperience}</td>\r\n            <td>{remainingExperience}</td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"experiencePerItem\"\r\n                type=\"number\"\r\n                value={c.experiencePerItem}\r\n                min=\"1\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{remainingItems}</td>\r\n            <td>\r\n              <ProgressBar\r\n                now={progressPercentage}\r\n                label={`${c.currentExperience} / ${c.totalExperience} (${progressPercentage}%)`}\r\n              />\r\n            </td>\r\n          </tr>\r\n        )\r\n      })}\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableBody.propTypes = {\r\n  craftingClasses: PropTypes.arrayOf(PropTypes.shape()).isRequired\r\n}\r\n\r\nexport default CalculationsTableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Table } from 'react-bootstrap'\r\nimport { concat, filter, find, isEqual, orderBy, set, toNumber } from 'lodash'\r\nimport FilterDropdown from './FilterDropdown'\r\nimport CalculationsTableHeader from './CalculationsTableHeader'\r\nimport CalculationsTableBody from './CalculationsTableBody'\r\nimport EXP_PER_LEVEL from '../../data/exp-per-level'\r\nimport { saveLocalClassData } from '../../store/local/actions'\r\n\r\nclass CraftingGatheringCalculator extends React.Component {\r\n  state = {\r\n    sort: {\r\n      func: 'name',\r\n      direction: 'asc'\r\n    },\r\n    filter: {\r\n      func: undefined,\r\n      label: 'All'\r\n    }\r\n  }\r\n\r\n  applySort (sortFunc) {\r\n    const { sort } = this.state\r\n    const sortDirection = isEqual(sortFunc, sort.func) && sort.direction === 'asc' ? 'desc' : 'asc'\r\n    this.setState({\r\n      sort: {\r\n        func: sortFunc,\r\n        direction: sortDirection\r\n      }\r\n    })\r\n  }\r\n\r\n  applyFilter (filterFunc, event) {\r\n    this.setState({\r\n      filter: {\r\n        func: filterFunc,\r\n        label: event.target.innerText\r\n      }\r\n    })\r\n  }\r\n\r\n  getSortedCraftingClassData (craftingClassData) {\r\n    const { sort } = this.state\r\n    return orderBy(craftingClassData, sort.func, sort.direction)\r\n  }\r\n\r\n  getFilteredCraftingClassData (craftingClassData) {\r\n    const { filter: { func } } = this.state\r\n    return filter(craftingClassData, func)\r\n  }\r\n\r\n  updateField (abbreviation, event) {\r\n    const { target: { value, name } } = event\r\n    const { craftingClassData, saveLocalClassData } = this.props\r\n\r\n    const targetCraftingClass = find(craftingClassData, c => c.abbreviation === abbreviation)\r\n    const otherCraftingClasses = filter(craftingClassData, c => c.abbreviation !== abbreviation)\r\n    set(targetCraftingClass, name, toNumber(value))\r\n\r\n    if (name === 'currentLevel') {\r\n      set(targetCraftingClass, 'totalExperience', EXP_PER_LEVEL[value])\r\n    }\r\n\r\n    const updatedCraftingClasses = orderBy(concat(otherCraftingClasses, targetCraftingClass), ['type', 'name'])\r\n\r\n    saveLocalClassData(updatedCraftingClasses)\r\n  }\r\n\r\n  render () {\r\n    const { craftingClassData } = this.props\r\n    const sortedAndFilteredCraftingClassData = this.getSortedCraftingClassData(\r\n      this.getFilteredCraftingClassData(craftingClassData)\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"w-100 pv3 tc\">\r\n          <FilterDropdown label={this.state.filter.label} applyFilterFunc={this.applyFilter.bind(this)} />\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <Table className=\"calculations\" striped hover>\r\n            <CalculationsTableHeader applySortFunc={this.applySort.bind(this)} />\r\n            <CalculationsTableBody\r\n              craftingClasses={sortedAndFilteredCraftingClassData}\r\n              updateField={this.updateField.bind(this)}\r\n            />\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCraftingGatheringCalculator.propTypes = {\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveLocalClassData: (classData) => dispatch(saveLocalClassData(classData))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CraftingGatheringCalculator)\r\n","import React from 'react'\r\nimport { Badge, Tab, Tabs } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { cloneDeep, find, get, includes, indexOf, omit, reject, sortBy, toNumber } from 'lodash'\r\nimport { recipeSearch } from '../service/xivApi'\r\nimport RecipeSearch from './recipes/RecipeSearch'\r\nimport MyList from './recipes/MyList'\r\nimport * as recipeActions from '../store/recipeList/actions'\r\nimport ShoppingList from './recipes/ShoppingList'\r\nimport CraftingGatheringCalculator from './calculator/CraftingGatheringCalculator'\r\n\r\nclass RecipeHelper extends React.Component {\r\n  state = {\r\n    recipeSearchClasses: [],\r\n    recipeSearchExact: false,\r\n    recipeSearchString: '',\r\n    recipeSearchIncludeMaster: false,\r\n    recipeSearchIsInvalid: false,\r\n    searching: false,\r\n    myList: [],\r\n    lastSearch: undefined\r\n  }\r\n\r\n  handleToggleRecipeSearchClass (event) {\r\n    const recipeSearchClasses = cloneDeep(get(this.state, 'recipeSearchClasses', []))\r\n    const abbreviation = get(event, 'target.value', event)\r\n\r\n    if (includes(recipeSearchClasses, abbreviation)) {\r\n      recipeSearchClasses.splice(recipeSearchClasses.indexOf(abbreviation), 1)\r\n    } else {\r\n      recipeSearchClasses.push(abbreviation)\r\n    }\r\n\r\n    this.setState({\r\n      recipeSearchClasses: sortBy(recipeSearchClasses, s => s.toLowerCase())\r\n    })\r\n  }\r\n\r\n  handleToggleRecipeSearchExact (event) {\r\n    const recipeSearchExact = get(event, 'target.checked', false)\r\n    this.setState({\r\n      recipeSearchExact\r\n    })\r\n  }\r\n\r\n  handleToggleRecipeIncludeMaster (event) {\r\n    const checked = get(event, 'target.checked')\r\n\r\n    this.setState({\r\n      recipeSearchIncludeMaster: checked\r\n    })\r\n  }\r\n\r\n  handleFieldUpdate (event) {\r\n    const { target: { name, value } } = event\r\n\r\n    let recipeSearchIsInvalid = false\r\n    if (!value) {\r\n      recipeSearchIsInvalid = true\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      recipeSearchIsInvalid\r\n    })\r\n  }\r\n\r\n  handleClearList () {\r\n    const { clearMyRecipeList } = this.props\r\n    clearMyRecipeList()\r\n    this.handleTabChange('search')\r\n  }\r\n\r\n  async search (page = 1) {\r\n    const { recipeSearchClasses, recipeSearchExact, recipeSearchIncludeMaster, recipeSearchString } = this.state\r\n    const results = await recipeSearch(recipeSearchString, {\r\n      page,\r\n      abbreviation: recipeSearchClasses,\r\n      exact: recipeSearchExact,\r\n      includeMasterRecipes: recipeSearchIncludeMaster\r\n    })\r\n\r\n    this.setState({\r\n      searching: false,\r\n      recipeList: results,\r\n      lastSearch: recipeSearchString\r\n    })\r\n  }\r\n\r\n  handleUpdateQuantity (item, event) {\r\n    const newValue = Math.max(1, toNumber(event.target.value))\r\n\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    const myListItemIndex = indexOf(myRecipeList, item)\r\n    myRecipeList[myListItemIndex].quantity = newValue\r\n    saveMyRecipeList(myRecipeList)\r\n  }\r\n\r\n  handleSearch (event) {\r\n    event.preventDefault()\r\n    const page = get(event, 'target.value', 1)\r\n    const { recipeSearchString } = this.state\r\n    if (!recipeSearchString) {\r\n      document.getElementsByName('recipeSearchString')[0].focus()\r\n      this.setState({\r\n        recipeSearchIsInvalid: true\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      searching: true\r\n    }, () => this.search(page))\r\n  }\r\n\r\n  handleClear () {\r\n    document.getElementsByName('recipeSearchString')[0].focus()\r\n    this.setState({\r\n      recipeSearchIsInvalid: false,\r\n      recipeSearchString: ''\r\n    })\r\n  }\r\n\r\n  handlePageChange (event) {\r\n    this.handleSearch(event)\r\n  }\r\n\r\n  handleTabChange (key) {\r\n    this.setState({\r\n      key\r\n    })\r\n  }\r\n\r\n  toggleListItem (item) {\r\n    item = omit(item, 'quantity')\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    let myClonedList = cloneDeep(myRecipeList)\r\n    const foundItem = find(myRecipeList, i => get(i, 'ID') === get(item, 'ID'))\r\n\r\n    if (!!foundItem) {\r\n      myClonedList = reject(myRecipeList, item)\r\n    } else {\r\n      item.quantity = 1\r\n      myClonedList.push(item)\r\n    }\r\n\r\n    saveMyRecipeList(myClonedList)\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      recipeList,\r\n      recipeSearchExact,\r\n      recipeSearchClasses,\r\n      recipeSearchIncludeMaster,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchString,\r\n      searching\r\n    } = this.state\r\n\r\n    const { characterData, craftingClassData, myRecipeList, myShoppingList } = this.props\r\n\r\n    return (\r\n      <div className=\"recipe-list pt3\">\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={key => this.setState({ key })}\r\n        >\r\n          <Tab eventKey=\"calculator\" title=\"Calculations\">\r\n            <div className=\"recipe-tab\">\r\n              <CraftingGatheringCalculator characterData={characterData} craftingClassData={craftingClassData} />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"search\" title=\"Recipe Search\">\r\n            <div className=\"recipe-tab\">\r\n              <RecipeSearch\r\n                handleChange={this.handleFieldUpdate.bind(this)}\r\n                handlePageChange={this.handlePageChange.bind(this)}\r\n                handleReset={this.handleClear.bind(this)}\r\n                handleSubmit={this.handleSearch.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleRecipeIncludeMaster={this.handleToggleRecipeIncludeMaster.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                handleToggleRecipeSearchClass={this.handleToggleRecipeSearchClass.bind(this)}\r\n                handleToggleRecipeSearchExact={this.handleToggleRecipeSearchExact.bind(this)}\r\n                myList={myRecipeList}\r\n                recipeSearchIncludeMaster={recipeSearchIncludeMaster}\r\n                recipeSearchClasses={recipeSearchClasses}\r\n                recipeSearchExact={recipeSearchExact}\r\n                recipeSearchResults={recipeList}\r\n                recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n                recipeSearchString={recipeSearchString}\r\n                searching={searching}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"recipe-list\" title={`My Recipe List (${myRecipeList.length})`}>\r\n            <div className=\"recipe-tab\">\r\n              <MyList\r\n                list={myRecipeList}\r\n                handleClearList={this.handleClearList.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                handleUpdateQuantity={this.handleUpdateQuantity.bind(this)}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"shopping-list\" title={(\r\n            <span>\r\n              Shopping List <Badge variant=\"primary\">Beta</Badge>\r\n            </span>\r\n          )}>\r\n            <div className=\"recipe-tab\">\r\n              <ShoppingList\r\n                shoppingList={myShoppingList}\r\n              />\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  myRecipeList: get(state, 'recipeList.myRecipeList', []),\r\n  myShoppingList: get(state, 'recipeList.myShoppingList', {})\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveMyRecipeList: recipeList => dispatch(recipeActions.saveMyRecipeList(recipeList)),\r\n  clearMyRecipeList: () => dispatch(recipeActions.clearMyRecipeList()),\r\n  createMyShoppingList: recipeList => dispatch(recipeActions.createMyShoppingList(recipeList)),\r\n  clearMyShoppingList: () => dispatch(recipeActions.clearMyShoppingList())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeHelper)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport { get } from 'lodash'\r\nimport * as actions from '../store/local/actions'\r\nimport Navigation from './navigation/Navigation'\r\nimport RecipeHelper from './RecipeHelper'\r\n\r\nconst externalLink = (url, text) => (\r\n  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    {text}\r\n  </a>\r\n)\r\n\r\nclass XivCraftingGatheringHelper extends React.Component {\r\n  componentDidMount () {\r\n    this.props.getLocalClassData()\r\n    this.props.getLocalCharacterData()\r\n  }\r\n\r\n  render () {\r\n    const { characterData, craftingClassData } = this.props\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Navigation\r\n          characterData={characterData}\r\n          craftingClassData={craftingClassData}\r\n        />\r\n        <Container fluid>\r\n          <RecipeHelper characterData={characterData} craftingClassData={craftingClassData} />\r\n          <hr />\r\n          <div className=\"tc text-muted\">\r\n            Created by {externalLink('https://na.finalfantasyxiv.com/lodestone/character/22858010/',\r\n            'Xythyt')} with the help of {externalLink('https://www.xivapi.com', 'XIVAPI')}.\r\n            <br />\r\n            Version {process.env.REACT_APP_VERSION}\r\n          </div>\r\n        </Container>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return ({\r\n    craftingClassData: get(state, 'local.classData'),\r\n    characterData: get(state, 'local.characterData')\r\n  })\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLocalCharacterData: () => dispatch(actions.getLocalCharacterData()),\r\n  getLocalClassData: () => dispatch(actions.getLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(XivCraftingGatheringHelper)\r\n","import { get } from 'lodash'\r\nimport * as LocalStorage from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  classData: LocalStorage.getDefaultCraftingClasses()\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case T.LOCAL_CLASS_DATA_STORE:\r\n    case T.LOCAL_CLASS_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        classData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        characterData: undefined\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_STORE:\r\n    case T.LOCAL_CHARACTER_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CLASS_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        classData: LocalStorage.getDefaultCraftingClasses()\r\n      }\r\n    case T.LODESTONE_CHARACTER_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'payload')\r\n      }\r\n    case T.API_REQUEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as LocalStorageService from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  myRecipeList: LocalStorageService.getMyRecipeList(),\r\n  myShoppingList: LocalStorageService.getMyShoppingList()\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case T.SHOPPING_LIST_CREATE:\r\n      return {\r\n        ...state,\r\n        myShoppingList: action.shoppingList\r\n      }\r\n    case T.SHOPPING_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myShoppingList: {}\r\n      }\r\n    case T.RECIPE_LIST_SAVE:\r\n      return {\r\n        ...state,\r\n        myRecipeList: action.recipeList\r\n      }\r\n    case T.RECIPE_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myRecipeList: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './local/reducer'\r\nimport recipeListReducer from './recipeList/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  local: reducer,\r\n  recipeList: recipeListReducer\r\n})\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n)\r\n","import React from 'react'\r\nimport XivCraftingGatheringHelper from './XivCraftingGatheringHelper'\r\nimport Provider from 'react-redux/es/components/Provider'\r\nimport store from '../store'\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n        <XivCraftingGatheringHelper />\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport './styles/index.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}