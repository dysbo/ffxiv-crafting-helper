{"version":3,"sources":["service/localStorage.js","service/xivApi.js","components/LodestoneModal.jsx","components/CalculationsRow.jsx","components/SortableTableHeader.jsx","components/CalculationsTable.jsx","components/NavigationBar.jsx","components/Calculations.jsx","components/App.js","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","store","key","data","localStorage","setItem","JSON","stringify","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","_map","CRAFTING_CLASSES","c","currentLevel","currentExperience","experiencePerItem","totalExperience","storedData","getItem","craftingClasses","parse","result","forEach","defaultCraftingClass","storedCraftingClass","_find","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","push","retrieveAndUpdateCharacterData","BASE_URL","searchForCharacter","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","get","concat","sent","abrupt","_get","stop","_x","_x2","apply","this","getCharacter","_ref2","_callee2","id","_context2","_x3","INITIAL_STATE","characterId","loading","searchResult","LodestoneModal","state","_cloneDeep","onHide","props","setState","objectSpread","event","preventDefault","_this$state","findCharacters","alert","bind","XivApi","onSelect","characterData","handleHide","_this2","show","_this$state3","react_default","createElement","Modal","Header","closeButton","Title","Body","Form","Group","Label","Control","as","onChange","handleServerSelect","XIV_SERVERS","value","handleNameEntry","Button","onClick","handleSearch","disabled","className","Spinner","animation","variant","Check","label","Name","ID","handleSelect","src","Avatar","alt","width","height","style","marginRight","Pagination","PagePrev","handleChangePage","PageNext","Footer","handleSubmit","React","Component","CalculationsRow","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","min","max","parseInt","prevProps","prevState","snapshot","newState","_forEach","field","_isEqual","_set","keys","fieldName","fieldValue","validatedValue","validateValue","EXP_PER_LEVEL","updateLocalStorage","remainingExperience","progressPercentage","Math","floor","handleFieldUpdate","onBlur","handleLocalStorageUpdate","ceil","ProgressBar","now","SortableTableHeader","_this$props","text","sortField","updateSorting","cursor","index_es","icon","faSort","sortByProgress","CalculationsTable","classData","Table","hover","striped","components_SortableTableHeader","k","components_CalculationsRow","assign","defaultProps","NavigationBar","activateLodestoneModal","characterIsLoaded","clearCharacterData","clearCraftingClassData","filterData","refreshCharacterData","setFilter","Navbar","bg","sticky","Brand","Nav","NavDropdown","title","Item","Divider","_orderBy","cc","Fragment","Link","Character","Calculations","lodestoneModalIsOpen","sortData","direction","criteria","LocalStorageService","removeItem","updateCharacterData","updateStoredDataWithLodestoneData","updateClassData","classJobCategories","craftingClassData","_values","_includes","lodestoneClassData","newData","newClassData","targetData","replacementData","toUpdate","_uniqBy","_concat","newSortData","components_NavigationBar","Container","fluid","components_CalculationsTable","applyFilter","applySorting","setSorting","process","components_LodestoneModal","deactivateLodestoneModal","App","components_Calculations","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.4023126d.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\nimport { applyChanges, diff } from 'diff-json'\nimport {\n  filter as _filter,\n  find as _find,\n  get as _get,\n  includes as _includes,\n  map as _map,\n  set as _set,\n  values as _values\n} from 'lodash'\n\nconst KEYS = {\n  CHARACTER_DATA: 'character',\n  CRAFTING_CLASS_DATA: 'craftingClasses'\n}\n\nfunction store (key, data) {\n  localStorage.setItem(key, JSON.stringify(data))\n}\n\nexport function retrieveAndUpdateCraftingClassData () {\n  // get the default crafting class data\n  const defaultCraftingClasses = getDefaultCraftingClasses()\n\n  // retrieve the stored data from local storage\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\n\n  // if there is no stored data, return the default data\n  if (!storedData) {\n    return defaultCraftingClasses\n  }\n\n  // if there is stored data, convert it to JSON\n  const craftingClasses = JSON.parse(storedData)\n\n  // create a variable for the result\n  const result = []\n\n  // cycle through all \"default\" classes\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\n    // retrieve the matching stored class\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\n\n    // if there is no matching stored class data, add the default for this class to the result\n    if (!storedCraftingClass) {\n      result.push(defaultCraftingClass)\n      return\n    }\n\n    // get any added data to the default data set and apply it to the stored data\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\n    if (classDiffs.length > 0) {\n      applyChanges(storedCraftingClass, classDiffs)\n    }\n\n    // add this record to the result to return\n    result.push(storedCraftingClass)\n  })\n\n  // send back the updated stored data\n  return result\n}\n\nexport function retrieveAndUpdateCharacterData () {\n  // get the stored character data\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\n\n  // if there is no character data, return undefined\n  if (!storedData) {\n    return undefined\n  }\n\n  // if there is, update it\n  // TBD\n\n  // return the character data\n  return JSON.parse(storedData)\n}\n\nexport function storeCharacterData (characterData) {\n  // localStorage.setItem(KEYS.CHARACTER_DATA, JSON.stringify(characterData))\n  store(KEYS.CHARACTER_DATA, characterData)\n}\n\nexport function storeCraftingClassData (craftingClasses) {\n  // localStorage.setItem(KEYS.CRAFTING_CLASS_DATA, JSON.stringify(craftingClasses))\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\n}\n\nexport function clearCharacterData () {\n  if (!!localStorage.getItem(KEYS.CHARACTER_DATA)) {\n    localStorage.removeItem(KEYS.CHARACTER_DATA)\n  }\n}\n\nexport function clearCraftingClassData () {\n  if (!!localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)) {\n    localStorage.removeItem(KEYS.CRAFTING_CLASS_DATA)\n  }\n}\n\nexport function updateCraftingClassDataWithCharacterData () {\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\n\n  return _map(craftingClassData, c => {\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\n    return c\n  })\n}\n\nexport function getDefaultCraftingClasses () {\n  return _map(CRAFTING_CLASSES, c => {\n    c.currentLevel = 1\n    c.currentExperience = 0\n    c.experiencePerItem = 1\n    c.totalExperience = 300\n    return c\n  })\n}\n","import axios from 'axios'\nimport { get as _get } from 'lodash'\n\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\nconst BASE_URL = 'https://xivapi.com'\n\nexport const searchForCharacter = async (server, name, page = 1) => {\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\n  return _get(result, 'data', [])\n}\n\nexport const getCharacter = async id => {\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\n  return _get(result, 'data', {})\n}\n\nexport const getServers = async () => {\n  const result = await axios.get(`${BASE_URL}/servers`)\n  return _get(result, 'data', [])\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { cloneDeep as _cloneDeep, get as _get, map as _map } from 'lodash'\nimport { Button, Form, Modal, Spinner } from 'react-bootstrap'\nimport * as XivApi from '../service/xivApi'\nimport XIV_SERVERS from '../data/xiv-servers'\n\nconst INITIAL_STATE = {\n  characterId: undefined,\n  loading: false,\n  name: undefined,\n  searchResult: undefined,\n  server: undefined\n}\n\nclass LodestoneModal extends React.Component {\n  state = _cloneDeep(INITIAL_STATE)\n\n  handleHide () {\n    const { onHide } = this.props\n    onHide()\n    this.setState({\n      ...INITIAL_STATE\n    })\n  }\n\n  handleSearch (event) {\n    if (event) {\n      event.preventDefault()\n    }\n\n    const { name, server } = this.state\n    if (!name || !server) {\n      alert('Name and Server are required to find your character data.  Please fill out both fields and try again.')\n      return\n    }\n\n    this.setState({\n      loading: true,\n      characterId: undefined\n    }, this.findCharacters)\n  }\n\n  handleSelect (characterId) {\n    this.setState({\n      characterId\n    })\n  }\n\n  handleChangePage (page) {\n    this.setState({\n      loading: true\n    }, this.findCharacters.bind(this, page))\n  }\n\n  handleServerSelect (event) {\n    const server = _get(event, 'target.value', event)\n    this.setState({\n      server\n    })\n  }\n\n  handleNameEntry (event) {\n    const name = _get(event, 'target.value', event)\n    this.setState({\n      name\n    })\n  }\n\n  async findCharacters (page = 1) {\n    const { name, server } = this.state\n    const searchResult = await XivApi.searchForCharacter(server, name, page)\n    this.setState({\n      searchResult,\n      loading: false\n    })\n  }\n\n  async handleSubmit () {\n    const { onSelect } = this.props\n    const { characterId } = this.state\n    const characterData = await XivApi.getCharacter(characterId)\n    onSelect(characterData)\n    this.handleHide()\n  }\n\n  render () {\n    const { show } = this.props\n    const { characterId, loading, name, searchResult, server } = this.state\n    return (\n      <Modal show={show} onHide={this.handleHide.bind(this)}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Import Character Data\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>Server</Form.Label>\n              <Form.Control as=\"select\" onChange={this.handleServerSelect.bind(this)}>\n                <option>Choose a Server</option>\n                {_map(XIV_SERVERS, (server, key) => (\n                  <option key={key} value={server}>{server}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control type=\"text\" onChange={this.handleNameEntry.bind(this)} />\n            </Form.Group>\n            <Button type=\"submit\" onClick={this.handleSearch.bind(this)} disabled={!name || !server}>\n              Search\n            </Button>\n          </Form>\n          <hr />\n          {!!loading && (\n            <div className=\"fullWidth text-center\">\n              <Spinner animation=\"grow\" variant=\"danger\" />\n              <Spinner animation=\"grow\" variant=\"warning\" />\n              <Spinner animation=\"grow\" variant=\"success\" />\n            </div>\n          )}\n          {!loading && !searchResult && (\n            <div className=\"fullWidth text-center\">\n              No results to display.\n            </div>\n          )}\n          {!loading && !!searchResult && (\n            <div>\n              <div className=\"results\">\n                <table className=\"fullWidth\">\n                  <tbody>\n                  {_map(_get(searchResult, 'Results', []), (result, key) => (\n                    <tr key={key}>\n                      <td className=\"text-left\">\n                        <Form.Check\n                          type=\"radio\"\n                          label={result.Name}\n                          name=\"characterData\"\n                          value={result.ID}\n                          onChange={this.handleSelect.bind(this, result.ID)}\n                        />\n                      </td>\n                      <td className=\"text-right\">\n                        <img src={result.Avatar} alt={result.Name} width={36} height={36}\n                             style={{ marginRight: '1em' }} />\n                      </td>\n                    </tr>\n                  ))}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"row\">\n                <div className=\"col text-left\">\n                  {!!searchResult.Pagination && !!searchResult.Pagination.PagePrev && (\n                    <Button variant=\"dark\" onClick={this.handleChangePage.bind(this, searchResult.Pagination.PagePrev)}>\n                      Prev Page\n                    </Button>\n                  )}\n                </div>\n                <div className=\"col text-right\">\n                  {!!searchResult.Pagination && !!searchResult.Pagination.PageNext && (\n                    <Button variant=\"dark\" onClick={this.handleChangePage.bind(this, searchResult.Pagination.PageNext)}>\n                      Next Page\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"danger\"\n            onClick={this.handleHide.bind(this)}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"success\"\n            onClick={this.handleSubmit.bind(this)}\n            disabled={!characterId}\n          >\n            Select\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nLodestoneModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired\n}\n\nexport default LodestoneModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { forEach as _forEach, get as _get, isEqual as _isEqual, set as _set } from 'lodash'\nimport { Form, ProgressBar } from 'react-bootstrap'\nimport EXP_PER_LEVEL from '../data/exp-per-level'\n\nclass CalculationsRow extends React.Component {\n  static validateValue (value, min, max) {\n    if (!value) return 0\n\n    min = parseInt(min)\n    max = parseInt(max)\n    value = parseInt(value)\n\n    if (value < min) return min\n    if (value > max) return max\n    return value\n  }\n\n  constructor (props) {\n    super(props)\n\n    const { currentLevel, currentExperience, experiencePerItem, totalExperience } = props\n\n    this.state = {\n      currentLevel,\n      currentExperience,\n      experiencePerItem,\n      totalExperience\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    const fields = ['currentLevel', 'currentExperience', 'experiencePerItem', 'totalExperience']\n    const newState = {}\n\n    _forEach(fields, field => {\n      if (!_isEqual(this.props[field], prevProps[field])) {\n        _set(newState, field, this.props[field])\n      }\n    })\n\n    if (Object.keys(newState).length > 0) {\n      this.setState({\n        ...newState\n      })\n    }\n  }\n\n  handleFieldUpdate (event) {\n    const fieldName = _get(event, 'target.name')\n    const fieldValue = _get(event, 'target.value')\n    const validatedValue = CalculationsRow.validateValue(fieldValue,\n      _get(event, 'target.min'), _get(event, 'target.max'))\n\n    const newState = {}\n    _set(newState, fieldName, validatedValue)\n\n    if (fieldName === 'currentLevel') {\n      _set(newState, 'totalExperience', EXP_PER_LEVEL[validatedValue])\n    }\n\n    this.setState({\n      ...newState\n    })\n  }\n\n  handleLocalStorageUpdate (event) {\n    const { updateLocalStorage } = this.props\n    const fieldName = _get(event, 'target.name')\n    const data = {}\n    data[fieldName] = this.state[fieldName]\n    if (fieldName === 'currentLevel') {\n      _set(data, 'totalExperience', _get(this.state, 'totalExperience'))\n    }\n    updateLocalStorage(data)\n  }\n\n  render () {\n    const { name } = this.props\n    const { currentLevel, currentExperience, experiencePerItem, totalExperience } = this.state\n    const remainingExperience = totalExperience - currentExperience\n    const progressPercentage = totalExperience === 0 ? 0 : Math.floor((currentExperience / totalExperience) * 100)\n    return (\n      <tr className=\"calculations\">\n        <td>\n          {name}\n        </td>\n        <td>\n          <Form.Control\n            type=\"number\"\n            min={1}\n            max={69}\n            value={currentLevel}\n            name=\"currentLevel\"\n            onChange={this.handleFieldUpdate.bind(this)}\n            onBlur={this.handleLocalStorageUpdate.bind(this)}\n          />\n        </td>\n        <td>\n          <Form.Control\n            type=\"number\"\n            min={0}\n            max={totalExperience}\n            value={currentExperience}\n            name=\"currentExperience\"\n            onChange={this.handleFieldUpdate.bind(this)}\n            onBlur={this.handleLocalStorageUpdate.bind(this)}\n          />\n        </td>\n        <td>\n          {totalExperience}\n        </td>\n        <td>\n          {remainingExperience}\n        </td>\n        <td>\n          <Form.Control\n            type=\"number\"\n            min={1}\n            max={totalExperience}\n            value={experiencePerItem}\n            name=\"experiencePerItem\"\n            onChange={this.handleFieldUpdate.bind(this)}\n            onBlur={this.handleLocalStorageUpdate.bind(this)}\n          />\n        </td>\n        <td>\n          {Math.max(Math.ceil(remainingExperience / experiencePerItem), 0)}\n        </td>\n        <td>\n          <ProgressBar\n            now={progressPercentage}\n            label={`${currentExperience} / ${totalExperience} (${progressPercentage}%)`}\n          />\n        </td>\n      </tr>\n    )\n  }\n}\n\nCalculationsRow.propTypes = {\n  currentLevel: PropTypes.number.isRequired,\n  currentExperience: PropTypes.number.isRequired,\n  experiencePerItem: PropTypes.number.isRequired,\n  totalExperience: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  abbreviation: PropTypes.string.isRequired,\n  updateLocalStorage: PropTypes.func.isRequired\n}\n\nexport default CalculationsRow\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\n\nclass SortableTableHeader extends React.Component {\n  render () {\n    const { text, sortField, updateSorting } = this.props\n    return (\n      <th onClick={updateSorting.bind(this, sortField)}\n        style={{ cursor: 'pointer' }}\n      >\n        {text}\n        <FontAwesomeIcon\n          className=\"margin-left\"\n          icon={faSort}\n        />\n      </th>\n    )\n  }\n}\n\nSortableTableHeader.propTypes = {\n  text: PropTypes.string.isRequired,\n  sortField: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  updateSorting: PropTypes.func.isRequired\n}\n\nexport default SortableTableHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { map as _map } from 'lodash'\nimport { Table } from 'react-bootstrap'\nimport CalculationsRow from './CalculationsRow'\nimport SortableTableHeader from './SortableTableHeader'\n\nfunction sortByProgress (c) {\n  return !c.totalExperience ? 0 : c.currentExperience / c.totalExperience\n}\n\nclass CalculationsTable extends React.Component {\n  render () {\n    const { classData, updateLocalStorage, updateSorting } = this.props\n    return (\n      <div>\n        <Table hover striped className=\"calculations\">\n          <thead>\n          <tr>\n            <SortableTableHeader text=\"Class\" sortField=\"name\" updateSorting={updateSorting} />\n            <SortableTableHeader text=\"Level\" sortField=\"currentLevel\" updateSorting={updateSorting} />\n            <th>Current Exp.</th>\n            <th>Required Exp.</th>\n            <th>Remaining Exp.</th>\n            <th>Exp. Per Item</th>\n            <th>Remaining Items</th>\n            <SortableTableHeader text=\"Progress\" sortField={sortByProgress} updateSorting={updateSorting} />\n          </tr>\n          </thead>\n          <tbody>\n          {!!classData && _map(classData, (c, k) => (\n            <CalculationsRow key={k} {...c} updateLocalStorage={updateLocalStorage.bind(this, c.abbreviation)} />\n          ))}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nCalculationsTable.propTypes = {\n  classData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  updateLocalStorage: PropTypes.func.isRequired,\n  updateSorting: PropTypes.func.isRequired\n}\n\nCalculationsTable.defaultProps = {\n  classData: []\n}\n\nexport default CalculationsTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport { map as _map, orderBy as _orderBy } from 'lodash'\nimport CRAFTING_CLASSES from '../data/crafting-classes'\n\nclass NavigationBar extends React.Component {\n  render () {\n    const {\n      activateLodestoneModal,\n      characterData,\n      characterIsLoaded,\n      clearCharacterData,\n      clearCraftingClassData,\n      filterData,\n      refreshCharacterData,\n      setFilter\n    } = this.props\n\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n        <Navbar.Brand>\n          FFXIV Crafting & Gathering Helper\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <NavDropdown title={`Showing ${filterData.label}`}>\n            <NavDropdown.Item onClick={setFilter.bind(this, 'All', undefined)}>\n              Show All\n            </NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item onClick={setFilter.bind(this, 'Crafting Classes', c => c.type === 'crafting')}>\n              Crafting Classes\n            </NavDropdown.Item>\n            <NavDropdown.Item onClick={setFilter.bind(this, 'Gathering Classes', c => c.type === 'gathering')}>\n              Gathering Classes\n            </NavDropdown.Item>\n            <NavDropdown.Divider />\n            {_map(_orderBy(CRAFTING_CLASSES, 'name'), (cc, key) => (\n              <NavDropdown.Item\n                key={key}\n                onClick={setFilter.bind(this, cc.name, c => cc.abbreviation === c.abbreviation)}\n              >\n                {cc.name}\n              </NavDropdown.Item>\n            ))}\n          </NavDropdown>\n        </Nav>\n        <Nav>\n          {!characterIsLoaded && (\n            <React.Fragment>\n              <Nav.Link onClick={activateLodestoneModal.bind(this)}>\n                Import Character Data\n              </Nav.Link>\n              <Nav.Link onClick={clearCraftingClassData.bind(this)}>\n                Clear Crafting Class Data\n              </Nav.Link>\n            </React.Fragment>\n          )}\n          {characterIsLoaded && (\n            <NavDropdown\n              title={(\n                <span>\n                    {characterData.Character.Name}\n                  <img\n                    src={characterData.Character.Avatar}\n                    alt={characterData.Character.Name}\n                    className=\"character-icon\"\n                  />\n                    </span>)}\n              className=\"dropleft\"\n            >\n              <NavDropdown.Item onClick={refreshCharacterData.bind(this)}>\n                Refresh Character Class Data\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={activateLodestoneModal.bind(this)}>\n                Import Different Character Data\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={clearCharacterData.bind(this)}>\n                Clear Character Data\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={clearCraftingClassData.bind(this)}>\n                Clear Crafting Class Data\n              </NavDropdown.Item>\n            </NavDropdown>\n          )}\n        </Nav>\n      </Navbar>\n    )\n  }\n}\n\nNavigationBar.propTypes = {\n  activateLodestoneModal: PropTypes.func.isRequired,\n  characterData: PropTypes.shape({\n    Character: PropTypes.shape({\n      Avatar: PropTypes.string.isRequired,\n      Name: PropTypes.string.isRequired\n    })\n  }),\n  characterIsLoaded: PropTypes.bool.isRequired,\n  clearCharacterData: PropTypes.func.isRequired,\n  clearCraftingClassData: PropTypes.func.isRequired,\n  filterData: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    criteria: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n  }).isRequired,\n  refreshCharacterData: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired\n}\n\nexport default NavigationBar\n","import React from 'react'\nimport {\n  cloneDeep as _cloneDeep,\n  concat as _concat,\n  filter as _filter,\n  find as _find,\n  get as _get,\n  isEqual as _isEqual,\n  orderBy as _orderBy,\n  uniqBy as _uniqBy\n} from 'lodash'\nimport { Container } from 'react-bootstrap'\nimport * as LocalStorageService from '../service/localStorage'\nimport * as XivApi from '../service/xivApi'\nimport LodestoneModal from './LodestoneModal'\nimport CalculationsTable from './CalculationsTable'\nimport NavigationBar from './NavigationBar'\n\nclass Calculations extends React.Component {\n  state = {\n    lodestoneModalIsOpen: false,\n    sortData: {\n      field: 'name',\n      direction: 'asc'\n    },\n    filterData: {\n      label: 'All',\n      criteria: undefined\n    }\n  }\n\n  componentDidMount () {\n    const characterData = LocalStorageService.retrieveAndUpdateCharacterData()\n    const classData = LocalStorageService.retrieveAndUpdateCraftingClassData()\n\n    this.setState({\n      characterData,\n      classData\n    })\n  }\n\n  activateLodestoneModal () {\n    this.setState({\n      lodestoneModalIsOpen: true\n    })\n  }\n\n  deactivateLodestoneModal () {\n    this.setState({\n      lodestoneModalIsOpen: false\n    })\n  }\n\n  clearCharacterData () {\n    LocalStorageService.clearCharacterData()\n    this.setState({\n      characterData: undefined\n    })\n  }\n\n  clearCraftingClassData () {\n    LocalStorageService.clearCraftingClassData()\n    this.setState({\n      classData: LocalStorageService.retrieveAndUpdateCraftingClassData()\n    })\n  }\n\n  async refreshCharacterData () {\n    const characterId = _get(this.state, 'characterData.Character.ID')\n    const characterData = await XivApi.getCharacter(characterId)\n    this.updateCharacterData(characterData)\n    // this.updateStoredDataWithLodestoneData()\n  }\n\n  updateCharacterData (characterData) {\n    LocalStorageService.storeCharacterData(characterData)\n    this.setState({\n      characterData\n    }, this.updateStoredDataWithLodestoneData.bind(this))\n  }\n\n  updateClassData (classData) {\n    LocalStorageService.storeCraftingClassData(classData)\n    this.setState({\n      classData\n    })\n  }\n\n  updateStoredDataWithLodestoneData () {\n    this.updateClassData(LocalStorageService.updateCraftingClassDataWithCharacterData())\n  }\n\n  updateLocalStorage (abbreviation, newData) {\n    const { classData } = this.state\n    const newClassData = _cloneDeep(classData)\n    const targetData = _find(newClassData, c => c.abbreviation === abbreviation)\n    if (targetData) {\n      const replacementData = {\n        ...targetData,\n        ...newData\n      }\n\n      const toUpdate = _uniqBy(_concat(replacementData, newClassData), c => c.abbreviation)\n\n      this.updateClassData(toUpdate)\n    }\n  }\n\n  applySorting (classData) {\n    const { sortData } = this.state\n    return _orderBy(_cloneDeep(classData), sortData.field, sortData.direction)\n  }\n\n  setSorting (field) {\n    const { sortData } = this.state\n    const newSortData = {\n      ...sortData\n    }\n\n    if (_isEqual(JSON.stringify(sortData.field), JSON.stringify(field))) {\n      newSortData.direction = sortData.direction === 'asc' ? 'desc' : 'asc'\n    } else {\n      newSortData.field = field\n      newSortData.direction = 'asc'\n    }\n\n    this.setState({\n      sortData: newSortData\n    })\n  }\n\n  applyFilter (classData) {\n    const { filterData } = this.state\n    return _filter(_cloneDeep(classData), filterData.criteria)\n  }\n\n  setFilter (label, criteria) {\n    this.setState({\n      filterData: {\n        label,\n        criteria\n      }\n    })\n  }\n\n  render () {\n    const { characterData, classData, filterData, lodestoneModalIsOpen } = this.state\n    const characterIsLoaded = !!characterData && !!characterData.Character\n    return (\n      <React.Fragment>\n        <NavigationBar\n          activateLodestoneModal={this.activateLodestoneModal.bind(this)}\n          characterData={characterData}\n          characterIsLoaded={characterIsLoaded}\n          clearCharacterData={this.clearCharacterData.bind(this)}\n          clearCraftingClassData={this.clearCraftingClassData.bind(this)}\n          filterData={filterData}\n          refreshCharacterData={this.refreshCharacterData.bind(this)}\n          setFilter={this.setFilter.bind(this)}\n        />\n        <Container fluid>\n          {!characterIsLoaded && !!characterData && (\n            <div className=\"alert alert-info\">\n              Your character is being imported for the first time. Congratulations!<br />\n              Please wait a few minutes and try your import again.\n            </div>\n          )}\n          <CalculationsTable\n            classData={this.applyFilter(this.applySorting(classData))}\n            updateLocalStorage={this.updateLocalStorage.bind(this)}\n            updateSorting={this.setSorting.bind(this)}\n          />\n          <hr />\n          <div className=\"text-center text-muted\">\n            Version {process.env.REACT_APP_VERSION}\n          </div>\n        </Container>\n        <LodestoneModal\n          show={lodestoneModalIsOpen}\n          onHide={this.deactivateLodestoneModal.bind(this)}\n          onSelect={this.updateCharacterData.bind(this)}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Calculations\n","import React from 'react'\nimport Calculations from './Calculations'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Calculations />\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}