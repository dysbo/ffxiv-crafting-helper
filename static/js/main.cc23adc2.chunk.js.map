{"version":3,"sources":["service/localStorage.js","service/xivApi.js","components/LodestoneModal.jsx","components/CalculationsRow.jsx","components/SortableTableHeader.jsx","components/CalculationsTable.jsx","components/NavigationBar.jsx","components/ImportAlert.jsx","components/Calculations.jsx","components/App.js","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","store","key","data","localStorage","setItem","JSON","stringify","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","_map","CRAFTING_CLASSES","c","currentLevel","currentExperience","experiencePerItem","totalExperience","storedData","getItem","craftingClasses","parse","result","forEach","defaultCraftingClass","storedCraftingClass","_find","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","push","retrieveAndUpdateCharacterData","BASE_URL","searchForCharacter","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","get","concat","sent","abrupt","_get","stop","_x","_x2","apply","this","getCharacter","_ref2","_callee2","id","_context2","_set","_x3","INITIAL_STATE","characterId","loading","searchResult","LodestoneModal","state","_cloneDeep","onHide","props","setState","objectSpread","event","preventDefault","_this$state","findCharacters","alert","bind","XivApi","onSelect","characterData","handleHide","_this2","show","_this$state3","react_default","createElement","Modal","Header","closeButton","Title","Body","Form","Group","Label","Control","as","onChange","handleServerSelect","XIV_SERVERS","value","handleNameEntry","Button","onClick","handleSearch","disabled","className","Spinner","animation","variant","Check","label","Name","ID","handleSelect","src","Avatar","alt","width","height","style","marginRight","Pagination","PagePrev","handleChangePage","PageNext","Footer","handleSubmit","React","Component","CalculationsRow","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","min","max","parseInt","prevProps","prevState","snapshot","newState","_forEach","field","_isEqual","keys","fieldName","fieldValue","validatedValue","validateValue","EXP_PER_LEVEL","updateLocalStorage","levelingGuide","matchedPage","pages","p","maxLevel","minLevel","url","remainingExperience","progressPercentage","Math","floor","popover","Popover","href","getLevelingGuidePageUrl","target","rel","OverlayTrigger","trigger","placement","overlay","rootClose","index_es","icon","faIcon","handleFieldUpdate","onBlur","handleLocalStorageUpdate","ceil","ProgressBar","now","SortableTableHeader","_this$props","text","sortField","updateSorting","cursor","faSort","sortByProgress","CalculationsTable","classData","Table","hover","striped","components_SortableTableHeader","k","components_CalculationsRow","assign","defaultProps","NavigationBar","activateLodestoneModal","characterIsLoaded","clearCharacterData","clearCraftingClassData","filterData","refreshCharacterData","setFilter","Navbar","bg","sticky","Brand","Nav","NavDropdown","title","Item","Divider","_orderBy","cc","Fragment","Link","Character","ImportAlert","dayjs","extend","isSameOrBefore","Calculations","lodestoneModalIsOpen","sortData","direction","criteria","LocalStorageService","removeItem","parseDate","parseDateTime","sixHoursAgo","add","isBefore","format","updateCharacterData","updateStoredDataWithLodestoneData","updateClassData","classJobCategories","craftingClassData","_values","_includes","lodestoneClassData","newData","newClassData","targetData","replacementData","toUpdate","_uniqBy","_concat","newSortData","components_NavigationBar","Container","fluid","components_ImportAlert","components_CalculationsTable","applyFilter","applySorting","setSorting","process","components_LodestoneModal","deactivateLodestoneModal","App","components_Calculations","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.cc23adc2.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\nimport { applyChanges, diff } from 'diff-json'\nimport {\n  filter as _filter,\n  find as _find,\n  get as _get,\n  includes as _includes,\n  map as _map,\n  set as _set,\n  values as _values\n} from 'lodash'\n\nconst KEYS = {\n  CHARACTER_DATA: 'character',\n  CRAFTING_CLASS_DATA: 'craftingClasses'\n}\n\nfunction store (key, data) {\n  localStorage.setItem(key, JSON.stringify(data))\n}\n\nexport function retrieveAndUpdateCraftingClassData () {\n  // get the default crafting class data\n  const defaultCraftingClasses = getDefaultCraftingClasses()\n\n  // retrieve the stored data from local storage\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\n\n  // if there is no stored data, return the default data\n  if (!storedData) {\n    return defaultCraftingClasses\n  }\n\n  // if there is stored data, convert it to JSON\n  const craftingClasses = JSON.parse(storedData)\n\n  // create a variable for the result\n  const result = []\n\n  // cycle through all \"default\" classes\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\n    // retrieve the matching stored class\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\n\n    // if there is no matching stored class data, add the default for this class to the result\n    if (!storedCraftingClass) {\n      result.push(defaultCraftingClass)\n      return\n    }\n\n    // get any added data to the default data set and apply it to the stored data\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\n    if (classDiffs.length > 0) {\n      applyChanges(storedCraftingClass, classDiffs)\n    }\n\n    // add this record to the result to return\n    result.push(storedCraftingClass)\n  })\n\n  // send back the updated stored data\n  return result\n}\n\nexport function retrieveAndUpdateCharacterData () {\n  // get the stored character data\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\n\n  // if there is no character data, return undefined\n  if (!storedData) {\n    return undefined\n  }\n\n  // if there is, update it\n  // TBD\n\n  // return the character data\n  return JSON.parse(storedData)\n}\n\nexport function storeCharacterData (characterData) {\n  // localStorage.setItem(KEYS.CHARACTER_DATA, JSON.stringify(characterData))\n  store(KEYS.CHARACTER_DATA, characterData)\n}\n\nexport function storeCraftingClassData (craftingClasses) {\n  // localStorage.setItem(KEYS.CRAFTING_CLASS_DATA, JSON.stringify(craftingClasses))\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\n}\n\nexport function clearCharacterData () {\n  if (!!localStorage.getItem(KEYS.CHARACTER_DATA)) {\n    localStorage.removeItem(KEYS.CHARACTER_DATA)\n  }\n}\n\nexport function clearCraftingClassData () {\n  if (!!localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)) {\n    localStorage.removeItem(KEYS.CRAFTING_CLASS_DATA)\n  }\n}\n\nexport function updateCraftingClassDataWithCharacterData () {\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\n\n  return _map(craftingClassData, c => {\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\n    return c\n  })\n}\n\nexport function getDefaultCraftingClasses () {\n  return _map(CRAFTING_CLASSES, c => {\n    c.currentLevel = 1\n    c.currentExperience = 0\n    c.experiencePerItem = 1\n    c.totalExperience = 300\n    return c\n  })\n}\n","import axios from 'axios'\nimport { get as _get, set as _set } from 'lodash'\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\n\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\nconst BASE_URL = 'https://xivapi.com'\n\nexport const searchForCharacter = async (server, name, page = 1) => {\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\n  return _get(result, 'data', [])\n}\n\nexport const getCharacter = async id => {\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\n  _set(result, 'data.characterId', id)\n  return _get(result, 'data', {})\n}\n\nexport const getServers = async () => {\n  const result = await axios.get(`${BASE_URL}/servers`)\n  return _get(result, 'data', [])\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { cloneDeep as _cloneDeep, get as _get, map as _map } from 'lodash'\nimport { Button, Form, Modal, Spinner } from 'react-bootstrap'\nimport * as XivApi from '../service/xivApi'\nimport XIV_SERVERS from '../data/xiv-servers'\n\nconst INITIAL_STATE = {\n  characterId: undefined,\n  loading: false,\n  name: undefined,\n  searchResult: undefined,\n  server: undefined\n}\n\nclass LodestoneModal extends React.Component {\n  state = _cloneDeep(INITIAL_STATE)\n\n  handleHide () {\n    const { onHide } = this.props\n    onHide()\n    this.setState({\n      ...INITIAL_STATE\n    })\n  }\n\n  handleSearch (event) {\n    if (event) {\n      event.preventDefault()\n    }\n\n    const { name, server } = this.state\n    if (!name || !server) {\n      alert('Name and Server are required to find your character data.  Please fill out both fields and try again.')\n      return\n    }\n\n    this.setState({\n      loading: true,\n      characterId: undefined\n    }, this.findCharacters)\n  }\n\n  handleSelect (characterId) {\n    this.setState({\n      characterId\n    })\n  }\n\n  handleChangePage (page) {\n    this.setState({\n      loading: true\n    }, this.findCharacters.bind(this, page))\n  }\n\n  handleServerSelect (event) {\n    const server = _get(event, 'target.value', event)\n    this.setState({\n      server\n    })\n  }\n\n  handleNameEntry (event) {\n    const name = _get(event, 'target.value', event)\n    this.setState({\n      name\n    })\n  }\n\n  async findCharacters (page = 1) {\n    const { name, server } = this.state\n    const searchResult = await XivApi.searchForCharacter(server, name, page)\n    this.setState({\n      searchResult,\n      loading: false\n    })\n  }\n\n  async handleSubmit () {\n    const { onSelect } = this.props\n    const { characterId } = this.state\n    const characterData = await XivApi.getCharacter(characterId)\n    onSelect(characterData)\n    this.handleHide()\n  }\n\n  render () {\n    const { show } = this.props\n    const { characterId, loading, name, searchResult, server } = this.state\n    return (\n      <Modal show={show} onHide={this.handleHide.bind(this)}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Import Character Data\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>Server</Form.Label>\n              <Form.Control as=\"select\" onChange={this.handleServerSelect.bind(this)}>\n                <option>Choose a Server</option>\n                {_map(XIV_SERVERS, (server, key) => (\n                  <option key={key} value={server}>{server}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control type=\"text\" onChange={this.handleNameEntry.bind(this)} />\n            </Form.Group>\n            <Button type=\"submit\" onClick={this.handleSearch.bind(this)} disabled={!name || !server}>\n              Search\n            </Button>\n          </Form>\n          <hr />\n          {!!loading && (\n            <div className=\"fullWidth text-center\">\n              <Spinner animation=\"grow\" variant=\"danger\" />\n              <Spinner animation=\"grow\" variant=\"warning\" />\n              <Spinner animation=\"grow\" variant=\"success\" />\n            </div>\n          )}\n          {!loading && !searchResult && (\n            <div className=\"fullWidth text-center\">\n              No results to display.\n            </div>\n          )}\n          {!loading && !!searchResult && (\n            <div>\n              <div className=\"results\">\n                <table className=\"fullWidth\">\n                  <tbody>\n                  {_map(_get(searchResult, 'Results', []), (result, key) => (\n                    <tr key={key}>\n                      <td className=\"text-left\">\n                        <Form.Check\n                          type=\"radio\"\n                          label={result.Name}\n                          name=\"characterData\"\n                          value={result.ID}\n                          onChange={this.handleSelect.bind(this, result.ID)}\n                        />\n                      </td>\n                      <td className=\"text-right\">\n                        <img src={result.Avatar} alt={result.Name} width={36} height={36}\n                             style={{ marginRight: '1em' }} />\n                      </td>\n                    </tr>\n                  ))}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"row\">\n                <div className=\"col text-left\">\n                  {!!searchResult.Pagination && !!searchResult.Pagination.PagePrev && (\n                    <Button variant=\"dark\" onClick={this.handleChangePage.bind(this, searchResult.Pagination.PagePrev)}>\n                      Prev Page\n                    </Button>\n                  )}\n                </div>\n                <div className=\"col text-right\">\n                  {!!searchResult.Pagination && !!searchResult.Pagination.PageNext && (\n                    <Button variant=\"dark\" onClick={this.handleChangePage.bind(this, searchResult.Pagination.PageNext)}>\n                      Next Page\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"danger\"\n            onClick={this.handleHide.bind(this)}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"success\"\n            onClick={this.handleSubmit.bind(this)}\n            disabled={!characterId}\n          >\n            Select\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nLodestoneModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired\n}\n\nexport default LodestoneModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { find as _find, forEach as _forEach, get as _get, isEqual as _isEqual, set as _set } from 'lodash'\nimport { Form, OverlayTrigger, Popover, ProgressBar} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\nimport EXP_PER_LEVEL from '../data/exp-per-level'\n\nclass CalculationsRow extends React.Component {\n  static validateValue (value, min, max) {\n    if (!value) return 0\n\n    min = parseInt(min)\n    max = parseInt(max)\n    value = parseInt(value)\n\n    if (value < min) return min\n    if (value > max) return max\n    return value\n  }\n\n  constructor (props) {\n    super(props)\n\n    const { currentLevel, currentExperience, experiencePerItem, totalExperience } = props\n\n    this.state = {\n      currentLevel,\n      currentExperience,\n      experiencePerItem,\n      totalExperience\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    const fields = ['currentLevel', 'currentExperience', 'experiencePerItem', 'totalExperience']\n    const newState = {}\n\n    _forEach(fields, field => {\n      if (!_isEqual(this.props[field], prevProps[field])) {\n        _set(newState, field, this.props[field])\n      }\n    })\n\n    if (Object.keys(newState).length > 0) {\n      this.setState({\n        ...newState\n      })\n    }\n  }\n\n  handleFieldUpdate (event) {\n    const fieldName = _get(event, 'target.name')\n    const fieldValue = _get(event, 'target.value')\n    const validatedValue = CalculationsRow.validateValue(fieldValue,\n      _get(event, 'target.min'), _get(event, 'target.max'))\n\n    const newState = {}\n    _set(newState, fieldName, validatedValue)\n\n    if (fieldName === 'currentLevel') {\n      _set(newState, 'totalExperience', EXP_PER_LEVEL[validatedValue])\n    }\n\n    this.setState({\n      ...newState\n    })\n  }\n\n  handleLocalStorageUpdate (event) {\n    const { updateLocalStorage } = this.props\n    const fieldName = _get(event, 'target.name')\n    const data = {}\n    data[fieldName] = this.state[fieldName]\n    if (fieldName === 'currentLevel') {\n      _set(data, 'totalExperience', _get(this.state, 'totalExperience'))\n    }\n    updateLocalStorage(data)\n  }\n\n  getLevelingGuidePageUrl () {\n    const { levelingGuide } = this.props\n    const { currentLevel } = this.state\n\n    const matchedPage = _find(levelingGuide.pages, p => {\n      const { maxLevel, minLevel } = p\n\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\n        return true\n      }\n    })\n\n    return !!matchedPage ? `${levelingGuide.url}/${matchedPage.page}/` : levelingGuide.url\n  }\n\n  render () {\n    const { name } = this.props\n    const { currentLevel, currentExperience, experiencePerItem, totalExperience } = this.state\n    const remainingExperience = totalExperience - currentExperience\n    const progressPercentage = totalExperience === 0 ? 0 : Math.floor((currentExperience / totalExperience) * 100)\n\n    const popover = (\n      <Popover id={`links-${name}`}>\n        <a href={this.getLevelingGuidePageUrl()} target=\"_blank\" rel=\"noopener noreferrer\">\n          Leveling Guide\n        </a>\n      </Popover>\n    )\n\n    return (\n      <tr className=\"calculations\">\n        <td>\n          <div className=\"flex justify-between items-center\">\n            <span>{name}</span>\n            <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\n              <FontAwesomeIcon icon={faIcon} className=\"text-primary pointer\" />\n            </OverlayTrigger>\n          </div>\n        </td>\n        <td>\n          <Form.Control\n            type=\"number\"\n            min={1}\n            max={69}\n            value={currentLevel}\n            name=\"currentLevel\"\n            onChange={this.handleFieldUpdate.bind(this)}\n            onBlur={this.handleLocalStorageUpdate.bind(this)}\n          />\n        </td>\n        <td>\n          <Form.Control\n            type=\"number\"\n            min={0}\n            max={totalExperience}\n            value={currentExperience}\n            name=\"currentExperience\"\n            onChange={this.handleFieldUpdate.bind(this)}\n            onBlur={this.handleLocalStorageUpdate.bind(this)}\n          />\n        </td>\n        <td>\n          {totalExperience}\n        </td>\n        <td>\n          {remainingExperience}\n        </td>\n        <td>\n          <Form.Control\n            type=\"number\"\n            min={1}\n            max={totalExperience}\n            value={experiencePerItem}\n            name=\"experiencePerItem\"\n            onChange={this.handleFieldUpdate.bind(this)}\n            onBlur={this.handleLocalStorageUpdate.bind(this)}\n          />\n        </td>\n        <td>\n          {Math.max(Math.ceil(remainingExperience / experiencePerItem), 0)}\n        </td>\n        <td>\n          <ProgressBar\n            now={progressPercentage}\n            label={`${currentExperience} / ${totalExperience} (${progressPercentage}%)`}\n          />\n        </td>\n      </tr>\n    )\n  }\n}\n\nCalculationsRow.propTypes = {\n  currentLevel: PropTypes.number.isRequired,\n  currentExperience: PropTypes.number.isRequired,\n  experiencePerItem: PropTypes.number.isRequired,\n  totalExperience: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  abbreviation: PropTypes.string.isRequired,\n  updateLocalStorage: PropTypes.func.isRequired,\n  levelingGuide: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    pages: PropTypes.arrayOf(PropTypes.shape({\n      page: PropTypes.number.isRequired,\n      minLevel: PropTypes.number.isRequired,\n      maxLevel: PropTypes.number.isRequired\n    })).isRequired\n  })\n}\n\nexport default CalculationsRow\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\n\nclass SortableTableHeader extends React.Component {\n  render () {\n    const { className, text, sortField, updateSorting } = this.props\n    return (\n      <th className={className} onClick={updateSorting.bind(this, sortField)}\n        style={{ cursor: 'pointer' }}\n      >\n        {text}\n        <FontAwesomeIcon\n          className=\"margin-left\"\n          icon={faSort}\n        />\n      </th>\n    )\n  }\n}\n\nSortableTableHeader.propTypes = {\n  text: PropTypes.string.isRequired,\n  sortField: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  updateSorting: PropTypes.func.isRequired\n}\n\nexport default SortableTableHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { map as _map } from 'lodash'\nimport { Table } from 'react-bootstrap'\nimport CalculationsRow from './CalculationsRow'\nimport SortableTableHeader from './SortableTableHeader'\n\nfunction sortByProgress (c) {\n  return !c.totalExperience ? 0 : c.currentExperience / c.totalExperience\n}\n\nclass CalculationsTable extends React.Component {\n  render () {\n    const { classData, updateLocalStorage, updateSorting } = this.props\n    return (\n      <div>\n        <Table hover striped className=\"calculations\">\n          <thead>\n          <tr>\n            <SortableTableHeader text=\"Class\" sortField=\"name\" updateSorting={updateSorting} />\n            <SortableTableHeader text=\"Level\" sortField=\"currentLevel\" updateSorting={updateSorting} className=\"numeric-entry\" />\n            <th className=\"numeric-entry\">Current Exp.</th>\n            <th>Required Exp.</th>\n            <th>Remaining Exp.</th>\n            <th className=\"numeric-entry\">Exp. Per Item</th>\n            <th>Remaining Items</th>\n            <SortableTableHeader text=\"Progress\" sortField={sortByProgress} updateSorting={updateSorting} />\n          </tr>\n          </thead>\n          <tbody>\n          {!!classData && _map(classData, (c, k) => (\n            <CalculationsRow key={k} {...c} updateLocalStorage={updateLocalStorage.bind(this, c.abbreviation)} />\n          ))}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nCalculationsTable.propTypes = {\n  classData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  updateLocalStorage: PropTypes.func.isRequired,\n  updateSorting: PropTypes.func.isRequired\n}\n\nCalculationsTable.defaultProps = {\n  classData: []\n}\n\nexport default CalculationsTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport { map as _map, orderBy as _orderBy } from 'lodash'\nimport CRAFTING_CLASSES from '../data/crafting-classes'\n\nclass NavigationBar extends React.Component {\n  render () {\n    const {\n      activateLodestoneModal,\n      characterData,\n      characterIsLoaded,\n      clearCharacterData,\n      clearCraftingClassData,\n      filterData,\n      refreshCharacterData,\n      setFilter\n    } = this.props\n\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n        <Navbar.Brand>\n          FFXIV Crafting & Gathering Helper\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <NavDropdown title={`Showing ${filterData.label}`}>\n            <NavDropdown.Item onClick={setFilter.bind(this, 'All', undefined)}>\n              Show All\n            </NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item onClick={setFilter.bind(this, 'Crafting Classes', c => c.type === 'crafting')}>\n              Crafting Classes\n            </NavDropdown.Item>\n            <NavDropdown.Item onClick={setFilter.bind(this, 'Gathering Classes', c => c.type === 'gathering')}>\n              Gathering Classes\n            </NavDropdown.Item>\n            <NavDropdown.Divider />\n            {_map(_orderBy(CRAFTING_CLASSES, 'name'), (cc, key) => (\n              <NavDropdown.Item\n                key={key}\n                onClick={setFilter.bind(this, cc.name, c => cc.abbreviation === c.abbreviation)}\n              >\n                {cc.name}\n              </NavDropdown.Item>\n            ))}\n          </NavDropdown>\n        </Nav>\n        <Nav>\n          {!characterIsLoaded && (\n            <React.Fragment>\n              <Nav.Link onClick={activateLodestoneModal.bind(this)}>\n                Import Character Data\n              </Nav.Link>\n              <Nav.Link onClick={clearCraftingClassData.bind(this)}>\n                Clear Crafting Class Data\n              </Nav.Link>\n            </React.Fragment>\n          )}\n          {characterIsLoaded && (\n            <NavDropdown\n              title={(\n                <span>\n                    {characterData.Character.Name}\n                  <img\n                    src={characterData.Character.Avatar}\n                    alt={characterData.Character.Name}\n                    className=\"character-icon\"\n                  />\n                    </span>)}\n              className=\"dropleft\"\n            >\n              <NavDropdown.Item onClick={refreshCharacterData.bind(this)}>\n                Refresh Character Class Data\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={activateLodestoneModal.bind(this)}>\n                Import Different Character Data\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={clearCharacterData.bind(this)}>\n                Clear Character Data\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={clearCraftingClassData.bind(this)}>\n                Clear Crafting Class Data\n              </NavDropdown.Item>\n            </NavDropdown>\n          )}\n        </Nav>\n      </Navbar>\n    )\n  }\n}\n\nNavigationBar.propTypes = {\n  activateLodestoneModal: PropTypes.func.isRequired,\n  characterData: PropTypes.shape({\n    Character: PropTypes.shape({\n      Avatar: PropTypes.string.isRequired,\n      Name: PropTypes.string.isRequired\n    })\n  }),\n  characterIsLoaded: PropTypes.bool.isRequired,\n  clearCharacterData: PropTypes.func.isRequired,\n  clearCraftingClassData: PropTypes.func.isRequired,\n  filterData: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    criteria: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n  }).isRequired,\n  refreshCharacterData: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired\n}\n\nexport default NavigationBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\n\nclass ImportAlert extends React.Component {\n  render () {\n    const { characterIsLoaded, characterData, refreshCharacterData } = this.props\n    return (\n      <React.Fragment>\n        {!characterIsLoaded && !!characterData && (\n          <div className=\"alert alert-info text-center\">\n            <div>\n              Your character is being imported for the first time. Congratulations!<br />\n              Please wait a few minutes and try your import again.\n            </div>\n            <div>\n              {!!characterData.characterId && (\n                <Button variant=\"info\" onClick={refreshCharacterData.bind(this, characterData.characterId)}>\n                  Try Again\n                </Button>\n              )}\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nImportAlert.propTypes = {\n  characterData: PropTypes.shape({\n    characterId: PropTypes.number\n  }),\n  characterIsLoaded: PropTypes.bool.isRequired,\n  refreshCharacterData: PropTypes.func.isRequired\n}\n\nexport default ImportAlert\n","import React from 'react'\nimport dayjs from 'dayjs'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore'\nimport {\n  cloneDeep as _cloneDeep,\n  concat as _concat,\n  filter as _filter,\n  find as _find,\n  get as _get,\n  isEqual as _isEqual,\n  orderBy as _orderBy,\n  uniqBy as _uniqBy\n} from 'lodash'\nimport { Container } from 'react-bootstrap'\nimport * as LocalStorageService from '../service/localStorage'\nimport * as XivApi from '../service/xivApi'\nimport LodestoneModal from './LodestoneModal'\nimport CalculationsTable from './CalculationsTable'\nimport NavigationBar from './NavigationBar'\nimport ImportAlert from './ImportAlert'\n\ndayjs.extend(isSameOrBefore)\n\nclass Calculations extends React.Component {\n  state = {\n    lodestoneModalIsOpen: false,\n    sortData: {\n      field: 'name',\n      direction: 'asc'\n    },\n    filterData: {\n      label: 'All',\n      criteria: undefined\n    }\n  }\n\n  componentDidMount () {\n    const characterData = LocalStorageService.retrieveAndUpdateCharacterData()\n    const classData = LocalStorageService.retrieveAndUpdateCraftingClassData()\n\n    this.setState({\n      characterData,\n      classData\n    })\n  }\n\n  activateLodestoneModal () {\n    this.setState({\n      lodestoneModalIsOpen: true\n    })\n  }\n\n  deactivateLodestoneModal () {\n    this.setState({\n      lodestoneModalIsOpen: false\n    })\n  }\n\n  clearCharacterData () {\n    LocalStorageService.clearCharacterData()\n    this.setState({\n      characterData: undefined\n    })\n  }\n\n  clearCraftingClassData () {\n    LocalStorageService.clearCraftingClassData()\n    this.setState({\n      classData: LocalStorageService.retrieveAndUpdateCraftingClassData()\n    })\n  }\n\n  async refreshCharacterData (id) {\n    const characterId = _get(this.state, 'characterData.Character.ID', id)\n    const parseDate = _get(this.state, 'characterData.Character.ParseDate')\n    if (!!parseDate) {\n      const parseDateTime = dayjs(parseDate * 1000)\n      const sixHoursAgo = dayjs().add(-6, 'h')\n      const canRefreshCharacterData = parseDateTime.isBefore(sixHoursAgo)\n\n      if (!canRefreshCharacterData) {\n        alert(`Character data was last obtained ${parseDateTime.format('YYYY-MM-DD HH:mm')}.  ` +\n          'Please wait at least six hours for an update from Lodestone.  Next update will be available ' +\n          `at ${parseDateTime.add(6, 'h').format('YYYY-MM-DD HH:mm')}.`)\n        return\n      }\n    }\n    const characterData = await XivApi.getCharacter(characterId)\n    this.updateCharacterData(characterData)\n    this.updateStoredDataWithLodestoneData()\n  }\n\n  updateCharacterData (characterData) {\n    LocalStorageService.storeCharacterData(characterData)\n    this.setState({\n      characterData\n    }, this.updateStoredDataWithLodestoneData.bind(this))\n  }\n\n  updateClassData (classData) {\n    LocalStorageService.storeCraftingClassData(classData)\n    this.setState({\n      classData\n    })\n  }\n\n  updateStoredDataWithLodestoneData () {\n    this.updateClassData(LocalStorageService.updateCraftingClassDataWithCharacterData())\n  }\n\n  updateLocalStorage (abbreviation, newData) {\n    const { classData } = this.state\n    const newClassData = _cloneDeep(classData)\n    const targetData = _find(newClassData, c => c.abbreviation === abbreviation)\n    if (targetData) {\n      const replacementData = {\n        ...targetData,\n        ...newData\n      }\n\n      const toUpdate = _uniqBy(_concat(replacementData, newClassData), c => c.abbreviation)\n\n      this.updateClassData(toUpdate)\n    }\n  }\n\n  applySorting (classData) {\n    const { sortData } = this.state\n    return _orderBy(_cloneDeep(classData), sortData.field, sortData.direction)\n  }\n\n  setSorting (field) {\n    const { sortData } = this.state\n    const newSortData = {\n      ...sortData\n    }\n\n    if (_isEqual(JSON.stringify(sortData.field), JSON.stringify(field))) {\n      newSortData.direction = sortData.direction === 'asc' ? 'desc' : 'asc'\n    } else {\n      newSortData.field = field\n      newSortData.direction = 'asc'\n    }\n\n    this.setState({\n      sortData: newSortData\n    })\n  }\n\n  applyFilter (classData) {\n    const { filterData } = this.state\n    return _filter(_cloneDeep(classData), filterData.criteria)\n  }\n\n  setFilter (label, criteria) {\n    this.setState({\n      filterData: {\n        label,\n        criteria\n      }\n    })\n  }\n\n  render () {\n    const { characterData, classData, filterData, lodestoneModalIsOpen } = this.state\n    const characterIsLoaded = !!characterData && !!characterData.Character\n    return (\n      <React.Fragment>\n        <NavigationBar\n          activateLodestoneModal={this.activateLodestoneModal.bind(this)}\n          characterData={characterData}\n          characterIsLoaded={characterIsLoaded}\n          clearCharacterData={this.clearCharacterData.bind(this)}\n          clearCraftingClassData={this.clearCraftingClassData.bind(this)}\n          filterData={filterData}\n          refreshCharacterData={this.refreshCharacterData.bind(this)}\n          setFilter={this.setFilter.bind(this)}\n        />\n        <Container fluid>\n          <ImportAlert\n            characterData={characterData}\n            characterIsLoaded={characterIsLoaded}\n            refreshCharacterData={this.refreshCharacterData.bind(this)}\n          />\n          <CalculationsTable\n            classData={this.applyFilter(this.applySorting(classData))}\n            updateLocalStorage={this.updateLocalStorage.bind(this)}\n            updateSorting={this.setSorting.bind(this)}\n          />\n          <hr />\n          <div className=\"text-center text-muted\">\n            Version {process.env.REACT_APP_VERSION}\n          </div>\n        </Container>\n        <LodestoneModal\n          show={lodestoneModalIsOpen}\n          onHide={this.deactivateLodestoneModal.bind(this)}\n          onSelect={this.updateCharacterData.bind(this)}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Calculations\n","import React from 'react'\nimport Calculations from './Calculations'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Calculations />\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}