{"version":3,"sources":["service/localStorage.js","service/xivApi.js","store/local/types.js","store/local/actions.js","components/navigation/LodestoneCharacterModal.jsx","components/navigation/LodestoneCharacterMenu.jsx","components/navigation/Navigation.jsx","components/recipes/RecipeSearchForm.jsx","components/recipes/RecipeSearchResult.jsx","components/recipes/RecipeSearch.jsx","components/recipes/MyList.jsx","store/recipeList/types.js","service/recipe.js","store/recipeList/actions.js","components/recipes/ShoppingList.jsx","components/calculator/FilterDropdown.jsx","service/calculations.js","components/common/SortableTableHeaderCell.jsx","components/calculator/CalculationsTableHeader.jsx","components/calculator/CalculationsTableBody.jsx","components/calculator/CraftingGatheringCalculator.jsx","components/RecipeHelper.jsx","components/XivCraftingGatheringHelper.jsx","store/local/reducer.js","store/recipeList/reducer.js","store/index.js","components/App.js","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","MY_RECIPE_LIST","MY_SHOPPING_LIST","get","key","defaultValue","data","localStorage","getItem","JSON","parse","store","setItem","stringify","clear","removeItem","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","getDefaultCraftingClasses","storedData","craftingClasses","result","forEach","defaultCraftingClass","storedCraftingClass","_find","c","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","levelingGuideDiffs","push","retrieveAndUpdateCharacterData","updateCraftingClassDataWithCharacterData","classJobCategories","craftingClassData","characterData","_values","_get","_includes","_map","lodestoneClassData","_set","totalExperience","CRAFTING_CLASSES","currentLevel","currentExperience","experiencePerItem","BASE_URL","searchForCharacter","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","concat","sent","abrupt","stop","_x","_x2","apply","this","getCharacter","_ref2","_callee2","id","_context2","set","_x3","recipeSearch","_ref4","_callee4","searchString","options","columns","exact","paramsToSend","_args4","_context4","toLower","replace","indexes","body","query","bool","must","wildcard","NameCombined_en","size","from","sort","RecipeLevelTable.ClassJobLevel","limit","isArray","minimum_should_match","should","map","match","ClassJob.Abbreviation_en","post","getIconUrl","iconRelativePath","getRecipesById","_ref5","_callee5","recipeIds","i","_context5","params","ids","join","_x9","getItemsById","_ref6","_callee6","itemIds","_context6","_x10","LOCAL_CLASS_DATA_RETRIEVAL","LOCAL_CLASS_DATA_STORE","LOCAL_CLASS_DATA_CLEAR","LOCAL_CHARACTER_DATA_RETRIEVAL","LOCAL_CHARACTER_DATA_STORE","LOCAL_CHARACTER_DATA_CLEAR","LODESTONE_CHARACTER_DATA_REQUEST","LODESTONE_CHARACTER_DATA_SUCCESS","API_REQUEST_FAILURE","lodestoneCharacterDataRequest","characterId","T","apiRequestSuccess","payload","getLocalClassData","dispatch","localData","localClassDataRetrieve","LocalStorage","saveLocalClassData","classData","clearLocalClassData","saveLocalCharacterData","getLocalCharacterData","localCharacterDataRetrieve","clearLocalCharacterData","LodestoneCharacterModal","state","event","_event$target","target","value","setState","defineProperty","preventDefault","loading","performSearch","XivApi","lodestoneResults","onHide","props","getLodestoneCharacterData","handleClose","_this2","show","_this$state2","results","prevPage","nextPage","react_default","createElement","Modal","bind","Form","onSubmit","handleSearch","onReset","Header","closeButton","Title","Body","Group","Label","Control","as","onChange","handleSetField","XIV_SERVERS","Button","disabled","className","Spinner","animation","variant","Fragment","char","ID","Name","Avatar","Check","htmlFor","src","alt","onClick","Footer","handleSubmitCharacterSelection","React","Component","defaultProps","getDropdownTitle","_characterData$Charac","Character","LodestoneCharacterMenu","showModal","_this$props","searchLodestoneCharacterData","importText","NavDropdown","alignRight","title","Item","Divider","handleModalToggle","navigation_LodestoneCharacterModal","connect","t0","error","Navigation","Navbar","bg","sticky","lib","to","NavbarBrand","Nav","navigation_LodestoneCharacterMenu","RecipeSearchForm","handleChange","handleReset","handleSubmit","recipeSearchIsInvalid","recipeSearchString","searching","isInvalid","FormControl","Feedback","RecipeSearchResult","_this","handlePageChange","handleTabChange","handleToggleListItem","myList","pagination","ready","recipeList","pagePrev","pageNext","Table","hover","striped","r","iconUrl","craftingClassName","level","isOnList","find","item","index_es","icon","faMinusSquare","faPlusSquare","colSpan","RecipeSearch","recipeSearchResults","RecipeSearchForm_RecipeSearchForm","RecipeSearchResult_RecipeSearchResult","MyList","handleClearList","handleGenerateShoppingList","handleUpdateQuantity","list","k","Icon","ClassJob","NameEnglish","RecipeLevelTable","ClassJobLevel","quantity","RECIPE_LIST_CLEAR","RECIPE_LIST_SAVE","SHOPPING_LIST_CREATE","SHOPPING_LIST_CLEAR","getIngredientListForRecipes","ingredientsGatherable","ingredientsCrafted","ingredientsOther","ingredientsPurchased","itemData","getAndSortRecipeResults","XivApiService","foundItem","ig","io","filter","val","includes","addGatheringItemData","orderBy","uniqBy","ic","gatheringItemId","filteredGatheringPoints","GATHERING_ITEM_POINTS","point","startsWith","pointData","getPointData","itemId","filteredFishingSpots","FISHING_SPOTS","spot","path","pd","namePath","areaPath","regionPath","levelPath","typePath","aetherytePath","area","region","aetheryteId","AETHERYTE","gatheringClass","Mining","Quarrying","Logging","Harvesting","hasFishingSpotMatch","matched","fishingId","recipeResults","nextRecipeResults","recipe","t1","t2","rr","recipeListEntry","rle","_loop","amount","gatheringMapNode","ITEM_TO_GATHERING_ITEM_MAPPING","mapping","ingredientRecipe","fishingSpotMatch","existingIngredientGatherable","existingAmount","existingIngredientOther","ip","_x4","_x5","_x6","saveMyRecipeList","myRecipeList","console","log","recipeListSave","createMyShoppingList","clearMyRecipeList","clearMyShoppingList","RecipeListService","myShoppingList","shoppingList","ShoppingList","updateGatherableIngredientsDropdowns","prevProps","prevState","snapshot","isEqual","gatherableStateVars","objectSpread","_this$props$shoppingL","headings","locationSelectId","gatheringType","handleLocationUpdate","craftClass","craftLevel","FilterDropdown","label","applyFilterFunc","DropdownButton","Dropdown","craftingClass","calculateRemainingExp","currentExp","totalExp","Math","max","calculateRemainingItems","remainingExp","expPerItem","ceil","calculateProgressPercentage","floor","SortableTableHeaderCell","text","sortFunc","applySorting","style","cursor","faSort","tableHeaders","CalculationsTableHeader","applySortFunc","h","common_SortableTableHeaderCell","CalculationsTableBody","focusedRow","levelingGuide","LEVELING_GUIDE_LINKS","g","matchedPage","pages","p","maxLevel","minLevel","url","min","updateField","toNumber","focused","remainingExperience","remainingItems","progressPercentage","popover","Popover","href","getLevelingGuidePageUrl","rel","onFocus","handleRowFocus","onBlur","cx","OverlayTrigger","trigger","placement","overlay","rootClose","faIcon","validateNumericFieldChange","ProgressBar","now","CraftingGatheringCalculator","func","direction","sortDirection","filterFunc","innerText","targetCraftingClass","otherCraftingClasses","EXP_PER_LEVEL","sortedAndFilteredCraftingClassData","getSortedCraftingClassData","getFilteredCraftingClassData","FilterDropdown_FilterDropdown","applyFilter","CalculationsTableHeader_CalculationsTableHeader","applySort","calculator_CalculationsTableBody","RecipeHelper","lastSearch","_this$setState","newValue","indexOf","document","getElementsByName","focus","search","omit","_this$props2","myClonedList","cloneDeep","reject","_this$props3","_this3","_this$state","_this$props4","Tabs","activeKey","onSelect","Tab","eventKey","calculator_CraftingGatheringCalculator","RecipeSearch_RecipeSearch","handleFieldUpdate","handleClear","toggleListItem","MyList_MyList","Badge","ShoppingList_ShoppingList","recipeActions","externalLink","XivCraftingGatheringHelper","react_router_dom","basename","process","Navigation_Navigation","Container","fluid","components_RecipeHelper","actions","INITIAL_STATE","rootReducer","combineReducers","local","action","createStore","applyMiddleware","thunk","App","Provider","components_XivCraftingGatheringHelper","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.93131877.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\r\nimport { applyChanges, diff } from 'diff-json'\r\nimport {\r\n  filter as _filter,\r\n  find as _find,\r\n  get as _get,\r\n  includes as _includes,\r\n  map as _map,\r\n  set as _set,\r\n  values as _values\r\n} from 'lodash'\r\n\r\nconst KEYS = {\r\n  CHARACTER_DATA: 'character',\r\n  CRAFTING_CLASS_DATA: 'craftingClasses',\r\n  MY_RECIPE_LIST: 'myRecipeList',\r\n  MY_SHOPPING_LIST: 'myShoppingList'\r\n}\r\n\r\nfunction get (key, defaultValue) {\r\n  const data = localStorage.getItem(key)\r\n  if (!!data) {\r\n    return JSON.parse(data)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nfunction store (key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data))\r\n}\r\n\r\nfunction clear (key) {\r\n  if (!!localStorage.getItem(key)) {\r\n    localStorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport function getMyRecipeList () {\r\n  return get(KEYS.MY_RECIPE_LIST, [])\r\n}\r\n\r\nexport function getMyShoppingList () {\r\n  return get(KEYS.MY_SHOPPING_LIST, [])\r\n}\r\n\r\nexport function storeCharacterData (characterData) {\r\n  store(KEYS.CHARACTER_DATA, characterData)\r\n}\r\n\r\nexport function storeCraftingClassData (craftingClasses) {\r\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\r\n}\r\n\r\nexport function storeMyRecipeList (myRecipeList) {\r\n  console.log('storing this', myRecipeList)\r\n  store(KEYS.MY_RECIPE_LIST, myRecipeList)\r\n}\r\n\r\nexport function storeMyShoppingList (myShoppingList) {\r\n  store(KEYS.MY_SHOPPING_LIST, myShoppingList)\r\n}\r\n\r\nexport function clearCharacterData () {\r\n  clear(KEYS.CHARACTER_DATA)\r\n}\r\n\r\nexport function clearCraftingClassData () {\r\n  clear(KEYS.CRAFTING_CLASS_DATA)\r\n}\r\n\r\nexport function clearMyRecipeList () {\r\n  clear(KEYS.MY_RECIPE_LIST)\r\n}\r\n\r\nexport function clearMyShoppingList () {\r\n  clear(KEYS.MY_SHOPPING_LIST)\r\n}\r\n\r\nexport function retrieveAndUpdateCraftingClassData () {\r\n  // get the default crafting class data\r\n  const defaultCraftingClasses = getDefaultCraftingClasses()\r\n\r\n  // retrieve the stored data from local storage\r\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\r\n\r\n  // if there is no stored data, return the default data\r\n  if (!storedData) {\r\n    return defaultCraftingClasses\r\n  }\r\n\r\n  // if there is stored data, convert it to JSON\r\n  const craftingClasses = JSON.parse(storedData)\r\n\r\n  // create a variable for the result\r\n  const result = []\r\n\r\n  // cycle through all \"default\" classes\r\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\r\n    // retrieve the matching stored class\r\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\r\n\r\n    // if there is no matching stored class data, add the default for this class to the result\r\n    if (!storedCraftingClass) {\r\n      result.push(defaultCraftingClass)\r\n      return\r\n    }\r\n\r\n    // get any added data to the default data set and apply it to the stored data\r\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\r\n    if (classDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, classDiffs)\r\n    }\r\n\r\n    // get any leveling guide data and remove it from stored data\r\n    const levelingGuideDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.key === 'levelingGuide')\r\n    if (levelingGuideDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, levelingGuideDiffs)\r\n    }\r\n\r\n    // add this record to the result to return\r\n    result.push(storedCraftingClass)\r\n  })\r\n\r\n  // send back the updated stored data\r\n  return result\r\n}\r\n\r\nexport function retrieveAndUpdateCharacterData () {\r\n  // get the stored character data\r\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\r\n\r\n  // if there is no character data, return undefined\r\n  if (!storedData) {\r\n    return undefined\r\n  }\r\n\r\n  // if there is, update it\r\n  // TBD\r\n\r\n  // return the character data\r\n  return JSON.parse(storedData)\r\n}\r\n\r\nexport function updateCraftingClassDataWithCharacterData () {\r\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\r\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\r\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\r\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\r\n\r\n  return _map(craftingClassData, c => {\r\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\r\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\r\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\r\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\r\n    return c\r\n  })\r\n}\r\n\r\nexport function getDefaultCraftingClasses () {\r\n  return _map(CRAFTING_CLASSES, c => {\r\n    c.currentLevel = 1\r\n    c.currentExperience = 0\r\n    c.experiencePerItem = 1\r\n    c.totalExperience = 300\r\n    return c\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { map, get, isArray, set, toLower } from 'lodash'\r\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\r\n\r\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\r\nconst BASE_URL = 'https://xivapi.com'\r\n\r\nexport const searchForCharacter = async (server, name, page = 1) => {\r\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\r\n  return get(result, 'data', [])\r\n}\r\n\r\nexport const getCharacter = async id => {\r\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\r\n  set(result, 'data.characterId', id)\r\n  return get(result, 'data', {})\r\n}\r\n\r\nconst search = async (indexes, filters, sortField, columns, searchString) => {\r\n  if (isArray(indexes)) {\r\n    indexes = indexes.join(',')\r\n  }\r\n\r\n  if (isArray(filters)) {\r\n    filters = filters.join(',')\r\n  }\r\n\r\n  const params = {\r\n    indexes,\r\n    filters,\r\n    columns,\r\n    string: searchString\r\n  }\r\n\r\n  if (!!sortField) {\r\n    params['sort_field'] = sortField\r\n    params['sort_order'] = 'asc'\r\n  }\r\n\r\n  const result = await axios.get(`${BASE_URL}/search`, {\r\n    params\r\n  })\r\n  return get(result, 'data', {})\r\n}\r\n\r\nexport const recipeSearch = async (searchString = '', options = { exact: false, page: 1 }) => {\r\n  const indexes = 'recipe'\r\n  const size = 10\r\n  const columns = [\r\n    'ID',\r\n    'ClassJob.Abbreviation_en',\r\n    'ClassJob.Icon',\r\n    'ClassJob.NameEnglish',\r\n    'RecipeLevelTable.ClassJobLevel',\r\n    'Name',\r\n    'Icon'\r\n  ]\r\n\r\n  const { exact, page } = options\r\n\r\n  searchString = toLower(searchString)\r\n\r\n  if (!exact) {\r\n    searchString = searchString.replace(' ', '*')\r\n  }\r\n\r\n  const paramsToSend = {\r\n    indexes,\r\n    body: {\r\n      query: {\r\n        bool: {\r\n          must: [\r\n            {\r\n              wildcard: {\r\n                'NameCombined_en': `*${searchString}*`\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      size,\r\n      from: size * (page - 1),\r\n      sort: [\r\n        {\r\n          'RecipeLevelTable.ClassJobLevel': 'asc'\r\n        }\r\n      ]\r\n    },\r\n    columns,\r\n    limit: size,\r\n    page\r\n  }\r\n\r\n  if (!!options.abbreviation) {\r\n    let { abbreviation } = options\r\n    const minimum_should_match = 1\r\n\r\n    abbreviation = isArray(abbreviation) ? abbreviation : [abbreviation]\r\n\r\n    paramsToSend.body.query.bool.minimum_should_match = minimum_should_match\r\n    paramsToSend.body.query.bool.should = map(abbreviation, a => ({\r\n      match: {\r\n        'ClassJob.Abbreviation_en': a\r\n      }\r\n    }))\r\n  }\r\n\r\n  const result = await axios.post(`${BASE_URL}/search`,\r\n    paramsToSend\r\n  )\r\n  return get(result, 'data', {})\r\n}\r\n\r\nexport const getIconUrl = iconRelativePath => `${BASE_URL}${iconRelativePath}`\r\n\r\nexport const getRecipesById = async recipeIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name'\r\n  ]\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    columns.push(`AmountIngredient${i}`)\r\n    columns.push(`ItemIngredient${i}.ID`)\r\n    columns.push(`ItemIngredient${i}.Icon`)\r\n    columns.push(`ItemIngredient${i}.Name`)\r\n    columns.push(`ItemIngredientRecipe${i}`)\r\n  }\r\n\r\n  const result = await axios.get(`${BASE_URL}/recipe`, {\r\n    params: {\r\n      ids: recipeIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n  return get(result, 'data', {})\r\n}\r\n\r\nexport const getItemsById = async itemIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name',\r\n    'Icon',\r\n    'GameContentLinks'\r\n  ]\r\n\r\n  const result = await axios.get(`${BASE_URL}/item`, {\r\n    params: {\r\n      ids: itemIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n\r\n  return get(result, 'data', {})\r\n}\r\n","const LODESTONE = 'LODESTONE'\r\nconst LOCAL = 'LOCAL'\r\n\r\nconst REQUEST = 'REQUEST'\r\nconst SUCCESS = 'SUCCESS'\r\nconst FAILURE = 'FAILURE'\r\n\r\nexport const LOCAL_CLASS_DATA_RETRIEVAL = `${LOCAL}_CLASS_DATA_RETRIEVAL`\r\nexport const LOCAL_CLASS_DATA_STORE = `${LOCAL}_CLASS_DATA_STORE`\r\nexport const LOCAL_CLASS_DATA_CLEAR = `${LOCAL}_CLASS_DATA_CLEAR`\r\n\r\nexport const LOCAL_CHARACTER_DATA_RETRIEVAL = `${LOCAL}_CHARACTER_DATA_RETRIEVAL`\r\nexport const LOCAL_CHARACTER_DATA_STORE = `${LOCAL}_CHARACTER_DATA_STORE`\r\nexport const LOCAL_CHARACTER_DATA_CLEAR = `${LOCAL}_CHARACTER_DATA_CLEAR`\r\n\r\nexport const LODESTONE_CHARACTER_DATA_REQUEST = `${LODESTONE}_CHARACTER_DATA_${REQUEST}`\r\nexport const LODESTONE_CHARACTER_DATA_SUCCESS = `${LODESTONE}_CHARACTER_DATA_${SUCCESS}`\r\nexport const API_REQUEST_FAILURE = `${LODESTONE}_CHARACTER_DATA_${FAILURE}`\r\n","import * as LocalStorage from '../../service/localStorage'\r\nimport * as XivApi from '../../service/xivApi'\r\nimport * as T from './types'\r\n\r\nconst localClassDataRetrieve = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localClassDataStore = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localClassDataClear = () => ({\r\n  type: T.LOCAL_CLASS_DATA_CLEAR\r\n})\r\n\r\nconst localCharacterDataRetrieve = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataStore = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataClear = () => ({\r\n  type: T.LOCAL_CHARACTER_DATA_CLEAR\r\n})\r\n\r\nconst lodestoneCharacterDataRequest = characterId => ({\r\n  type: T.LODESTONE_CHARACTER_DATA_REQUEST,\r\n  characterId\r\n})\r\n\r\nconst apiRequestSuccess = (type, payload) => ({\r\n  type,\r\n  payload\r\n})\r\n\r\nconst apiRequestFailure = (type, error) => ({\r\n  type,\r\n  error\r\n})\r\n\r\nexport const getLocalClassData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCraftingClassData()\r\n    dispatch(localClassDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const saveLocalClassData = classData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCraftingClassData(classData)\r\n    dispatch(localClassDataStore(classData))\r\n  }\r\n}\r\n\r\nexport const clearLocalClassData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCraftingClassData()\r\n    dispatch(localClassDataClear())\r\n  }\r\n}\r\n\r\nexport const saveLocalCharacterData = characterData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCharacterData(characterData)\r\n    dispatch(localCharacterDataStore(characterData))\r\n  }\r\n}\r\n\r\nexport const getLocalCharacterData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCharacterData()\r\n    dispatch(localCharacterDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const clearLocalCharacterData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCharacterData()\r\n    dispatch(localCharacterDataClear())\r\n  }\r\n}\r\n\r\nexport const getLodestoneCharacterData = characterId => {\r\n  return async dispatch => {\r\n    dispatch(lodestoneCharacterDataRequest(characterId))\r\n    try {\r\n      const payload = await XivApi.getCharacter(characterId)\r\n      dispatch(apiRequestSuccess(T.LODESTONE_CHARACTER_DATA_SUCCESS, payload))\r\n      dispatch(saveLocalCharacterData(payload))\r\n      dispatch(saveLocalClassData(LocalStorage.updateCraftingClassDataWithCharacterData()))\r\n      dispatch(getLocalClassData())\r\n    } catch (err) {\r\n      dispatch(apiRequestFailure(T.API_REQUEST_FAILURE, err))\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap'\r\nimport { get, map as _map } from 'lodash'\r\nimport XIV_SERVERS from '../../data/xiv-servers'\r\nimport * as XivApi from '../../service/xivApi'\r\n\r\nclass LodestoneCharacterModal extends React.Component {\r\n  state = {}\r\n\r\n  handleSetField (event) {\r\n    const { target: { name, value } } = event\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSearch (page = 1, event) {\r\n    !!event && event.preventDefault()\r\n    this.setState({\r\n      loading: true,\r\n      page\r\n    }, this.performSearch)\r\n  }\r\n\r\n  async performSearch () {\r\n    const { name, server, page } = this.state\r\n    const result = await XivApi.searchForCharacter(server, name, page)\r\n    this.setState({\r\n      lodestoneResults: result,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleClose () {\r\n    const { onHide } = this.props\r\n    this.setState({\r\n      name: undefined,\r\n      server: undefined,\r\n      lodestoneResults: undefined,\r\n      characterId: undefined\r\n    }, onHide)\r\n  }\r\n\r\n  handleSubmitCharacterSelection () {\r\n    const { getLodestoneCharacterData } = this.props\r\n    const { characterId } = this.state\r\n\r\n    getLodestoneCharacterData(characterId)\r\n    this.handleClose()\r\n  }\r\n\r\n  render () {\r\n    const { show } = this.props\r\n    const { characterId, loading, lodestoneResults, name, server } = this.state\r\n\r\n    const results = get(lodestoneResults, 'Results', [])\r\n    const prevPage = get(lodestoneResults, 'Pagination.PagePrev')\r\n    const nextPage = get(lodestoneResults, 'Pagination.PageNext')\r\n\r\n    return (\r\n      <Modal show={show} onHide={this.handleClose.bind(this)}>\r\n        <Form\r\n          onSubmit={this.handleSearch.bind(this, 1)}\r\n          onReset={this.handleClose.bind(this)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Import Character Data\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Label>Server</Form.Label>\r\n              <Form.Control name=\"server\" as=\"select\" onChange={this.handleSetField.bind(this)}>\r\n                <option>Choose a Server</option>\r\n                {_map(XIV_SERVERS, (server, key) => (\r\n                  <option key={key} value={server}>{server}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control name=\"name\" type=\"text\" onChange={this.handleSetField.bind(this)} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" disabled={!name || !server}>\r\n              Search\r\n            </Button>\r\n            <hr />\r\n            {!!loading && (\r\n              <div className=\"fullWidth text-center\">\r\n                <Spinner animation=\"grow\" variant=\"danger\" />\r\n                <Spinner animation=\"grow\" variant=\"warning\" />\r\n                <Spinner animation=\"grow\" variant=\"success\" />\r\n              </div>\r\n            )}\r\n            {!loading && !results.length && (\r\n              <div>\r\n                No results available.\r\n              </div>\r\n            )}\r\n            {!loading && !!results.length && (\r\n              <React.Fragment>\r\n                <div className=\"lodestoneResults\">\r\n                  {results.map((char, key) => {\r\n                    const { ID, Name, Avatar } = char\r\n                    return (\r\n                      <div\r\n                        key={key}\r\n                        className=\"flex justify-between items-center\"\r\n                      >\r\n                        <Form.Check\r\n                          id={ID}\r\n                          type=\"radio\"\r\n                          name=\"characterId\"\r\n                          value={ID}\r\n                          onChange={this.handleSetField.bind(this)}\r\n                        />\r\n                        <label htmlFor={ID}>{Name}</label>\r\n                        <label htmlFor={ID}>\r\n                          <img className=\"avatar\" src={Avatar} alt={Name} />\r\n                        </label>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n                <div className=\"flex justify-between items-center pt2\">\r\n                  <div className=\"w-50 tl\">\r\n                    {!!prevPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, prevPage)}>\r\n                        Prev Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"w-50 tr\">\r\n                    {nextPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, nextPage)}>\r\n                        Next Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"reset\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"primary\"\r\n              disabled={!characterId}\r\n              onClick={this.handleSubmitCharacterSelection.bind(this)}\r\n            >\r\n              Load Data\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired\r\n}\r\n\r\nLodestoneCharacterModal.defaultProps = {\r\n  show: false\r\n}\r\n\r\nexport default LodestoneCharacterModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { get } from 'lodash'\r\nimport { NavDropdown } from 'react-bootstrap'\r\nimport { clearLocalCharacterData, clearLocalClassData, getLodestoneCharacterData } from '../../store/local/actions'\r\nimport LodestoneCharacterModal from './LodestoneCharacterModal'\r\n\r\nconst getDropdownTitle = characterData => {\r\n  if (get(characterData, 'Character.Avatar')) {\r\n    const { Character: { Avatar, Name } } = characterData\r\n    return (\r\n      <span className=\"items-center\">\r\n        {Name}\r\n        <span className=\"ml2\"><img src={Avatar} alt={Name} className=\"avatar\" /></span>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return 'Options'\r\n}\r\n\r\nclass LodestoneCharacterMenu extends React.Component {\r\n  state = {\r\n    showModal: false\r\n  }\r\n\r\n  handleModalToggle (showModal) {\r\n    this.setState({\r\n      showModal: showModal\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      characterData,\r\n      clearLocalCharacterData,\r\n      clearLocalClassData,\r\n      getLodestoneCharacterData,\r\n      lodestoneResults,\r\n      searchLodestoneCharacterData\r\n    } = this.props\r\n\r\n    const importText = `Import ${!characterData ? '' : 'Different'} Character Data`.replace('  ', ' ')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavDropdown\r\n          alignRight\r\n          title={getDropdownTitle(characterData)}\r\n        >\r\n          {!!characterData && (\r\n            <React.Fragment>\r\n              <NavDropdown.Item onClick={getLodestoneCharacterData.bind(this, characterData.characterId)}>\r\n                Refresh Character Data\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n            </React.Fragment>\r\n          )}\r\n          <NavDropdown.Item onClick={this.handleModalToggle.bind(this, true)}>\r\n            {importText}\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={clearLocalClassData}>\r\n            Clear Crafting Class Data\r\n          </NavDropdown.Item>\r\n          {!!characterData && (\r\n            <NavDropdown.Item onClick={clearLocalCharacterData}>\r\n              Clear Character Data\r\n            </NavDropdown.Item>\r\n          )}\r\n        </NavDropdown>\r\n        <LodestoneCharacterModal\r\n          lodestoneResults={lodestoneResults}\r\n          onHide={this.handleModalToggle.bind(this, false)}\r\n          searchLodestoneCharacterData={searchLodestoneCharacterData}\r\n          show={this.state.showModal}\r\n          getLodestoneCharacterData={getLodestoneCharacterData}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterMenu.propTypes = {\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId)),\r\n  clearLocalCharacterData: () => dispatch(clearLocalCharacterData()),\r\n  clearLocalClassData: () => dispatch(clearLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LodestoneCharacterMenu)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Nav, Navbar, NavbarBrand } from 'react-bootstrap'\r\nimport LodestoneCharacterMenu from './LodestoneCharacterMenu'\r\n\r\nexport default class Navigation extends React.Component {\r\n  render () {\r\n    const { characterData } = this.props\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <LinkContainer to=\"/\">\r\n          <NavbarBrand>\r\n            FFXIV Crafting & Gathering Helper\r\n          </NavbarBrand>\r\n        </LinkContainer>\r\n        <Nav className=\"mr-auto\" />\r\n        <Nav>\r\n          <LodestoneCharacterMenu\r\n            characterData={characterData}\r\n          />\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  characterData: PropTypes.shape(),\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, FormControl } from 'react-bootstrap'\r\n\r\nexport default class RecipeSearchForm extends React.Component {\r\n  render () {\r\n    const { handleChange, handleReset, handleSubmit, recipeSearchIsInvalid, recipeSearchString, searching } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <Form onReset={handleReset} onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Enter Your Search Term(s)</Form.Label>\r\n            <Form.Control\r\n              as=\"input\"\r\n              name=\"recipeSearchString\"\r\n              value={recipeSearchString}\r\n              onChange={handleChange}\r\n              isInvalid={!!recipeSearchIsInvalid}\r\n            />\r\n            <FormControl.Feedback type=\"invalid\">\r\n              Please enter a search term.\r\n            </FormControl.Feedback>\r\n          </Form.Group>\r\n          <Button type=\"reset\" variant=\"danger\" className=\"mr1\" disabled={!!searching}>Clear</Button>\r\n          <Button type=\"submit\" variant=\"primary\" className=\"ml1\" disabled={!!searching}>Go!</Button>\r\n        </Form>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchString: PropTypes.string.isRequired,\r\n  searching: PropTypes.bool.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { find, get } from 'lodash'\r\nimport { Button, Spinner, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare, faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class RecipeSearchResult extends React.Component {\r\n  render () {\r\n    const {\r\n      handlePageChange,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      myList,\r\n      pagination,\r\n      ready,\r\n      recipeList\r\n    } = this.props\r\n\r\n    if (!ready) {\r\n      return (\r\n        <div className=\"tc\">\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n          <Spinner animation=\"grow\" variant=\"primary\" />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (!recipeList.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const pagePrev = get(pagination, 'PagePrev')\r\n    const pageNext = get(pagination, 'PageNext')\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Add/Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {recipeList.map((r, key) => {\r\n          const iconUrl = getIconUrl(get(r, 'Icon', ''))\r\n          const name = get(r, 'Name')\r\n          const craftingClassName = get(r, 'ClassJob.NameEnglish')\r\n          const level = get(r, 'RecipeLevelTable.ClassJobLevel')\r\n          const isOnList = !!find(myList, item => get(item, 'ID') === get(r, 'ID'))\r\n\r\n          return (\r\n            <tr key={key}>\r\n              <td><img src={iconUrl} alt={name} /></td>\r\n              <td>{craftingClassName}</td>\r\n              <td>{name}</td>\r\n              <td>{level}</td>\r\n              <td>\r\n                <Button onClick={handleToggleListItem.bind(this, r)} variant={isOnList ? 'danger' : 'success'}>\r\n                  <FontAwesomeIcon\r\n                    icon={isOnList ? faMinusSquare : faPlusSquare}\r\n                  />\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n        <tfoot>\r\n        <tr>\r\n          <td colSpan={5}>\r\n            <div className=\"w-third dib tl\">\r\n              {!!pagePrev && (\r\n                <Button value={pagePrev} onClick={handlePageChange}>\r\n                  Previous\r\n                </Button>\r\n              )}\r\n            </div>\r\n            <div className=\"w-third dib tc\">\r\n              <Button onClick={handleTabChange.bind(this, 'recipe-list')}>\r\n                Go to Recipe List\r\n              </Button>\r\n            </div>\r\n            <div className=\"w-third dib tr\">\r\n              {!!pageNext && (\r\n                <Button value={pageNext} onClick={handlePageChange}>\r\n                  Next\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        </tfoot>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchResult.propTypes = {\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  pagination: PropTypes.shape().isRequired,\r\n  recipeList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  ready: PropTypes.bool.isRequired\r\n}\r\n\r\nRecipeSearchResult.defaultProps = {\r\n  myList: [],\r\n  pagination: {},\r\n  recipeList: [],\r\n  ready: true\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { get } from 'lodash'\r\nimport RecipeSearchForm from './RecipeSearchForm'\r\nimport RecipeSearchResult from './RecipeSearchResult'\r\n\r\nexport default class RecipeSearch extends React.Component {\r\n  render () {\r\n    const {\r\n      handleChange,\r\n      handlePageChange,\r\n      handleReset,\r\n      handleSubmit,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      myList,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchResults,\r\n      recipeSearchString,\r\n      searching\r\n    } = this.props\r\n\r\n    const pagination = get(recipeSearchResults, 'Pagination')\r\n    const recipeList = get(recipeSearchResults, 'Results')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <RecipeSearchForm\r\n          handleChange={handleChange}\r\n          handleReset={handleReset}\r\n          handleSubmit={handleSubmit}\r\n          recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n          recipeSearchString={recipeSearchString}\r\n          searching={searching}\r\n        />\r\n        <hr />\r\n        <RecipeSearchResult\r\n          handlePageChange={handlePageChange}\r\n          handleTabChange={handleTabChange}\r\n          handleToggleListItem={handleToggleListItem}\r\n          myList={myList}\r\n          pagination={pagination}\r\n          recipeList={recipeList}\r\n          ready={!searching}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearch.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchResults: PropTypes.shape(),\r\n  recipeSearchString: PropTypes.string.isRequired,\r\n  searching: PropTypes.bool.isRequired\r\n}\r\n\r\nRecipeSearch.defaultProps = {\r\n  myList: [],\r\n  recipeSearchResults: {}\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class MyList extends React.Component {\r\n  render () {\r\n    const {\r\n      handleClearList,\r\n      handleGenerateShoppingList,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      handleUpdateQuantity,\r\n      list\r\n    } = this.props\r\n\r\n    if (!list.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Items in List\r\n          <hr />\r\n          <Button onClick={handleTabChange.bind(this, 'search')}>\r\n            Back to Search\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Quantity</th>\r\n          <th>Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {list.map((i, k) => (\r\n          <tr key={k}>\r\n            <td><img src={getIconUrl(i.Icon)} alt={i.Name} /></td>\r\n            <td>{i.ClassJob.NameEnglish}</td>\r\n            <td>{i.Name}</td>\r\n            <td>{i.RecipeLevelTable.ClassJobLevel}</td>\r\n            <td>\r\n              <Form.Control type=\"number\" value={i.quantity} onChange={handleUpdateQuantity.bind(this, i)} />\r\n            </td>\r\n            <td>\r\n              <Button variant=\"danger\" onClick={handleToggleListItem.bind(this, i)}>\r\n                <FontAwesomeIcon icon={faMinusSquare} />\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n        {list.length && (\r\n          <tfoot>\r\n          <tr>\r\n            <td colSpan={6} className=\"tc\">\r\n              <div className=\"space-between\">\r\n                <Button variant=\"danger\" onClick={handleClearList}>\r\n                  Clear Recipe List\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleTabChange.bind(this, 'shopping-list')}>\r\n                  View My Shopping List\r\n                </Button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </tfoot>\r\n        )}\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nMyList.propTypes = {\r\n  handleClearList: PropTypes.func.isRequired,\r\n  handleGenerateShoppingList: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  handleUpdateQuantity: PropTypes.func.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.shape({\r\n    ClassJob: PropTypes.shape({\r\n      Abbreviation_en: PropTypes.string.isRequired,\r\n      NameEnglish: PropTypes.string.isRequired\r\n    }),\r\n    Icon: PropTypes.string.isRequired,\r\n    Name: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number,\r\n    RecipeLevelTable: PropTypes.shape({\r\n      ClassJobLevel: PropTypes.number.isRequired\r\n    }).isRequired\r\n  })).isRequired\r\n}\r\n\r\nMyList.defaultProps = {\r\n  list: []\r\n}\r\n","const RECIPE_LIST = 'RECIPE_LIST'\r\nconst SHOPPING_LIST = 'SHOPPING_LIST'\r\n\r\n// export const RECIPE_LIST_ADD = `${RECIPE_LIST}_ADD`\r\n// export const RECIPE_LIST_REMOVE = `${RECIPE_LIST}_REMOVE`\r\nexport const RECIPE_LIST_CLEAR = `${RECIPE_LIST}_CLEAR`\r\nexport const RECIPE_LIST_SAVE = `${RECIPE_LIST}_SAVE`\r\n\r\nexport const SHOPPING_LIST_CREATE = `${SHOPPING_LIST}_CREATE`\r\nexport const SHOPPING_LIST_CLEAR = `${SHOPPING_LIST}_CLEAR`\r\n","import { concat, filter, find, forEach, get, includes, map, set, toLower, uniqBy, orderBy } from 'lodash'\r\nimport ITEM_TO_GATHERING_ITEM_MAPPING from '../data/item-to-gathering-item-mapping'\r\nimport GATHERING_ITEM_POINTS from '../data/gathering-item-points'\r\nimport AETHERYTE from '../data/aetheryte'\r\nimport FISHING_SPOTS from '../data/fishing-spots'\r\nimport * as XivApiService from './xivApi'\r\n\r\n/**\r\n * Gets a list of ingredients required to craft a given set of recipes.\r\n *\r\n * @param recipeList\r\n * @returns {Promise<*>}\r\n */\r\nexport const getIngredientListForRecipes = async recipeList => {\r\n  if (!recipeList || !recipeList.length) return {}\r\n\r\n  // we will want to keep the following lists:\r\n  // 1. Ingredients that can be gathered\r\n  const ingredientsGatherable = []\r\n\r\n  // 2. Ingredients that can be crafted\r\n  const ingredientsCrafted = []\r\n\r\n  // 3. Ingredients that can be obtained from monsters\r\n  const ingredientsOther = []\r\n\r\n  // 3. Ingredients that can be bought (that cannot be gathered or dropped by monsters)\r\n  const ingredientsPurchased = []\r\n\r\n  await getAndSortRecipeResults(recipeList,\r\n    ingredientsGatherable,\r\n    ingredientsCrafted,\r\n    ingredientsPurchased,\r\n    ingredientsOther\r\n  )\r\n\r\n  // get item IDs for the gatherable and purchasable things so we can get their info\r\n  const itemIds = map(concat(ingredientsGatherable, ingredientsOther), item => get(item, 'itemId'))\r\n  const itemData = await XivApiService.getItemsById(itemIds)\r\n\r\n  forEach(get(itemData, 'Results', []), item => {\r\n    const foundItem = find(ingredientsGatherable, ig => get(ig, 'itemId') === get(item, 'ID')) ||\r\n      find(ingredientsOther, io => get(io, 'itemId') === get(item, 'ID'))\r\n    set(foundItem, 'name', get(item, 'Name'))\r\n    set(foundItem, 'icon', XivApiService.getIconUrl(get(item, 'Icon')))\r\n    // set(foundItem, 'gameContentLinks', get(item, 'GameContentLinks', {}))\r\n    set(foundItem, 'gameContentLinks',\r\n      filter(\r\n        map(\r\n          get(item, 'GameContentLinks', {}), (value, key) => ({ key, value })\r\n        ), result => {\r\n          const val = toLower(result.key)\r\n          return includes(val, 'shop') && !includes(val, 'special')\r\n        }\r\n      )\r\n    )\r\n\r\n    if (!!get(foundItem, 'gameContentLinks.length')) {\r\n      ingredientsPurchased.push(foundItem)\r\n    }\r\n  })\r\n\r\n  // add gathering item data\r\n  addGatheringItemData(ingredientsGatherable)\r\n\r\n  // sort the results\r\n  return {\r\n    ingredientsCrafted: orderBy(uniqBy(ingredientsCrafted, ic => get(ic, 'ID')), 'Name'),\r\n    ingredientsGatherable: orderBy(ingredientsGatherable, 'name'),\r\n    ingredientsPurchased: orderBy(ingredientsPurchased, 'name'),\r\n    ingredientsOther: orderBy(ingredientsOther, 'name')\r\n  }\r\n}\r\n\r\nconst addGatheringItemData = ingredientsGatherable => {\r\n  forEach(ingredientsGatherable, item => {\r\n    const gatheringItemId = get(item, 'gatheringItemId')\r\n\r\n    if (!!gatheringItemId) {\r\n      const filteredGatheringPoints = filter(\r\n        GATHERING_ITEM_POINTS, point => get(point, 'ID', '').startsWith(`${gatheringItemId}.`)\r\n      )\r\n\r\n      const namePath = 'GatheringPoint.PlaceName.Name_en'\r\n      const areaPath = 'GatheringPoint.TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'GatheringPoint.TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringPoint.GatheringPointBase.GatheringLevel'\r\n      const typePath = 'GatheringPoint.GatheringPointBase.GatheringType.Name_en'\r\n      const aetherytePath = 'GatheringPoint.TerritoryType.AetheryteTargetID'\r\n\r\n      const pointData = map(filteredGatheringPoints, point => getPointData(\r\n        point,\r\n        namePath,\r\n        areaPath,\r\n        regionPath,\r\n        levelPath,\r\n        typePath,\r\n        aetherytePath\r\n      ))\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    } else {\r\n      const itemId = get(item, 'itemId')\r\n      const filteredFishingSpots = filter(FISHING_SPOTS, spot => {\r\n        for (let i = 0; i < 10; i++) {\r\n          const path = `Item${i}TargetID`\r\n          const fishId = get(spot, path)\r\n          if (fishId === itemId) return true\r\n        }\r\n      })\r\n\r\n      const namePath = 'PlaceName.Name_en'\r\n      const areaPath = 'TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringLevel'\r\n      const aetherytePath = 'TerritoryType.AetheryteTargetID'\r\n\r\n      const pointData = map(filteredFishingSpots, point => {\r\n        const pd = getPointData(\r\n          point,\r\n          namePath,\r\n          areaPath,\r\n          regionPath,\r\n          levelPath,\r\n          '',\r\n          aetherytePath\r\n        )\r\n        set(pd, 'type', 'Fishing')\r\n        set(pd, 'gatheringClass', 'Fisherman')\r\n        return pd\r\n      })\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    }\r\n  })\r\n}\r\n\r\nconst getPointData = (data, namePath, areaPath, regionPath, levelPath, typePath, aetherytePath) => {\r\n  const typeMap = {\r\n    'Mining': 'Miner',\r\n    'Quarrying': 'Miner',\r\n    'Logging': 'Botanist',\r\n    'Harvesting': 'Botanist'\r\n  }\r\n  const name = get(data, namePath)\r\n  const area = get(data, areaPath)\r\n  const region = get(data, regionPath)\r\n  const level = get(data, levelPath)\r\n  const type = get(data, typePath)\r\n  const aetheryteId = get(data, aetherytePath)\r\n\r\n  return {\r\n    name: name || get(find(AETHERYTE, a => get(a, 'ID') === aetheryteId), 'PlaceName.Name_en'),\r\n    area,\r\n    region,\r\n    level,\r\n    gatheringClass: get(typeMap, type),\r\n    type,\r\n    id: get(data, 'ID')\r\n  }\r\n}\r\n\r\nconst hasFishingSpotMatch = itemId => {\r\n  let matched = false\r\n  forEach(FISHING_SPOTS, spot => {\r\n    for (let i = 0; i < 10; i++) {\r\n      const path = `Item${i}TargetID`\r\n      const fishingId = get(spot, path)\r\n      if (itemId === fishingId) {\r\n        matched = true\r\n        return\r\n      }\r\n    }\r\n  })\r\n\r\n  return matched\r\n}\r\n\r\nconst getAndSortRecipeResults = async (\r\n  recipeList,\r\n  ingredientsGatherable,\r\n  ingredientsCrafted,\r\n  ingredientsPurchased,\r\n  ingredientsOther\r\n) => {\r\n  const recipeIds = map(recipeList, recipe => get(recipe, 'ID'))\r\n  const recipeResults = get(await XivApiService.getRecipesById(recipeIds), 'Results', [])\r\n  const nextRecipeResults = []\r\n  forEach(recipeResults, rr => {\r\n    const recipeListEntry = find(recipeList, rle => get(rle, 'ID') === get(rr, 'ID'))\r\n    set(rr, 'quantity', get(recipeListEntry, 'quantity'))\r\n\r\n    // go through each ingredient\r\n    for (let i = 0; i < 10; i++) {\r\n      const itemId = get(rr, `ItemIngredient${i}.ID`)\r\n      const amount = get(rr, `AmountIngredient${i}`)\r\n      const gatheringMapNode = find(ITEM_TO_GATHERING_ITEM_MAPPING, mapping => get(mapping, 'ItemID') === itemId)\r\n      const gatheringItemId = get(gatheringMapNode, 'GatheringItemID')\r\n      const ingredientRecipe = get(rr, `ItemIngredientRecipe${i}[0]`)\r\n      const quantity = get(rr, 'quantity')\r\n      const fishingSpotMatch = hasFishingSpotMatch(itemId)\r\n\r\n      if (!!gatheringItemId || !!fishingSpotMatch) {\r\n        const existingIngredientGatherable = find(ingredientsGatherable, ig => get(ig, 'itemId') === itemId)\r\n        if (!!existingIngredientGatherable) {\r\n          const existingAmount = get(existingIngredientGatherable, 'amount')\r\n          set(existingIngredientGatherable, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsGatherable.push({ itemId, gatheringItemId, amount: amount * quantity })\r\n        }\r\n      }\r\n\r\n      if (!!ingredientRecipe) {\r\n        set(ingredientRecipe, 'quantity', quantity * amount)\r\n        nextRecipeResults.push(ingredientRecipe)\r\n        ingredientsCrafted.push(ingredientRecipe)\r\n      }\r\n\r\n      if (!gatheringItemId && !ingredientRecipe && !fishingSpotMatch && !!itemId) {\r\n        const existingIngredientOther = find(ingredientsOther, ip => get(ip, 'itemId') === itemId)\r\n        if (!!existingIngredientOther) {\r\n          const existingAmount = get(existingIngredientOther, 'amount')\r\n          set(existingIngredientOther, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsOther.push({ itemId, amount: amount * quantity })\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  if (!!nextRecipeResults.length) {\r\n    await getAndSortRecipeResults(nextRecipeResults,\r\n      ingredientsGatherable,\r\n      ingredientsCrafted,\r\n      ingredientsPurchased,\r\n      ingredientsOther\r\n    )\r\n  }\r\n}\r\n","import * as T from './types'\r\nimport * as LocalStorageService from '../../service/localStorage'\r\nimport * as RecipeListService from '../../service/recipe'\r\n\r\nconst recipeListClear = () => ({\r\n  type: T.RECIPE_LIST_CLEAR\r\n})\r\n\r\nconst recipeListSave = recipeList => ({\r\n  type: T.RECIPE_LIST_SAVE,\r\n  recipeList\r\n})\r\n\r\nconst shoppingListClear = () => ({\r\n  type: T.SHOPPING_LIST_CLEAR\r\n})\r\n\r\nconst shoppingListCreate = shoppingList => ({\r\n  type: T.SHOPPING_LIST_CREATE,\r\n  shoppingList\r\n})\r\n\r\nexport const saveMyRecipeList = recipeList => dispatch => {\r\n  LocalStorageService.storeMyRecipeList(recipeList)\r\n  dispatch(recipeListSave(recipeList))\r\n  dispatch(createMyShoppingList(recipeList))\r\n}\r\n\r\nexport const clearMyRecipeList = () => dispatch => {\r\n  LocalStorageService.clearMyRecipeList()\r\n  dispatch(recipeListClear())\r\n  dispatch(clearMyShoppingList())\r\n}\r\n\r\nexport const createMyShoppingList = recipeList => async dispatch => {\r\n  const result = await RecipeListService.getIngredientListForRecipes(recipeList)\r\n  LocalStorageService.storeMyShoppingList(result)\r\n  dispatch(shoppingListCreate(result))\r\n}\r\n\r\nexport const clearMyShoppingList = () => dispatch => {\r\n  LocalStorageService.clearMyShoppingList()\r\n  dispatch(shoppingListClear())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Table, FormControl } from 'react-bootstrap'\r\nimport { isEqual, get } from 'lodash'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class ShoppingList extends React.Component {\r\n  state = {}\r\n\r\n  componentDidMount() {\r\n    this.updateGatherableIngredientsDropdowns()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const { shoppingList } = this.props\r\n\r\n    if (!isEqual(shoppingList, prevProps.shoppingList)) {\r\n      this.updateGatherableIngredientsDropdowns()\r\n    }\r\n  }\r\n\r\n  updateGatherableIngredientsDropdowns () {\r\n    const { shoppingList } = this.props\r\n    const {\r\n      // ingredientsCrafted,\r\n      // ingredientsPurchased,\r\n      ingredientsGatherable\r\n      // ingredientsOther\r\n    } = shoppingList\r\n\r\n    const gatherableStateVars = {}\r\n    if (ingredientsGatherable) {\r\n      ingredientsGatherable.forEach(item => {\r\n        const key = `gatherable-${item.itemId}-location`\r\n        gatherableStateVars[key] = get(item, 'pointData[0]', {})\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      ...gatherableStateVars\r\n    })\r\n  }\r\n\r\n  handleLocationUpdate (event) {\r\n    event.preventDefault()\r\n\r\n    const { target: { value, id } } = event\r\n\r\n    this.setState({\r\n      [id]: JSON.parse(value)\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { shoppingList: { ingredientsCrafted, ingredientsPurchased, ingredientsGatherable, ingredientsOther } } = this.props\r\n\r\n    if (!ingredientsGatherable && !ingredientsCrafted && !ingredientsPurchased) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const headings = (\r\n      <tr>\r\n        <th />\r\n        <th>Name</th>\r\n        <th>Required Class</th>\r\n        <th>Required Level</th>\r\n        <th>Quantity</th>\r\n        <th>Location</th>\r\n      </tr>\r\n    )\r\n\r\n    const headingColumns = 6\r\n\r\n    return (\r\n      <div>\r\n        <Table hover striped className=\"shopping-list\">\r\n          {!!ingredientsGatherable && !!ingredientsGatherable.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Gatherable Items</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsGatherable.map(item => {\r\n                const { name, icon, itemId, amount, pointData } = item\r\n                const key = `gatherable-${itemId}`\r\n                const locationSelectId = `${key}-location`\r\n                const gatheringClass = get(this.state, `${locationSelectId}.gatheringClass`)\r\n                const gatheringType = get(this.state, `${locationSelectId}.type`)\r\n                const level = get(this.state, `${locationSelectId}.level`)\r\n\r\n                return (\r\n                  <tr key={key}>\r\n                    <td><img src={icon} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>{gatheringClass}{!!gatheringType && ` (${gatheringType})`}</td>\r\n                    <td>{level}</td>\r\n                    <td>{amount}</td>\r\n                    <td>\r\n                      {pointData.length === 1 && (\r\n                        <React.Fragment>\r\n                          {pointData[0].region} - {pointData[0].area} - {pointData[0].name}\r\n                        </React.Fragment>\r\n                      )}\r\n                      {pointData.length > 1 && (\r\n                        <FormControl\r\n                          id={locationSelectId}\r\n                          as=\"select\"\r\n                          onChange={this.handleLocationUpdate.bind(this)}\r\n                        >\r\n                          {pointData.map((point, key) => (\r\n                            <option key={key} value={JSON.stringify(point)}>\r\n                              {point.region} - {point.area} - {point.name} (Level {point.level}, {point.gatheringClass})\r\n                            </option>\r\n                          ))}\r\n                        </FormControl>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsOther && !!ingredientsOther.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Items Obtained Elsewhere</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsOther.map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`}>\r\n                    <td><img src={icon} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>N/A</td>\r\n                    <td>N/A</td>\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsPurchased && !!ingredientsPurchased.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Purchasable Items</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsPurchased.map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`}>\r\n                    <td><img src={icon} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>N/A</td>\r\n                    <td>N/A</td>\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsCrafted && !!ingredientsCrafted.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Prerequisite Crafts</th>\r\n              </tr>\r\n              {headings}\r\n              </thead>\r\n              <tbody>\r\n              {ingredientsCrafted.map(item => {\r\n                const name = get(item, 'ItemResult.Name_en')\r\n                const icon = get(item, 'ItemResult.Icon')\r\n                const id = get(item, 'ID')\r\n                const quantity = get(item, 'quantity')\r\n                const craftClass = get(item, 'ClassJob.NameEnglish')\r\n                const craftLevel = get(item, 'RecipeLevelTable.ClassJobLevel')\r\n                return (\r\n                  <tr key={`crafted-${id}`}>\r\n                    <td><img src={getIconUrl(icon)} alt={name} /></td>\r\n                    <td>{name}</td>\r\n                    <td>{craftClass}</td>\r\n                    <td>{craftLevel}</td>\r\n                    <td>{quantity}</td>\r\n                    <td>N/A</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  shoppingList: PropTypes.shape().isRequired\r\n}\r\n\r\nShoppingList.defaultProps = {\r\n  shoppingList: {}\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport { orderBy } from 'lodash'\r\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\r\n\r\nexport default class FilterDropdown extends React.Component {\r\n  render () {\r\n    const { label, applyFilterFunc } = this.props\r\n    return (\r\n      <DropdownButton title={`Showing ${label}`}>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => !!c)}>\r\n          All\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'crafting')}>\r\n          Crafting Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'gathering')}>\r\n          Gathering Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        {orderBy(CRAFTING_CLASSES, 'name').map((craftingClass, key) => (\r\n          <Dropdown.Item\r\n            key={key}\r\n            onClick={applyFilterFunc.bind(this, c => c.abbreviation === craftingClass.abbreviation)}\r\n          >\r\n            {craftingClass.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n    )\r\n  }\r\n}\r\n\r\nFilterDropdown.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  applyFilterFunc: PropTypes.func.isRequired\r\n}\r\n","export function calculateRemainingExp (currentExp, totalExp) {\r\n  return Math.max(totalExp - currentExp, 0)\r\n}\r\n\r\nexport function calculateRemainingItems (remainingExp, expPerItem) {\r\n  return Math.ceil(remainingExp / expPerItem)\r\n}\r\n\r\nexport function calculateProgressPercentage (currentExp, totalExp) {\r\n  return totalExp <= 0 ? 0 : Math.floor((currentExp / totalExp) * 100)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortableTableHeaderCell extends React.Component {\r\n  render () {\r\n    const { className, text, sortFunc, applySorting } = this.props\r\n    return (\r\n      <th className={className} onClick={applySorting.bind(this, sortFunc)}\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {text}\r\n        <FontAwesomeIcon\r\n          className=\"margin-left\"\r\n          icon={faSort}\r\n        />\r\n      </th>\r\n    )\r\n  }\r\n}\r\n\r\nSortableTableHeaderCell.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  sortFunc: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\r\n  applySorting: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SortableTableHeaderCell\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport SortableTableHeaderCell from '../common/SortableTableHeaderCell'\r\n\r\nconst tableHeaders = [\r\n  { name: 'Class', sortFunc: 'name' },\r\n  { name: 'Level', sortFunc: 'currentLevel' },\r\n  { name: 'Current Exp.', sortFunc: 'currentExperience' },\r\n  { name: 'Required Exp.', sortFunc: undefined },\r\n  { name: 'Remaining Exp.', sortFunc: c => calculateRemainingExp(c.currentExperience, c.totalExperience) },\r\n  { name: 'Exp. Per Item', sortFunc: 'experiencePerItem' },\r\n  {\r\n    name: 'Remaining Items',\r\n    sortFunc: c => calculateRemainingItems(\r\n      calculateRemainingExp(c.currentExperience, c.totalExperience), c.experiencePerItem\r\n    )\r\n  },\r\n  { name: 'Progress', sortFunc: c => calculateProgressPercentage(c.currentExperience, c.totalExperience) }\r\n]\r\n\r\nexport default class CalculationsTableHeader extends React.Component {\r\n  render () {\r\n    const { applySortFunc } = this.props\r\n    return (\r\n      <thead>\r\n      <tr>\r\n        {tableHeaders.map((h, key) => {\r\n          if (h.sortFunc) {\r\n            return (\r\n              <SortableTableHeaderCell\r\n                key={key}\r\n                text={h.name}\r\n                sortFunc={h.sortFunc}\r\n                applySorting={applySortFunc}\r\n              />\r\n            )\r\n          } else {\r\n            return (\r\n              <th key={key}>\r\n                {h.name}\r\n              </th>\r\n            )\r\n          }\r\n        })}\r\n      </tr>\r\n      </thead>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableHeader.propTypes = {\r\n  applySortFunc: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport Form from 'react-bootstrap/es/Form'\r\nimport { OverlayTrigger, Popover, ProgressBar } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\r\nimport { find, set, toNumber } from 'lodash'\r\nimport LEVELING_GUIDE_LINKS from '../../data/leveling-guide-links'\r\n\r\nclass CalculationsTableBody extends React.Component {\r\n  state = {\r\n    focusedRow: undefined\r\n  }\r\n\r\n  getLevelingGuidePageUrl (abbreviation, currentLevel) {\r\n    const classGuideData = find(LEVELING_GUIDE_LINKS, g => g.abbreviation === abbreviation)\r\n    const { levelingGuide } = classGuideData\r\n\r\n    const matchedPage = find(levelingGuide.pages, p => {\r\n      const { maxLevel, minLevel } = p\r\n\r\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\r\n        return true\r\n      }\r\n    })\r\n\r\n    return !!matchedPage ? `${levelingGuide.url}/${matchedPage.page}/` : levelingGuide.url\r\n  }\r\n\r\n  validateNumericFieldChange (abbreviation, event) {\r\n    const { target: { value, max, min } } = event\r\n    const { updateField } = this.props\r\n\r\n    if (!!min && toNumber(value) < min) {\r\n      set(event, 'target.value', min)\r\n    }\r\n\r\n    if (!!max && toNumber(value) > max) {\r\n      set(event, 'target.value', max)\r\n    }\r\n\r\n    updateField(abbreviation, event)\r\n  }\r\n\r\n  handleRowFocus (abbreviation, focused) {\r\n    this.setState({\r\n      focusedRow: focused ? abbreviation : undefined\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { craftingClasses } = this.props\r\n    return (\r\n      <tbody>\r\n      {craftingClasses.map(c => {\r\n        const remainingExperience = calculateRemainingExp(c.currentExperience, c.totalExperience)\r\n        const remainingItems = calculateRemainingItems(remainingExperience, c.experiencePerItem)\r\n        const progressPercentage = calculateProgressPercentage(c.currentExperience, c.totalExperience)\r\n\r\n        const popover = (\r\n          <Popover id={`links-${c.name}`}>\r\n            <a\r\n              href={this.getLevelingGuidePageUrl(c.abbreviation, c.currentLevel)}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Leveling Guide\r\n            </a>\r\n          </Popover>\r\n        )\r\n\r\n        return (\r\n          <tr\r\n            key={`calculationTableRow${c.abbreviation}`}\r\n            onFocus={this.handleRowFocus.bind(this, c.abbreviation, true)}\r\n            onBlur={this.handleRowFocus.bind(this, c.abbreviation, false)}\r\n            className={cx(this.state.focusedRow === c.abbreviation ? 'focused' : undefined)}\r\n          >\r\n            <td>\r\n              <div className=\"flex justify-between items-center\">\r\n                {c.name}\r\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\r\n                  <FontAwesomeIcon icon={faIcon} className=\"text-primary pointer\" />\r\n                </OverlayTrigger>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentLevel\"\r\n                type=\"number\"\r\n                value={c.currentLevel}\r\n                min=\"1\"\r\n                max=\"70\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentExperience\"\r\n                type=\"number\"\r\n                value={c.currentExperience}\r\n                min=\"0\"\r\n                max={c.totalExperience}\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{c.totalExperience}</td>\r\n            <td>{remainingExperience}</td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"experiencePerItem\"\r\n                type=\"number\"\r\n                value={c.experiencePerItem}\r\n                min=\"1\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{remainingItems}</td>\r\n            <td>\r\n              <ProgressBar\r\n                now={progressPercentage}\r\n                label={`${c.currentExperience} / ${c.totalExperience} (${progressPercentage}%)`}\r\n              />\r\n            </td>\r\n          </tr>\r\n        )\r\n      })}\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableBody.propTypes = {\r\n  craftingClasses: PropTypes.arrayOf(PropTypes.shape()).isRequired\r\n}\r\n\r\nexport default CalculationsTableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Table } from 'react-bootstrap'\r\nimport { concat, filter, find, isEqual, orderBy, set, toNumber } from 'lodash'\r\nimport FilterDropdown from './FilterDropdown'\r\nimport CalculationsTableHeader from './CalculationsTableHeader'\r\nimport CalculationsTableBody from './CalculationsTableBody'\r\nimport EXP_PER_LEVEL from '../../data/exp-per-level'\r\nimport { saveLocalClassData } from '../../store/local/actions'\r\n\r\nclass CraftingGatheringCalculator extends React.Component {\r\n  state = {\r\n    sort: {\r\n      func: 'name',\r\n      direction: 'asc'\r\n    },\r\n    filter: {\r\n      func: undefined,\r\n      label: 'All'\r\n    }\r\n  }\r\n\r\n  applySort (sortFunc) {\r\n    const { sort } = this.state\r\n    const sortDirection = isEqual(sortFunc, sort.func) && sort.direction === 'asc' ? 'desc' : 'asc'\r\n    this.setState({\r\n      sort: {\r\n        func: sortFunc,\r\n        direction: sortDirection\r\n      }\r\n    })\r\n  }\r\n\r\n  applyFilter (filterFunc, event) {\r\n    this.setState({\r\n      filter: {\r\n        func: filterFunc,\r\n        label: event.target.innerText\r\n      }\r\n    })\r\n  }\r\n\r\n  getSortedCraftingClassData (craftingClassData) {\r\n    const { sort } = this.state\r\n    return orderBy(craftingClassData, sort.func, sort.direction)\r\n  }\r\n\r\n  getFilteredCraftingClassData (craftingClassData) {\r\n    const { filter: { func } } = this.state\r\n    return filter(craftingClassData, func)\r\n  }\r\n\r\n  updateField (abbreviation, event) {\r\n    const { target: { value, name } } = event\r\n    const { craftingClassData, saveLocalClassData } = this.props\r\n\r\n    const targetCraftingClass = find(craftingClassData, c => c.abbreviation === abbreviation)\r\n    const otherCraftingClasses = filter(craftingClassData, c => c.abbreviation !== abbreviation)\r\n    set(targetCraftingClass, name, toNumber(value))\r\n\r\n    if (name === 'currentLevel') {\r\n      set(targetCraftingClass, 'totalExperience', EXP_PER_LEVEL[value])\r\n    }\r\n\r\n    const updatedCraftingClasses = orderBy(concat(otherCraftingClasses, targetCraftingClass), ['type', 'name'])\r\n\r\n    saveLocalClassData(updatedCraftingClasses)\r\n  }\r\n\r\n  render () {\r\n    const { craftingClassData } = this.props\r\n    const sortedAndFilteredCraftingClassData = this.getSortedCraftingClassData(\r\n      this.getFilteredCraftingClassData(craftingClassData)\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"w-100 pv3 tc\">\r\n          <FilterDropdown label={this.state.filter.label} applyFilterFunc={this.applyFilter.bind(this)} />\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <Table className=\"calculations\" striped hover>\r\n            <CalculationsTableHeader applySortFunc={this.applySort.bind(this)} />\r\n            <CalculationsTableBody\r\n              craftingClasses={sortedAndFilteredCraftingClassData}\r\n              updateField={this.updateField.bind(this)}\r\n            />\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCraftingGatheringCalculator.propTypes = {\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveLocalClassData: (classData) => dispatch(saveLocalClassData(classData))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CraftingGatheringCalculator)\r\n","import React from 'react'\r\nimport { Badge, Tab, Tabs } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { cloneDeep, find, get, omit, reject, indexOf, toNumber } from 'lodash'\r\nimport { recipeSearch } from '../service/xivApi'\r\nimport RecipeSearch from './recipes/RecipeSearch'\r\nimport MyList from './recipes/MyList'\r\nimport * as recipeActions from '../store/recipeList/actions'\r\nimport ShoppingList from './recipes/ShoppingList'\r\nimport CraftingGatheringCalculator from './calculator/CraftingGatheringCalculator'\r\n\r\nclass RecipeHelper extends React.Component {\r\n  state = {\r\n    recipeSearchString: '',\r\n    recipeSearchIsInvalid: false,\r\n    searching: false,\r\n    myList: [],\r\n    lastSearch: undefined\r\n  }\r\n\r\n  handleFieldUpdate (event) {\r\n    const { target: { name, value } } = event\r\n\r\n    let recipeSearchIsInvalid = false\r\n    if (!value) {\r\n      recipeSearchIsInvalid = true\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      recipeSearchIsInvalid\r\n    })\r\n  }\r\n\r\n  handleClearList () {\r\n    const { clearMyRecipeList } = this.props\r\n    clearMyRecipeList()\r\n    this.handleTabChange('search')\r\n  }\r\n\r\n  async search (page = 1) {\r\n    const { recipeSearchString } = this.state\r\n    const results = await recipeSearch(recipeSearchString, { page })\r\n    this.setState({\r\n      searching: false,\r\n      recipeList: results,\r\n      lastSearch: recipeSearchString\r\n    })\r\n  }\r\n\r\n  handleUpdateQuantity (item, event) {\r\n    const newValue = Math.max(1, toNumber(event.target.value))\r\n\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    const myListItemIndex = indexOf(myRecipeList, item)\r\n    myRecipeList[myListItemIndex].quantity = newValue\r\n    saveMyRecipeList(myRecipeList)\r\n  }\r\n\r\n  handleSearch (event) {\r\n    event.preventDefault()\r\n    const page = get(event, 'target.value', 1)\r\n    const { recipeSearchString } = this.state\r\n    if (!recipeSearchString) {\r\n      document.getElementsByName('recipeSearchString')[0].focus()\r\n      this.setState({\r\n        recipeSearchIsInvalid: true\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      searching: true\r\n    }, () => this.search(page))\r\n  }\r\n\r\n  handleClear () {\r\n    document.getElementsByName('recipeSearchString')[0].focus()\r\n    this.setState({\r\n      recipeSearchIsInvalid: false,\r\n      recipeSearchString: ''\r\n    })\r\n  }\r\n\r\n  handlePageChange (event) {\r\n    this.handleSearch(event)\r\n  }\r\n\r\n  handleTabChange (key) {\r\n    this.setState({\r\n      key\r\n    })\r\n  }\r\n\r\n  toggleListItem (item) {\r\n    console.log('togglin', item)\r\n    item = omit(item, 'quantity')\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    let myClonedList = cloneDeep(myRecipeList)\r\n    const foundItem = find(myRecipeList, i => get(i, 'ID') === get(item, 'ID'))\r\n\r\n    if (!!foundItem) {\r\n      myClonedList = reject(myRecipeList, item)\r\n    } else {\r\n      item.quantity = 1\r\n      myClonedList.push(item)\r\n    }\r\n\r\n    saveMyRecipeList(myClonedList)\r\n  }\r\n\r\n  handleGenerateShoppingList () {\r\n    const { createMyShoppingList, myRecipeList } = this.props\r\n\r\n    createMyShoppingList(myRecipeList)\r\n\r\n    this.setState({\r\n      key: 'shopping-list'\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { recipeList, recipeSearchIsInvalid, recipeSearchString, searching } = this.state\r\n    const { characterData, craftingClassData, myRecipeList, myShoppingList } = this.props\r\n\r\n    const BetaBadge = () => <Badge variant=\"primary\">Beta</Badge>\r\n\r\n    return (\r\n      <div className=\"recipe-list pt3\">\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={key => this.setState({ key })}\r\n        >\r\n          <Tab eventKey=\"calculator\" title=\"Calculations\">\r\n            <div className=\"recipe-tab\">\r\n              <CraftingGatheringCalculator characterData={characterData} craftingClassData={craftingClassData} />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"search\" title=\"Recipe Search\">\r\n            <div className=\"recipe-tab\">\r\n              <RecipeSearch\r\n                handleChange={this.handleFieldUpdate.bind(this)}\r\n                handlePageChange={this.handlePageChange.bind(this)}\r\n                handleReset={this.handleClear.bind(this)}\r\n                handleSubmit={this.handleSearch.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                myList={myRecipeList}\r\n                recipeSearchResults={recipeList}\r\n                recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n                recipeSearchString={recipeSearchString}\r\n                searching={searching}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"recipe-list\" title={`My Recipe List (${myRecipeList.length})`}>\r\n            <div className=\"recipe-tab\">\r\n              <MyList\r\n                list={myRecipeList}\r\n                handleClearList={this.handleClearList.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                handleUpdateQuantity={this.handleUpdateQuantity.bind(this)}\r\n                handleGenerateShoppingList={this.handleGenerateShoppingList.bind(this)}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"shopping-list\" title={(\r\n            <span>\r\n              Shopping List <Badge variant=\"primary\">Beta</Badge>\r\n            </span>\r\n          )}>\r\n            <div className=\"recipe-tab\">\r\n              <ShoppingList\r\n                shoppingList={myShoppingList}\r\n              />\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  myRecipeList: get(state, 'recipeList.myRecipeList', []),\r\n  myShoppingList: get(state, 'recipeList.myShoppingList', [])\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveMyRecipeList: recipeList => dispatch(recipeActions.saveMyRecipeList(recipeList)),\r\n  clearMyRecipeList: () => dispatch(recipeActions.clearMyRecipeList()),\r\n  createMyShoppingList: recipeList => dispatch(recipeActions.createMyShoppingList(recipeList)),\r\n  clearMyShoppingList: () => dispatch(recipeActions.clearMyShoppingList())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeHelper)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport { get } from 'lodash'\r\nimport * as actions from '../store/local/actions'\r\nimport Navigation from './navigation/Navigation'\r\nimport RecipeHelper from './RecipeHelper'\r\n\r\nconst externalLink = (url, text) => (\r\n  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    {text}\r\n  </a>\r\n)\r\n\r\nclass XivCraftingGatheringHelper extends React.Component {\r\n  componentDidMount () {\r\n    this.props.getLocalClassData()\r\n    this.props.getLocalCharacterData()\r\n  }\r\n\r\n  render () {\r\n    const { characterData, craftingClassData } = this.props\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Navigation\r\n          characterData={characterData}\r\n          craftingClassData={craftingClassData}\r\n        />\r\n        <Container fluid>\r\n          <RecipeHelper characterData={characterData} craftingClassData={craftingClassData} />\r\n          <hr />\r\n          <div className=\"tc text-muted\">\r\n            Created by {externalLink('https://na.finalfantasyxiv.com/lodestone/character/22858010/',\r\n            'Xythyt')} with the help of {externalLink('https://www.xivapi.com', 'XIVAPI')}.\r\n            <br />\r\n            Version {process.env.REACT_APP_VERSION}\r\n          </div>\r\n        </Container>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return ({\r\n    craftingClassData: get(state, 'local.classData'),\r\n    characterData: get(state, 'local.characterData')\r\n  })\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLocalCharacterData: () => dispatch(actions.getLocalCharacterData()),\r\n  getLocalClassData: () => dispatch(actions.getLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(XivCraftingGatheringHelper)\r\n","import { get } from 'lodash'\r\nimport * as LocalStorage from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  classData: LocalStorage.getDefaultCraftingClasses()\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case T.LOCAL_CLASS_DATA_STORE:\r\n    case T.LOCAL_CLASS_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        classData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        characterData: undefined\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_STORE:\r\n    case T.LOCAL_CHARACTER_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CLASS_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        classData: LocalStorage.getDefaultCraftingClasses()\r\n      }\r\n    case T.LODESTONE_CHARACTER_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'payload')\r\n      }\r\n    case T.API_REQUEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as LocalStorageService from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  myRecipeList: LocalStorageService.getMyRecipeList(),\r\n  myShoppingList: LocalStorageService.getMyShoppingList()\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case T.SHOPPING_LIST_CREATE:\r\n      return {\r\n        ...state,\r\n        myShoppingList: action.shoppingList\r\n      }\r\n    case T.SHOPPING_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myShoppingList: []\r\n      }\r\n    case T.RECIPE_LIST_SAVE:\r\n      return {\r\n        ...state,\r\n        myRecipeList: action.recipeList\r\n      }\r\n    case T.RECIPE_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myRecipeList: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './local/reducer'\r\nimport recipeListReducer from './recipeList/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  local: reducer,\r\n  recipeList: recipeListReducer\r\n})\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n)\r\n","import React from 'react'\r\nimport XivCraftingGatheringHelper from './XivCraftingGatheringHelper'\r\nimport Provider from 'react-redux/es/components/Provider'\r\nimport store from '../store'\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n        <XivCraftingGatheringHelper />\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport './styles/index.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}