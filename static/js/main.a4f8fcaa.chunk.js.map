{"version":3,"sources":["service/localStorage.js","service/xivApi.js","store/local/types.js","store/local/actions.js","components/navigation/LodestoneCharacterModal.jsx","components/navigation/LodestoneCharacterMenu.jsx","components/navigation/Navigation.jsx","components/recipes/RecipeSearchForm.jsx","components/common/Pagination.jsx","components/recipes/RecipeSearchResult.jsx","components/recipes/RecipeSearch.jsx","components/recipes/MyList.jsx","store/recipeList/types.js","service/recipe.js","store/recipeList/actions.js","components/common/SortableTableHeaderCell.jsx","components/common/XivIcon.jsx","components/recipes/ShoppingList.jsx","components/calculator/FilterDropdown.jsx","service/calculations.js","components/calculator/CalculationsTableHeader.jsx","components/calculator/CalculationsTableBody.jsx","components/calculator/FirstTimeImport.jsx","components/calculator/CraftingGatheringCalculator.jsx","components/RecipeHelper.jsx","components/common/LoadingOverlay.jsx","components/XivCraftingGatheringHelper.jsx","store/local/reducer.js","store/recipeList/reducer.js","store/index.js","components/App.jsx","index.js"],"names":["KEYS","CHARACTER_DATA","CRAFTING_CLASS_DATA","MY_RECIPE_LIST","MY_SHOPPING_LIST","CURRENT_TAB","OWNED_ITEMS","get","key","defaultValue","data","localStorage","getItem","JSON","parse","store","setItem","stringify","clear","removeItem","retrieveAndUpdateCraftingClassData","defaultCraftingClasses","getDefaultCraftingClasses","storedData","craftingClasses","result","forEach","defaultCraftingClass","storedCraftingClass","_find","c","abbreviation","classDiffs","_filter","diff","d","type","length","applyChanges","levelingGuideDiffs","push","retrieveAndUpdateCharacterData","updateCraftingClassDataWithCharacterData","classJobCategories","craftingClassData","characterData","_values","_get","_includes","_map","lodestoneClassData","_set","totalExperience","CRAFTING_CLASSES","currentLevel","currentExperience","experiencePerItem","BASE_URL","getIconUrl","iconRelativePath","concat","findCharacterByServerAndName","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","server","name","page","_args","arguments","wrap","_context","prev","next","undefined","axios","sent","abrupt","stop","_x","_x2","apply","this","getCharacterById","_ref2","_callee2","id","_context2","set","_x3","recipeSearch","_ref3","_callee3","searchString","options","columns","_options$exact","exact","_options$page","_options$includeMaste","includeMasterRecipes","request","_args3","_context3","toLower","replace","indexes","body","query","bool","must","wildcard","NameCombined_en","size","from","sort","RecipeLevelTable.ClassJobLevel","limit","match","SecretRecipeBookTargetID","isArray","minimum_should_match","should","map","ClassJob.Abbreviation_en","post","getRecipesById","_ref4","_callee4","recipeIds","i","_context4","params","ids","join","_x4","getItemsById","_ref5","_callee5","itemIds","_context5","_x5","LOCAL_CLASS_DATA_RETRIEVAL","LOCAL_CLASS_DATA_STORE","LOCAL_CLASS_DATA_CLEAR","LOCAL_CHARACTER_DATA_RETRIEVAL","LOCAL_CHARACTER_DATA_STORE","LOCAL_CHARACTER_DATA_CLEAR","LODESTONE_CHARACTER_DATA_REQUEST","LODESTONE_CHARACTER_DATA_SUCCESS","API_REQUEST_FAILURE","lodestoneCharacterDataRequest","characterId","T","apiRequestSuccess","payload","getLocalClassData","dispatch","localData","localClassDataRetrieve","LocalStorage","saveLocalClassData","classData","clearLocalClassData","saveLocalCharacterData","getLocalCharacterData","localCharacterDataRetrieve","clearLocalCharacterData","getLodestoneCharacterData","XivApi","t0","error","LodestoneCharacterModal","state","event","_event$target","target","value","setState","defineProperty","preventDefault","loading","performSearch","lodestoneResults","onHide","props","handleClose","_this2","show","_this$state2","results","prevPage","nextPage","react_default","createElement","Modal","bind","Form","onSubmit","handleSearch","onReset","Header","closeButton","Title","Body","Group","Label","Control","as","onChange","handleSetField","XIV_SERVERS","Button","disabled","className","Spinner","animation","variant","Fragment","char","ID","Name","Avatar","Check","htmlFor","src","alt","onClick","Footer","handleSubmitCharacterSelection","React","Component","defaultProps","getDropdownTitle","_characterData$Charac","Character","LodestoneCharacterMenu","showModal","_this$props","searchLodestoneCharacterData","importText","NavDropdown","alignRight","title","Item","Divider","handleModalToggle","navigation_LodestoneCharacterModal","connect","Navigation","Navbar","bg","sticky","NavbarBrand","Nav","navigation_LodestoneCharacterMenu","RecipeSearchForm","craftingClassSelections","ButtonGroup","updateCraftingClassSelections","prevProps","prevState","snapshot","recipeSearchClasses","isEqual","handleToggleRecipeSearchClass","buttons","filter","cc","OverlayTrigger","overlay","Tooltip","includes","icon","_this$props2","handleChange","handleReset","handleSubmit","handleToggleRecipeIncludeMaster","recipeSearchIncludeMaster","handleToggleRecipeSearchExact","recipeSearchExact","recipeSearchIsInvalid","recipeSearchString","isInvalid","FormControl","Feedback","checked","Pagination","currentPage","handlePageChange","totalPages","minPage","Math","max","min","maxPage","activePage","option","paginate","RecipeSearchResult","_this","clearRecipeSearch","handleTabChange","handleToggleListItem","myList","pagination","recipeList","pageTotal","pageCurrent","Table","hover","striped","colSpan","Pagination_Pagination","r","iconUrl","craftingClassName","level","isOnList","find","item","index_es","faMinusSquare","faPlusSquare","ready","RecipeSearch","recipeSearchResults","RecipeSearchForm_RecipeSearchForm","RecipeSearchResult_RecipeSearchResult","MyList","handleClearList","handleUpdateQuantity","list","k","Icon","ClassJob","NameEnglish","RecipeLevelTable","ClassJobLevel","quantity","RECIPE_SEARCH_REQUEST","RECIPE_SEARCH_SUCCESS","RECIPE_SEARCH_FAILURE","RECIPE_SEARCH_CLEAR","RECIPE_LIST_CLEAR","RECIPE_LIST_SAVE","SHOPPING_LIST_CREATE","SHOPPING_LIST_CLEAR","getIngredientListForRecipes","ingredientsGatherable","ingredientsCrafted","ingredientsOther","ingredientsPurchased","itemData","getAndSortRecipeResults","XivApiService","foundItem","ig","io","val","addGatheringItemData","orderBy","uniqBy","ic","gatheringItemId","filteredGatheringPoints","GATHERING_ITEM_POINTS","point","startsWith","pointData","getPointData","itemId","filteredFishingSpots","FISHING_SPOTS","spot","path","pd","namePath","areaPath","regionPath","levelPath","typePath","area","region","gatheringClass","Mining","Quarrying","Logging","Harvesting","hasFishingSpotMatch","matched","fishingId","recipeResults","nextRecipeResults","recipe","t1","t2","rr","recipeListEntry","rle","_loop","itemCategory","amount","gatheringMapNode","ITEM_TO_GATHERING_ITEM_MAPPING","mapping","ingredientRecipe","fishingSpotMatch","existingIngredientGatherable","existingAmount","existingIngredientCrafted","ir","existingIngredientOther","ip","_x6","recipeSearchRequest","apiRequestFailure","saveMyRecipeList","myRecipeList","recipeListSave","createMyShoppingList","clearMyRecipeList","clearMyShoppingList","RecipeListService","myShoppingList","shoppingList","SortableTableHeaderCell","text","sortFunc","applySorting","style","cursor","faSort","XivIcon","badge","image","tooltip","htmlImage","url","altText","content","htmlBadge","Badge","cx","ShoppingList","ingredientsGatherableSort","func","direction","itemsOwned","updateGatherableIngredients","gatherableStateVars","objectSpread","ingredientsCrystals","newIngredientsGatherableSort","obtainedItems","_window","window","scrollX","scrollY","clone","pull","x","y","scrollTo","_this$props$shoppingL","_this$state","XivIcon_XivIcon","common_SortableTableHeaderCell","handleApplyIngredientsGatherableSort","handleOwnershipSort","locationSelectId","gatheringType","owned","handleLocationUpdate","handleToggleItemOwned","craftClass","craftLevel","FilterDropdown","label","applyFilterFunc","DropdownButton","Dropdown","craftingClass","calculateRemainingExp","currentExp","totalExp","calculateRemainingItems","remainingExp","expPerItem","ceil","calculateProgressPercentage","floor","tableHeaders","CalculationsTableHeader","applySortFunc","h","CalculationsTableBody","focusedRow","levelingGuide","LEVELING_GUIDE_LINKS","g","matchedPage","pages","p","maxLevel","minLevel","updateField","toNumber","focused","remainingExperience","remainingItems","progressPercentage","popover","Popover","href","getLevelingGuidePageUrl","rel","onFocus","handleRowFocus","onBlur","trigger","placement","rootClose","faIcon","validateNumericFieldChange","ProgressBar","now","FirstTimeImport","timer","startTimer","endTimer","timeLeft","setInterval","executeTimer","clearInterval","timeLeftMessage","CraftingGatheringCalculator","sortDirection","filterFunc","innerText","targetCraftingClass","otherCraftingClasses","EXP_PER_LEVEL","sortedAndFilteredCraftingClassData","getSortedCraftingClassData","getFilteredCraftingClassData","FirstTimeImport_FirstTimeImport","FilterDropdown_FilterDropdown","applyFilter","CalculationsTableHeader_CalculationsTableHeader","applySort","calculator_CalculationsTableBody","RecipeHelper","lastSearch","cloneDeep","splice","indexOf","sortBy","s","toLowerCase","_this$setState","searchRecipes","newValue","document","getElementsByName","focus","search","currentTab","omit","myClonedList","reject","_this$props3","Tabs","activeKey","onSelect","Tab","eventKey","calculator_CraftingGatheringCalculator","RecipeSearch_RecipeSearch","handleFieldUpdate","handleClear","toggleListItem","MyList_MyList","ShoppingList_ShoppingList","recipeActions","string","LoadingOverlay","externalLink","XivCraftingGatheringHelper","Navigation_Navigation","Container","fluid","components_RecipeHelper","process","LoadingOverlay_LoadingOverlay","keys","actions","INITIAL_STATE","rootReducer","combineReducers","local","action","unset","createStore","applyMiddleware","thunk","App","Provider","components_XivCraftingGatheringHelper","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.a4f8fcaa.chunk.js","sourcesContent":["import CRAFTING_CLASSES from '../data/crafting-classes'\r\nimport { applyChanges, diff } from 'diff-json'\r\nimport {\r\n  filter as _filter,\r\n  find as _find,\r\n  get as _get,\r\n  includes as _includes,\r\n  map as _map,\r\n  set as _set,\r\n  values as _values\r\n} from 'lodash'\r\n\r\nconst KEYS = {\r\n  CHARACTER_DATA: 'character',\r\n  CRAFTING_CLASS_DATA: 'craftingClasses',\r\n  MY_RECIPE_LIST: 'myRecipeList',\r\n  MY_SHOPPING_LIST: 'myShoppingList',\r\n  CURRENT_TAB: 'currentTab',\r\n  OWNED_ITEMS: 'ownedItems'\r\n}\r\n\r\nfunction get (key, defaultValue) {\r\n  const data = localStorage.getItem(key)\r\n  if (!!data) {\r\n    return JSON.parse(data)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nfunction store (key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data))\r\n}\r\n\r\nfunction clear (key) {\r\n  if (!!localStorage.getItem(key)) {\r\n    localStorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport function getObtainedItems () {\r\n  return get(KEYS.OWNED_ITEMS, [])\r\n}\r\n\r\nexport function storeObtainedItems (obtainedItems) {\r\n  store(KEYS.OWNED_ITEMS, obtainedItems)\r\n}\r\n\r\nexport function getCurrentTab () {\r\n  return get(KEYS.CURRENT_TAB)\r\n}\r\n\r\nexport function storeCurrentTab (currentTab) {\r\n  store(KEYS.CURRENT_TAB, currentTab)\r\n}\r\n\r\nexport function getMyRecipeList () {\r\n  return get(KEYS.MY_RECIPE_LIST, [])\r\n}\r\n\r\nexport function getMyShoppingList () {\r\n  return get(KEYS.MY_SHOPPING_LIST, {})\r\n}\r\n\r\nexport function storeCharacterData (characterData) {\r\n  store(KEYS.CHARACTER_DATA, characterData)\r\n}\r\n\r\nexport function storeCraftingClassData (craftingClasses) {\r\n  store(KEYS.CRAFTING_CLASS_DATA, craftingClasses)\r\n}\r\n\r\nexport function storeMyRecipeList (myRecipeList) {\r\n  store(KEYS.MY_RECIPE_LIST, myRecipeList)\r\n}\r\n\r\nexport function storeMyShoppingList (myShoppingList) {\r\n  store(KEYS.MY_SHOPPING_LIST, myShoppingList)\r\n}\r\n\r\nexport function clearCharacterData () {\r\n  clear(KEYS.CHARACTER_DATA)\r\n}\r\n\r\nexport function clearCraftingClassData () {\r\n  clear(KEYS.CRAFTING_CLASS_DATA)\r\n}\r\n\r\nexport function clearMyRecipeList () {\r\n  clear(KEYS.MY_RECIPE_LIST)\r\n}\r\n\r\nexport function clearMyShoppingList () {\r\n  clear(KEYS.MY_SHOPPING_LIST)\r\n}\r\n\r\nexport function clearObtainedItems () {\r\n  clear(KEYS.OWNED_ITEMS)\r\n}\r\n\r\nexport function retrieveAndUpdateCraftingClassData () {\r\n  // get the default crafting class data\r\n  const defaultCraftingClasses = getDefaultCraftingClasses()\r\n\r\n  // retrieve the stored data from local storage\r\n  const storedData = localStorage.getItem(KEYS.CRAFTING_CLASS_DATA)\r\n\r\n  // if there is no stored data, return the default data\r\n  if (!storedData) {\r\n    return defaultCraftingClasses\r\n  }\r\n\r\n  // if there is stored data, convert it to JSON\r\n  const craftingClasses = JSON.parse(storedData)\r\n\r\n  // create a variable for the result\r\n  const result = []\r\n\r\n  // cycle through all \"default\" classes\r\n  defaultCraftingClasses.forEach(defaultCraftingClass => {\r\n    // retrieve the matching stored class\r\n    const storedCraftingClass = _find(craftingClasses, c => c.abbreviation === defaultCraftingClass.abbreviation)\r\n\r\n    // if there is no matching stored class data, add the default for this class to the result\r\n    if (!storedCraftingClass) {\r\n      result.push(defaultCraftingClass)\r\n      return\r\n    }\r\n\r\n    // get any added data to the default data set and apply it to the stored data\r\n    const classDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.type === 'add')\r\n    if (classDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, classDiffs)\r\n    }\r\n\r\n    // get any leveling guide data and remove it from stored data\r\n    const levelingGuideDiffs = _filter(diff(storedCraftingClass, defaultCraftingClass), d => d.key === 'levelingGuide')\r\n    if (levelingGuideDiffs.length > 0) {\r\n      applyChanges(storedCraftingClass, levelingGuideDiffs)\r\n    }\r\n\r\n    // add this record to the result to return\r\n    result.push(storedCraftingClass)\r\n  })\r\n\r\n  // send back the updated stored data\r\n  return result\r\n}\r\n\r\nexport function retrieveAndUpdateCharacterData () {\r\n  // get the stored character data\r\n  const storedData = localStorage.getItem(KEYS.CHARACTER_DATA)\r\n\r\n  // if there is no character data, return undefined\r\n  if (!storedData) {\r\n    return undefined\r\n  }\r\n\r\n  // if there is, update it\r\n  // TBD\r\n\r\n  // return the character data\r\n  return JSON.parse(storedData)\r\n}\r\n\r\nexport function updateCraftingClassDataWithCharacterData () {\r\n  const classJobCategories = ['Disciple of the Land', 'Disciple of the Hand']\r\n  const craftingClassData = retrieveAndUpdateCraftingClassData()\r\n  const characterData = _filter(_values(_get(retrieveAndUpdateCharacterData(), 'Character.ClassJobs')),\r\n    c => _includes(classJobCategories, _get(c, 'Class.ClassJobCategory.Name')))\r\n\r\n  return _map(craftingClassData, c => {\r\n    const lodestoneClassData = _find(characterData, d => _get(d, 'Class.Abbreviation') === _get(c, 'abbreviation'))\r\n    _set(c, 'currentLevel', _get(lodestoneClassData, 'Level', 1))\r\n    _set(c, 'currentExperience', _get(lodestoneClassData, 'ExpLevel', 0))\r\n    _set(c, 'totalExperience', _get(lodestoneClassData, 'ExpLevelMax', c.totalExperience))\r\n    return c\r\n  })\r\n}\r\n\r\nexport function getDefaultCraftingClasses () {\r\n  return _map(CRAFTING_CLASSES, c => {\r\n    c.currentLevel = 1\r\n    c.currentExperience = 0\r\n    c.experiencePerItem = 1\r\n    c.totalExperience = 300\r\n    return c\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { map, get, isArray, set, toLower } from 'lodash'\r\n// import UNLOADED_CHARACTER from '../data/mock/unloadedCharacter'\r\n\r\n// const PRIVATE_KEY = '257f7d4532a74f15a429b5262d51d0f3938964ea78124b1ca8da9459accc15b7'\r\nconst BASE_URL = 'https://xivapi.com'\r\n\r\n// this is for testing\r\n// let attempt = 0\r\n\r\n/**\r\n * Retrieves the URL of an icon provided in a response from XIVAPI.\r\n * @param   {string}  iconRelativePath  The relative path of the icon.\r\n * @returns {string}                    The full URL path of the icon.\r\n */\r\nexport const getIconUrl = iconRelativePath => `${BASE_URL}${iconRelativePath}`\r\n\r\n/**\r\n * Finds a character by server and name.\r\n *\r\n * @param   {string}  server  The name of the server.\r\n * @param   {string}  name    The name of the character.\r\n * @param   {number}  page    The page of results to view.\r\n * @returns {object}          An object containing the search results.\r\n */\r\nexport const findCharacterByServerAndName = async (server, name, page = 1) => {\r\n  const result = await axios.get(`${BASE_URL}/character/search?name=${name}&server=${server}&page=${page}`)\r\n  return get(result, 'data', [])\r\n}\r\n\r\n/**\r\n * Retrieves character data by the character's ID.\r\n *\r\n * @param   {number}  id  The ID of the character to retrieve.\r\n * @returns {object}      An object containing the character's data.\r\n */\r\nexport const getCharacterById = async id => {\r\n  // use this for normal functionality\r\n  const result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\r\n\r\n  // use this when testing the \"first import\" message\r\n  // console.log('this is attempt', attempt.toString())\r\n  // let result\r\n  // if (!attempt) {\r\n  //   result = { data: UNLOADED_CHARACTER }\r\n  // } else {\r\n  //   result = await axios.get(`${BASE_URL}/character/${id}?extended=1`)\r\n  // }\r\n  // attempt++\r\n\r\n  // use this when testing the behavior when character does not load from Lodestone\r\n  // const result = { data: UNLOADED_CHARACTER }\r\n\r\n  set(result, 'data.characterId', id)\r\n  return get(result, 'data', {})\r\n}\r\n\r\n/**\r\n * Searches for recipes via the XIPAPI.\r\n *\r\n * @param   {string}          searchString                    The string for which to search.\r\n * @param   {object}          [options]                       Options to apply to this search.\r\n * @param   {boolean}         [options.exact]                 Whether we are searching for the exact string (true) or\r\n *                                                              should substitute spaces for wildcards (false).\r\n * @param   {number}          [options.page]                  The page on which to begin the search.\r\n * @param   {string|[string]} [options.abbreviation]          Any crafting class abbreviations that should be queried.\r\n * @param   {boolean}         [options.includeMasterRecipes]  Indicates whether master recipes should be included.\r\n * @returns {object}                                          An object containing search results.\r\n */\r\nexport const recipeSearch = async (searchString = '', options = {}) => {\r\n  const indexes = 'recipe'\r\n  const size = 20\r\n  const columns = [\r\n    'ID',\r\n    'ClassJob.Abbreviation_en',\r\n    'ClassJob.Icon',\r\n    'ClassJob.NameEnglish',\r\n    'RecipeLevelTable.ClassJobLevel',\r\n    'Name',\r\n    'Icon'\r\n  ]\r\n\r\n  const { exact = false, page = 1, includeMasterRecipes = false } = options\r\n\r\n  searchString = toLower(searchString)\r\n\r\n  if (!exact) {\r\n    searchString = searchString.replace(' ', '*')\r\n  }\r\n\r\n  const request = {\r\n    indexes,\r\n    body: {\r\n      query: {\r\n        bool: {\r\n          must: [\r\n            {\r\n              wildcard: {\r\n                'NameCombined_en': `*${searchString}*`\r\n              }\r\n            },\r\n            // {\r\n            //   match: {\r\n            //     'SecretRecipeBookTargetID': 0\r\n            //   }\r\n            // },\r\n            // {\r\n            //   match: {\r\n            //     'StatusRequiredTargetID': 0\r\n            //   }\r\n            // }\r\n          ]\r\n        }\r\n      },\r\n      size,\r\n      from: size * (page - 1),\r\n      sort: [\r\n        {\r\n          'RecipeLevelTable.ClassJobLevel': 'asc'\r\n        }\r\n      ]\r\n    },\r\n    columns,\r\n    limit: size,\r\n    page\r\n  }\r\n\r\n  if (!includeMasterRecipes) {\r\n    request.body.query.bool.must.push({\r\n      match: {\r\n        'SecretRecipeBookTargetID': 0\r\n      }\r\n    })\r\n  }\r\n\r\n  if (!!options.abbreviation && !!options.abbreviation.length && options.abbreviation.length < 8) {\r\n    let { abbreviation } = options\r\n    const minimum_should_match = 1\r\n\r\n    abbreviation = isArray(abbreviation) ? abbreviation : [abbreviation]\r\n\r\n    request.body.query.bool.minimum_should_match = minimum_should_match\r\n    request.body.query.bool.should = map(abbreviation, a => ({\r\n      match: {\r\n        'ClassJob.Abbreviation_en': a\r\n      }\r\n    }))\r\n  }\r\n\r\n  const result = await axios.post(`${BASE_URL}/search`,\r\n    request\r\n  )\r\n  return get(result, 'data', {})\r\n}\r\n\r\n/**\r\n * Retrieves a list of recipes by their IDs.\r\n *\r\n * @param   {[number]}  recipeIds The IDs of the recipes that should be retrieved.\r\n * @returns {object}              An object containing the recipe data retrieved.\r\n */\r\nexport const getRecipesById = async recipeIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name'\r\n  ]\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    columns.push(`AmountIngredient${i}`)\r\n    columns.push(`ItemIngredient${i}.ID`)\r\n    columns.push(`ItemIngredient${i}.Icon`)\r\n    columns.push(`ItemIngredient${i}.Name`)\r\n    columns.push(`ItemIngredient${i}.ItemSearchCategoryTargetID`)\r\n    columns.push(`ItemIngredientRecipe${i}`)\r\n  }\r\n\r\n  const result = await axios.get(`${BASE_URL}/recipe`, {\r\n    params: {\r\n      ids: recipeIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n  return get(result, 'data', {})\r\n}\r\n\r\n/**\r\n * Retrieves a list of items by their IDs.\r\n *\r\n * @param   {[number]}  itemIds The IDs of the items that should be retrieved.\r\n * @returns {object}            An object containing the item data retrieved.\r\n */\r\nexport const getItemsById = async itemIds => {\r\n  const columns = [\r\n    'ID',\r\n    'Name',\r\n    'Icon',\r\n    'GameContentLinks'\r\n  ]\r\n\r\n  const result = await axios.get(`${BASE_URL}/item`, {\r\n    params: {\r\n      ids: itemIds.join(','),\r\n      columns: columns.join(',')\r\n    }\r\n  })\r\n\r\n  return get(result, 'data', {})\r\n}\r\n","const LODESTONE = 'LODESTONE'\r\nconst LOCAL = 'LOCAL'\r\n\r\nconst REQUEST = 'REQUEST'\r\nconst SUCCESS = 'SUCCESS'\r\nconst FAILURE = 'FAILURE'\r\n\r\nexport const LOCAL_CLASS_DATA_RETRIEVAL = `${LOCAL}_CLASS_DATA_RETRIEVAL`\r\nexport const LOCAL_CLASS_DATA_STORE = `${LOCAL}_CLASS_DATA_STORE`\r\nexport const LOCAL_CLASS_DATA_CLEAR = `${LOCAL}_CLASS_DATA_CLEAR`\r\n\r\nexport const LOCAL_CHARACTER_DATA_RETRIEVAL = `${LOCAL}_CHARACTER_DATA_RETRIEVAL`\r\nexport const LOCAL_CHARACTER_DATA_STORE = `${LOCAL}_CHARACTER_DATA_STORE`\r\nexport const LOCAL_CHARACTER_DATA_CLEAR = `${LOCAL}_CHARACTER_DATA_CLEAR`\r\n\r\nexport const LODESTONE_CHARACTER_DATA_REQUEST = `${LODESTONE}_CHARACTER_DATA_${REQUEST}`\r\nexport const LODESTONE_CHARACTER_DATA_SUCCESS = `${LODESTONE}_CHARACTER_DATA_${SUCCESS}`\r\nexport const API_REQUEST_FAILURE = `${LODESTONE}_CHARACTER_DATA_${FAILURE}`\r\n","import * as LocalStorage from '../../service/localStorage'\r\nimport * as XivApi from '../../service/xivApi'\r\nimport * as T from './types'\r\n\r\nconst localClassDataRetrieve = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localClassDataStore = localData => ({\r\n  type: T.LOCAL_CLASS_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localClassDataClear = () => ({\r\n  type: T.LOCAL_CLASS_DATA_CLEAR\r\n})\r\n\r\nconst localCharacterDataRetrieve = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_RETRIEVAL,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataStore = localData => ({\r\n  type: T.LOCAL_CHARACTER_DATA_STORE,\r\n  localData\r\n})\r\n\r\nconst localCharacterDataClear = () => ({\r\n  type: T.LOCAL_CHARACTER_DATA_CLEAR\r\n})\r\n\r\nconst lodestoneCharacterDataRequest = characterId => ({\r\n  type: T.LODESTONE_CHARACTER_DATA_REQUEST,\r\n  characterId\r\n})\r\n\r\nconst apiRequestSuccess = (type, payload) => ({\r\n  type,\r\n  payload\r\n})\r\n\r\nconst apiRequestFailure = (type, error) => ({\r\n  type,\r\n  error\r\n})\r\n\r\nexport const getLocalClassData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCraftingClassData()\r\n    dispatch(localClassDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const saveLocalClassData = classData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCraftingClassData(classData)\r\n    dispatch(localClassDataStore(classData))\r\n  }\r\n}\r\n\r\nexport const clearLocalClassData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCraftingClassData()\r\n    dispatch(localClassDataClear())\r\n  }\r\n}\r\n\r\nexport const saveLocalCharacterData = characterData => {\r\n  return dispatch => {\r\n    LocalStorage.storeCharacterData(characterData)\r\n    dispatch(localCharacterDataStore(characterData))\r\n  }\r\n}\r\n\r\nexport const getLocalCharacterData = () => {\r\n  return dispatch => {\r\n    const localData = LocalStorage.retrieveAndUpdateCharacterData()\r\n    dispatch(localCharacterDataRetrieve(localData))\r\n  }\r\n}\r\n\r\nexport const clearLocalCharacterData = () => {\r\n  return dispatch => {\r\n    LocalStorage.clearCharacterData()\r\n    dispatch(localCharacterDataClear())\r\n  }\r\n}\r\n\r\nexport const getLodestoneCharacterData = characterId => {\r\n  return async dispatch => {\r\n    dispatch(lodestoneCharacterDataRequest(characterId))\r\n    try {\r\n      const payload = await XivApi.getCharacterById(characterId)\r\n      dispatch(apiRequestSuccess(T.LODESTONE_CHARACTER_DATA_SUCCESS, payload))\r\n      dispatch(saveLocalCharacterData(payload))\r\n      dispatch(saveLocalClassData(LocalStorage.updateCraftingClassDataWithCharacterData()))\r\n      dispatch(getLocalClassData())\r\n    } catch (err) {\r\n      dispatch(apiRequestFailure(T.API_REQUEST_FAILURE, err))\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap'\r\nimport { get, map as _map } from 'lodash'\r\nimport XIV_SERVERS from '../../data/xiv-servers'\r\nimport * as XivApi from '../../service/xivApi'\r\n\r\nclass LodestoneCharacterModal extends React.Component {\r\n  state = {}\r\n\r\n  handleSetField (event) {\r\n    const { target: { name, value } } = event\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSearch (page = 1, event) {\r\n    !!event && event.preventDefault()\r\n    this.setState({\r\n      loading: true,\r\n      page\r\n    }, this.performSearch)\r\n  }\r\n\r\n  async performSearch () {\r\n    const { name, server, page } = this.state\r\n    const result = await XivApi.findCharacterByServerAndName(server, name, page)\r\n    this.setState({\r\n      lodestoneResults: result,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  handleClose () {\r\n    const { onHide } = this.props\r\n    this.setState({\r\n      name: undefined,\r\n      server: undefined,\r\n      lodestoneResults: undefined,\r\n      characterId: undefined\r\n    }, onHide)\r\n  }\r\n\r\n  handleSubmitCharacterSelection () {\r\n    const { getLodestoneCharacterData } = this.props\r\n    const { characterId } = this.state\r\n\r\n    getLodestoneCharacterData(characterId)\r\n    this.handleClose()\r\n  }\r\n\r\n  render () {\r\n    const { show } = this.props\r\n    const { characterId, loading, lodestoneResults, name, server } = this.state\r\n\r\n    const results = get(lodestoneResults, 'Results', [])\r\n    const prevPage = get(lodestoneResults, 'Pagination.PagePrev')\r\n    const nextPage = get(lodestoneResults, 'Pagination.PageNext')\r\n\r\n    return (\r\n      <Modal show={show} onHide={this.handleClose.bind(this)}>\r\n        <Form\r\n          onSubmit={this.handleSearch.bind(this, 1)}\r\n          onReset={this.handleClose.bind(this)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Import Character Data\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Label>Server</Form.Label>\r\n              <Form.Control name=\"server\" as=\"select\" onChange={this.handleSetField.bind(this)}>\r\n                <option>Choose a Server</option>\r\n                {_map(XIV_SERVERS, (server, key) => (\r\n                  <option key={key} value={server}>{server}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control name=\"name\" type=\"text\" onChange={this.handleSetField.bind(this)} />\r\n            </Form.Group>\r\n            <Button type=\"submit\" disabled={!name || !server}>\r\n              Search\r\n            </Button>\r\n            <hr />\r\n            {!!loading && (\r\n              <div className=\"fullWidth text-center\">\r\n                <Spinner animation=\"grow\" variant=\"danger\" />\r\n                <Spinner animation=\"grow\" variant=\"warning\" />\r\n                <Spinner animation=\"grow\" variant=\"success\" />\r\n              </div>\r\n            )}\r\n            {!loading && !results.length && (\r\n              <div>\r\n                No results available.\r\n              </div>\r\n            )}\r\n            {!loading && !!results.length && (\r\n              <React.Fragment>\r\n                <div className=\"lodestoneResults\">\r\n                  {results.map((char, key) => {\r\n                    const { ID, Name, Avatar } = char\r\n                    return (\r\n                      <div\r\n                        key={key}\r\n                        className=\"flex justify-between items-center\"\r\n                      >\r\n                        <Form.Check\r\n                          id={ID}\r\n                          type=\"radio\"\r\n                          name=\"characterId\"\r\n                          value={ID}\r\n                          onChange={this.handleSetField.bind(this)}\r\n                        />\r\n                        <label htmlFor={ID}>{Name}</label>\r\n                        <label htmlFor={ID}>\r\n                          <img className=\"avatar\" src={Avatar} alt={Name} />\r\n                        </label>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n                <div className=\"flex justify-between items-center pt2\">\r\n                  <div className=\"w-50 tl\">\r\n                    {!!prevPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, prevPage)}>\r\n                        Prev Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"w-50 tr\">\r\n                    {nextPage && (\r\n                      <Button type=\"button\" onClick={this.handleSearch.bind(this, nextPage)}>\r\n                        Next Page\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"reset\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"primary\"\r\n              disabled={!characterId}\r\n              onClick={this.handleSubmitCharacterSelection.bind(this)}\r\n            >\r\n              Load Data\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired\r\n}\r\n\r\nLodestoneCharacterModal.defaultProps = {\r\n  show: false\r\n}\r\n\r\nexport default LodestoneCharacterModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { get } from 'lodash'\r\nimport { NavDropdown } from 'react-bootstrap'\r\nimport { clearLocalCharacterData, clearLocalClassData, getLodestoneCharacterData } from '../../store/local/actions'\r\nimport LodestoneCharacterModal from './LodestoneCharacterModal'\r\n\r\nconst getDropdownTitle = characterData => {\r\n  if (get(characterData, 'Character.Avatar')) {\r\n    const { Character: { Avatar, Name } } = characterData\r\n    return (\r\n      <span className=\"items-center\">\r\n        {Name}\r\n        <span className=\"ml2\"><img src={Avatar} alt={Name} className=\"avatar\" /></span>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return 'Options'\r\n}\r\n\r\nclass LodestoneCharacterMenu extends React.Component {\r\n  state = {\r\n    showModal: false\r\n  }\r\n\r\n  handleModalToggle (showModal) {\r\n    this.setState({\r\n      showModal: showModal\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      characterData,\r\n      clearLocalCharacterData,\r\n      clearLocalClassData,\r\n      getLodestoneCharacterData,\r\n      lodestoneResults,\r\n      searchLodestoneCharacterData\r\n    } = this.props\r\n\r\n    const importText = `Import ${!characterData ? '' : 'Different'} Character Data`.replace('  ', ' ')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavDropdown\r\n          alignRight\r\n          title={getDropdownTitle(characterData)}\r\n        >\r\n          {!!characterData && (\r\n            <React.Fragment>\r\n              <NavDropdown.Item onClick={getLodestoneCharacterData.bind(this, characterData.characterId)}>\r\n                Refresh Character Data\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n            </React.Fragment>\r\n          )}\r\n          <NavDropdown.Item onClick={this.handleModalToggle.bind(this, true)}>\r\n            {importText}\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={clearLocalClassData}>\r\n            Clear Crafting Class Data\r\n          </NavDropdown.Item>\r\n          {!!characterData && (\r\n            <NavDropdown.Item onClick={clearLocalCharacterData}>\r\n              Clear Character Data\r\n            </NavDropdown.Item>\r\n          )}\r\n        </NavDropdown>\r\n        <LodestoneCharacterModal\r\n          lodestoneResults={lodestoneResults}\r\n          onHide={this.handleModalToggle.bind(this, false)}\r\n          searchLodestoneCharacterData={searchLodestoneCharacterData}\r\n          show={this.state.showModal}\r\n          getLodestoneCharacterData={getLodestoneCharacterData}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLodestoneCharacterMenu.propTypes = {\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId)),\r\n  clearLocalCharacterData: () => dispatch(clearLocalCharacterData()),\r\n  clearLocalClassData: () => dispatch(clearLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LodestoneCharacterMenu)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Nav, Navbar, NavbarBrand } from 'react-bootstrap'\r\nimport LodestoneCharacterMenu from './LodestoneCharacterMenu'\r\n\r\nexport default class Navigation extends React.Component {\r\n  render () {\r\n    const { characterData } = this.props\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <NavbarBrand>\r\n          FFXIV Crafting & Gathering Helper\r\n        </NavbarBrand>\r\n        <Nav className=\"mr-auto\" />\r\n        <Nav>\r\n          <LodestoneCharacterMenu\r\n            characterData={characterData}\r\n          />\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  characterData: PropTypes.shape(),\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, ButtonGroup, Form, FormControl, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { filter, forEach, includes, isEqual } from 'lodash'\r\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class RecipeSearchForm extends React.Component {\r\n  state = {\r\n    craftingClassSelections: <ButtonGroup />\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.updateCraftingClassSelections()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const { recipeSearchClasses } = this.props\r\n    if (!isEqual(recipeSearchClasses, prevProps.recipeSearchClasses)) {\r\n      this.updateCraftingClassSelections()\r\n    }\r\n  }\r\n\r\n  updateCraftingClassSelections () {\r\n    const { recipeSearchClasses, handleToggleRecipeSearchClass } = this.props\r\n\r\n    const buttons = []\r\n\r\n    forEach(filter(CRAFTING_CLASSES, cc => cc.type === 'crafting'), cc => {\r\n      buttons.push((\r\n        <OverlayTrigger\r\n          key={`overlayTrigger-${cc.abbreviation}`}\r\n          overlay={\r\n            <Tooltip id={`tooltip-${cc.abbreviation}`}>\r\n              {cc.name}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <Button\r\n            className=\"craftingClassSelections\"\r\n            key={cc.abbreviation}\r\n            value={cc.abbreviation}\r\n            variant={includes(recipeSearchClasses, cc.abbreviation) ? 'primary' : 'light'}\r\n          >\r\n            <img\r\n              src={getIconUrl(cc.icon)}\r\n              alt={cc.name}\r\n              onClick={handleToggleRecipeSearchClass.bind(this, cc.abbreviation)}\r\n            />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      ))\r\n    })\r\n\r\n    const craftingClassSelections = (\r\n      <ButtonGroup>\r\n        {buttons}\r\n      </ButtonGroup>\r\n    )\r\n\r\n    this.setState({\r\n      craftingClassSelections\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      handleChange,\r\n      handleReset,\r\n      handleSubmit,\r\n      handleToggleRecipeIncludeMaster,\r\n      handleToggleRecipeSearchExact,\r\n      recipeSearchExact,\r\n      recipeSearchIncludeMaster,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchString\r\n    } = this.props\r\n\r\n    const { craftingClassSelections } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Form onReset={handleReset} onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Enter Your Search Term(s)</Form.Label>\r\n            <Form.Control\r\n              as=\"input\"\r\n              name=\"recipeSearchString\"\r\n              value={recipeSearchString}\r\n              onChange={handleChange}\r\n              isInvalid={!!recipeSearchIsInvalid}\r\n            />\r\n            <FormControl.Feedback type=\"invalid\">\r\n              Please enter a search term.\r\n            </FormControl.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              Choose Crafting Classes to Search\r\n              <br />\r\n              <small>(if none are selected, all will be searched)</small>\r\n            </Form.Label>\r\n            <br />\r\n            {craftingClassSelections}\r\n          </Form.Group>\r\n          <div className=\"flex flex-row\">\r\n            <Form.Check onChange={handleToggleRecipeIncludeMaster} checked={recipeSearchIncludeMaster} />\r\n            <Form.Label>Include Master Recipes</Form.Label>\r\n          </div>\r\n          {false && (\r\n            <div className=\"flex flex-row\">\r\n              <Form.Check onChange={handleToggleRecipeSearchExact} checked={recipeSearchExact} />\r\n              <Form.Label>Search Exact Phrase</Form.Label>\r\n            </div>\r\n          )}\r\n          <Button type=\"reset\" variant=\"danger\" className=\"mr1\">Clear</Button>\r\n          <Button type=\"submit\" variant=\"primary\" className=\"ml1\">Go!</Button>\r\n        </Form>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleToggleRecipeIncludeMaster: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchClass: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchExact: PropTypes.func.isRequired,\r\n  recipeSearchClasses: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  recipeSearchExact: PropTypes.bool.isRequired,\r\n  recipeSearchIncludeMaster: PropTypes.bool.isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchString: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { isEqual } from 'lodash'\r\nimport { Button, ButtonGroup } from 'react-bootstrap'\r\n\r\nexport default class Pagination extends React.Component {\r\n  state = {}\r\n\r\n  paginate () {\r\n    const { currentPage, handlePageChange, totalPages } = this.props\r\n    const minPage = Math.max(1, Math.min(currentPage - 3, totalPages - 6))\r\n    const maxPage = Math.min(totalPages, minPage + 6)\r\n\r\n    const options = []\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"first\"\r\n          value={1}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === 1}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &lt;&lt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 1) {\r\n      options.push((\r\n        <Button\r\n          key=\"prev\"\r\n          value={Math.max(currentPage - 1, 1)}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === 1}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &lt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"prevGroup\"\r\n          value={Math.max(1, currentPage - 7)}\r\n          onClick={handlePageChange}\r\n          disabled={minPage === 1}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          ...\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    for (let i = minPage; i <= maxPage; i++) {\r\n      const activePage = i === currentPage\r\n      const option = (\r\n        <Button\r\n          key={i}\r\n          value={i}\r\n          onClick={handlePageChange}\r\n          variant={activePage ? 'primary' : 'light'}\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          {i}\r\n        </Button>\r\n      )\r\n\r\n      options.push(option)\r\n    }\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"nextGroup\"\r\n          value={Math.min(totalPages, currentPage + 7)}\r\n          onClick={handlePageChange}\r\n          disabled={maxPage === totalPages}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          ...\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 1) {\r\n      options.push((\r\n        <Button\r\n          key=\"next\"\r\n          value={Math.min(currentPage + 1, totalPages)}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === totalPages}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &gt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    if (totalPages > 7) {\r\n      options.push((\r\n        <Button\r\n          key=\"last\"\r\n          value={totalPages}\r\n          onClick={handlePageChange}\r\n          disabled={currentPage === totalPages}\r\n          variant=\"primary\"\r\n          // style={{ border: '1px solid #def' }}\r\n        >\r\n          &gt;&gt;\r\n        </Button>\r\n      ))\r\n    }\r\n\r\n    this.setState({\r\n      options\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.paginate()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    if (!isEqual(this.props, prevProps)) {\r\n      this.paginate()\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { options } = this.state\r\n    return (\r\n      <div>\r\n        <ButtonGroup>\r\n          {options}\r\n        </ButtonGroup>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  totalPages: PropTypes.number.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { find, get } from 'lodash'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare, faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\nimport Pagination from '../common/Pagination'\r\n\r\nexport default class RecipeSearchResult extends React.Component {\r\n  render () {\r\n    const {\r\n      clearRecipeSearch,\r\n      handlePageChange,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      myList,\r\n      pagination,\r\n      recipeList\r\n    } = this.props\r\n\r\n    if (!recipeList.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const pageTotal = get(pagination, 'PageTotal')\r\n    const pageCurrent = get(pagination, 'Page')\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <td colSpan={5} className=\"tc\">\r\n            <Pagination currentPage={pageCurrent} totalPages={pageTotal} handlePageChange={handlePageChange} />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Add/Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {recipeList.map((r, key) => {\r\n          const iconUrl = getIconUrl(get(r, 'Icon', ''))\r\n          const name = get(r, 'Name')\r\n          const craftingClassName = get(r, 'ClassJob.NameEnglish')\r\n          const level = get(r, 'RecipeLevelTable.ClassJobLevel')\r\n          const isOnList = !!find(myList, item => get(item, 'ID') === get(r, 'ID'))\r\n\r\n          return (\r\n            <tr key={key}>\r\n              <td><img src={iconUrl} alt={name} /></td>\r\n              <td>{craftingClassName}</td>\r\n              <td>{name}</td>\r\n              <td>{level}</td>\r\n              <td>\r\n                <Button onClick={handleToggleListItem.bind(this, r)} variant={isOnList ? 'danger' : 'success'}>\r\n                  <FontAwesomeIcon\r\n                    icon={isOnList ? faMinusSquare : faPlusSquare}\r\n                  />\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n        <tfoot>\r\n        <tr>\r\n          <td colSpan={5} className=\"tc\">\r\n            <Pagination currentPage={pageCurrent} totalPages={pageTotal} handlePageChange={handlePageChange} />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td colSpan={5}>\r\n            <div className=\"w-100 dib tc\">\r\n              <Button className=\"mh1\" onClick={clearRecipeSearch.bind(this)} variant=\"danger\">\r\n                Clear Recipe Search\r\n              </Button>\r\n              <Button className=\"mh1\" onClick={handleTabChange.bind(this, 'recipe-list')}>\r\n                Go to Recipe List\r\n              </Button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        </tfoot>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearchResult.propTypes = {\r\n  clearRecipeSearch: PropTypes.func.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  pagination: PropTypes.shape().isRequired,\r\n  recipeList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  ready: PropTypes.bool.isRequired\r\n}\r\n\r\nRecipeSearchResult.defaultProps = {\r\n  myList: [],\r\n  pagination: {},\r\n  recipeList: [],\r\n  ready: true\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { get } from 'lodash'\r\nimport RecipeSearchForm from './RecipeSearchForm'\r\nimport RecipeSearchResult from './RecipeSearchResult'\r\n\r\nexport default class RecipeSearch extends React.Component {\r\n  render () {\r\n    const {\r\n      clearRecipeSearch,\r\n      handleChange,\r\n      handlePageChange,\r\n      handleReset,\r\n      handleSubmit,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      handleToggleRecipeIncludeMaster,\r\n      handleToggleRecipeSearchClass,\r\n      handleToggleRecipeSearchExact,\r\n      myList,\r\n      recipeSearchClasses,\r\n      recipeSearchExact,\r\n      recipeSearchIncludeMaster,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchResults,\r\n      recipeSearchString\r\n    } = this.props\r\n\r\n    const pagination = get(recipeSearchResults, 'Pagination')\r\n    const recipeList = get(recipeSearchResults, 'Results')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <RecipeSearchForm\r\n          handleChange={handleChange}\r\n          handleReset={handleReset}\r\n          handleSubmit={handleSubmit}\r\n          handleToggleRecipeIncludeMaster={handleToggleRecipeIncludeMaster}\r\n          handleToggleRecipeSearchClass={handleToggleRecipeSearchClass}\r\n          handleToggleRecipeSearchExact={handleToggleRecipeSearchExact}\r\n          recipeSearchClasses={recipeSearchClasses}\r\n          recipeSearchExact={recipeSearchExact}\r\n          recipeSearchIncludeMaster={recipeSearchIncludeMaster}\r\n          recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n          recipeSearchString={recipeSearchString}\r\n        />\r\n        <hr />\r\n        <RecipeSearchResult\r\n          clearRecipeSearch={clearRecipeSearch}\r\n          handlePageChange={handlePageChange}\r\n          handleTabChange={handleTabChange}\r\n          handleToggleListItem={handleToggleListItem}\r\n          myList={myList}\r\n          pagination={pagination}\r\n          recipeList={recipeList}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRecipeSearch.propTypes = {\r\n  clearRecipeSearch: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handlePageChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  handleToggleRecipeIncludeMaster: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchClass: PropTypes.func.isRequired,\r\n  handleToggleRecipeSearchExact: PropTypes.func.isRequired,\r\n  myList: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  recipeSearchClasses: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  recipeSearchExact: PropTypes.bool.isRequired,\r\n  recipeSearchIncludeMaster: PropTypes.bool.isRequired,\r\n  recipeSearchIsInvalid: PropTypes.bool.isRequired,\r\n  recipeSearchResults: PropTypes.shape(),\r\n  recipeSearchString: PropTypes.string.isRequired\r\n}\r\n\r\nRecipeSearch.defaultProps = {\r\n  myList: [],\r\n  recipeSearchExact: false,\r\n  recipeSearchIncludeMaster: false,\r\n  recipeSearchResults: {}\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, Table } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { getIconUrl } from '../../service/xivApi'\r\n\r\nexport default class MyList extends React.Component {\r\n  render () {\r\n    const {\r\n      handleClearList,\r\n      handleTabChange,\r\n      handleToggleListItem,\r\n      handleUpdateQuantity,\r\n      list\r\n    } = this.props\r\n\r\n    if (!list.length) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Items in List\r\n          <hr />\r\n          <Button onClick={handleTabChange.bind(this, 'search')}>\r\n            Back to Search\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Table className=\"recipes\" hover striped>\r\n        <thead>\r\n        <tr>\r\n          <th />\r\n          <th>Crafting Class</th>\r\n          <th>Item Name</th>\r\n          <th>Required Level to Craft</th>\r\n          <th>Quantity</th>\r\n          <th>Remove</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {list.map((i, k) => (\r\n          <tr key={k}>\r\n            <td><img src={getIconUrl(i.Icon)} alt={i.Name} /></td>\r\n            <td>{i.ClassJob.NameEnglish}</td>\r\n            <td>{i.Name}</td>\r\n            <td>{i.RecipeLevelTable.ClassJobLevel}</td>\r\n            <td>\r\n              <Form.Control type=\"number\" value={i.quantity} onChange={handleUpdateQuantity.bind(this, i)} />\r\n            </td>\r\n            <td>\r\n              <Button variant=\"danger\" onClick={handleToggleListItem.bind(this, i)}>\r\n                <FontAwesomeIcon icon={faMinusSquare} />\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n        {list.length && (\r\n          <tfoot>\r\n          <tr>\r\n            <td colSpan={6} className=\"tc\">\r\n              <div className=\"space-between\">\r\n                <Button variant=\"danger\" onClick={handleClearList}>\r\n                  Clear Recipe List\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleTabChange.bind(this, 'shopping-list')}>\r\n                  View My Shopping List\r\n                </Button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </tfoot>\r\n        )}\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nMyList.propTypes = {\r\n  handleClearList: PropTypes.func.isRequired,\r\n  handleTabChange: PropTypes.func.isRequired,\r\n  handleToggleListItem: PropTypes.func.isRequired,\r\n  handleUpdateQuantity: PropTypes.func.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.shape({\r\n    ClassJob: PropTypes.shape({\r\n      Abbreviation_en: PropTypes.string.isRequired,\r\n      NameEnglish: PropTypes.string.isRequired\r\n    }),\r\n    Icon: PropTypes.string.isRequired,\r\n    Name: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number,\r\n    RecipeLevelTable: PropTypes.shape({\r\n      ClassJobLevel: PropTypes.number.isRequired\r\n    }).isRequired\r\n  })).isRequired\r\n}\r\n\r\nMyList.defaultProps = {\r\n  list: []\r\n}\r\n","const RECIPE_SEARCH = 'RECIPE_SEARCH'\r\nconst RECIPE_LIST = 'RECIPE_LIST'\r\nconst SHOPPING_LIST = 'SHOPPING_LIST'\r\n\r\nexport const RECIPE_SEARCH_REQUEST = `${RECIPE_SEARCH}_SEARCH`\r\nexport const RECIPE_SEARCH_SUCCESS = `${RECIPE_SEARCH}_SUCCESS`\r\nexport const RECIPE_SEARCH_FAILURE = `${RECIPE_SEARCH}_FAILURE`\r\nexport const RECIPE_SEARCH_CLEAR = `${RECIPE_SEARCH}_CLEAR`\r\n\r\n// export const RECIPE_LIST_ADD = `${RECIPE_LIST}_ADD`\r\n// export const RECIPE_LIST_REMOVE = `${RECIPE_LIST}_REMOVE`\r\nexport const RECIPE_LIST_CLEAR = `${RECIPE_LIST}_CLEAR`\r\nexport const RECIPE_LIST_SAVE = `${RECIPE_LIST}_SAVE`\r\n\r\nexport const SHOPPING_LIST_CREATE = `${SHOPPING_LIST}_CREATE`\r\nexport const SHOPPING_LIST_CLEAR = `${SHOPPING_LIST}_CLEAR`\r\n","import { concat, filter, find, forEach, get, includes, map, set, toLower, uniqBy, orderBy } from 'lodash'\r\nimport ITEM_TO_GATHERING_ITEM_MAPPING from '../data/item-to-gathering-item-mapping'\r\nimport GATHERING_ITEM_POINTS from '../data/gathering-item-points'\r\nimport FISHING_SPOTS from '../data/fishing-spots'\r\nimport * as XivApiService from './xivApi'\r\n\r\n/**\r\n * Gets a list of ingredients required to craft a given set of recipes.\r\n *\r\n * @param recipeList\r\n * @returns {Promise<*>}\r\n */\r\nexport const getIngredientListForRecipes = async recipeList => {\r\n  if (!recipeList || !recipeList.length) return {}\r\n\r\n  // we will want to keep the following lists:\r\n  // 1. Ingredients that can be gathered\r\n  const ingredientsGatherable = []\r\n\r\n  // 2. Ingredients that can be crafted\r\n  const ingredientsCrafted = []\r\n\r\n  // 3. Ingredients that can be obtained from monsters\r\n  const ingredientsOther = []\r\n\r\n  // 3. Ingredients that can be bought (that cannot be gathered or dropped by monsters)\r\n  const ingredientsPurchased = []\r\n\r\n  await getAndSortRecipeResults(recipeList,\r\n    ingredientsGatherable,\r\n    ingredientsCrafted,\r\n    ingredientsPurchased,\r\n    ingredientsOther\r\n  )\r\n\r\n  // get item IDs for the gatherable and purchasable things so we can get their info\r\n  const itemIds = map(concat(ingredientsGatherable, ingredientsOther), item => get(item, 'itemId'))\r\n  const itemData = await XivApiService.getItemsById(itemIds)\r\n\r\n  forEach(get(itemData, 'Results', []), item => {\r\n    const foundItem = find(ingredientsGatherable, ig => get(ig, 'itemId') === get(item, 'ID')) ||\r\n      find(ingredientsOther, io => get(io, 'itemId') === get(item, 'ID'))\r\n    set(foundItem, 'name', get(item, 'Name'))\r\n    set(foundItem, 'icon', XivApiService.getIconUrl(get(item, 'Icon')))\r\n    // set(foundItem, 'gameContentLinks', get(item, 'GameContentLinks', {}))\r\n    set(foundItem, 'gameContentLinks',\r\n      filter(\r\n        map(\r\n          get(item, 'GameContentLinks', {}), (value, key) => ({ key, value })\r\n        ), result => {\r\n          const val = toLower(result.key)\r\n          return includes(val, 'shop') && !includes(val, 'special')\r\n        }\r\n      )\r\n    )\r\n\r\n    if (!!get(foundItem, 'gameContentLinks.length')) {\r\n      ingredientsPurchased.push(foundItem)\r\n    }\r\n  })\r\n\r\n  // add gathering item data\r\n  addGatheringItemData(ingredientsGatherable)\r\n\r\n  // sort the results\r\n  return {\r\n    ingredientsCrafted: orderBy(uniqBy(ingredientsCrafted, ic => get(ic, 'ID')), 'Name'),\r\n    ingredientsGatherable: orderBy(ingredientsGatherable, 'name'),\r\n    ingredientsPurchased: orderBy(ingredientsPurchased, 'name'),\r\n    ingredientsOther: orderBy(ingredientsOther, 'name')\r\n  }\r\n}\r\n\r\nconst addGatheringItemData = ingredientsGatherable => {\r\n  forEach(ingredientsGatherable, item => {\r\n    const gatheringItemId = get(item, 'gatheringItemId')\r\n\r\n    if (!!gatheringItemId) {\r\n      const filteredGatheringPoints = filter(\r\n        GATHERING_ITEM_POINTS, point => get(point, 'ID', '').startsWith(`${gatheringItemId}.`)\r\n      )\r\n\r\n      const namePath = 'GatheringPoint.PlaceName.Name_en'\r\n      const areaPath = 'GatheringPoint.TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'GatheringPoint.TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringPoint.GatheringPointBase.GatheringLevel'\r\n      const typePath = 'GatheringPoint.GatheringPointBase.GatheringType.Name_en'\r\n      const aetherytePath = 'GatheringPoint.TerritoryType.AetheryteTargetID'\r\n\r\n      const pointData = map(filteredGatheringPoints, point => getPointData(\r\n        point,\r\n        namePath,\r\n        areaPath,\r\n        regionPath,\r\n        levelPath,\r\n        typePath,\r\n        aetherytePath\r\n      ))\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    } else {\r\n      const itemId = get(item, 'itemId')\r\n      const filteredFishingSpots = filter(FISHING_SPOTS, spot => {\r\n        for (let i = 0; i < 10; i++) {\r\n          const path = `Item${i}TargetID`\r\n          const fishId = get(spot, path)\r\n          if (fishId === itemId) return true\r\n        }\r\n      })\r\n\r\n      const namePath = 'PlaceName.Name_en'\r\n      const areaPath = 'TerritoryType.PlaceName.Name_en'\r\n      const regionPath = 'TerritoryType.PlaceNameRegion.Name_en'\r\n      const levelPath = 'GatheringLevel'\r\n\r\n      const pointData = map(filteredFishingSpots, point => {\r\n        const pd = getPointData(\r\n          point,\r\n          namePath,\r\n          areaPath,\r\n          regionPath,\r\n          levelPath,\r\n          ''\r\n        )\r\n        set(pd, 'type', 'Fishing')\r\n        set(pd, 'gatheringClass', 'Fisherman')\r\n        return pd\r\n      })\r\n\r\n      set(item, 'pointData', orderBy(pointData, ['region', 'area', 'name']))\r\n    }\r\n  })\r\n}\r\n\r\nconst getPointData = (data, namePath, areaPath, regionPath, levelPath, typePath) => {\r\n  const typeMap = {\r\n    'Mining': 'Miner',\r\n    'Quarrying': 'Miner',\r\n    'Logging': 'Botanist',\r\n    'Harvesting': 'Botanist'\r\n  }\r\n  const name = get(data, namePath)\r\n  const area = get(data, areaPath)\r\n  const region = get(data, regionPath)\r\n  const level = get(data, levelPath)\r\n  const type = get(data, typePath)\r\n\r\n  return {\r\n    name,\r\n    area,\r\n    region,\r\n    level,\r\n    gatheringClass: get(typeMap, type),\r\n    type,\r\n    id: get(data, 'ID')\r\n  }\r\n}\r\n\r\nconst hasFishingSpotMatch = itemId => {\r\n  let matched = false\r\n  forEach(FISHING_SPOTS, spot => {\r\n    for (let i = 0; i < 10; i++) {\r\n      const path = `Item${i}TargetID`\r\n      const fishingId = get(spot, path)\r\n      if (itemId === fishingId) {\r\n        matched = true\r\n        return\r\n      }\r\n    }\r\n  })\r\n\r\n  return matched\r\n}\r\n\r\nconst getAndSortRecipeResults = async (\r\n  recipeList,\r\n  ingredientsGatherable,\r\n  ingredientsCrafted,\r\n  ingredientsPurchased,\r\n  ingredientsOther\r\n) => {\r\n  const recipeIds = map(recipeList, recipe => get(recipe, 'ID'))\r\n  const recipeResults = get(await XivApiService.getRecipesById(recipeIds), 'Results', [])\r\n  const nextRecipeResults = []\r\n  forEach(recipeResults, rr => {\r\n    const recipeListEntry = find(recipeList, rle => get(rle, 'ID') === get(rr, 'ID'))\r\n    set(rr, 'quantity', get(recipeListEntry, 'quantity'))\r\n\r\n    // go through each ingredient\r\n    for (let i = 0; i < 10; i++) {\r\n      const itemId = get(rr, `ItemIngredient${i}.ID`)\r\n      const itemCategory = get(rr, `ItemIngredient${i}.ItemSearchCategoryTargetID`)\r\n      const amount = get(rr, `AmountIngredient${i}`)\r\n      const gatheringMapNode = find(ITEM_TO_GATHERING_ITEM_MAPPING, mapping => get(mapping, 'ItemID') === itemId)\r\n      const gatheringItemId = get(gatheringMapNode, 'GatheringItemID')\r\n      const ingredientRecipe = get(rr, `ItemIngredientRecipe${i}[0]`)\r\n      const quantity = get(rr, 'quantity')\r\n      const fishingSpotMatch = hasFishingSpotMatch(itemId)\r\n\r\n      if (!!gatheringItemId || !!fishingSpotMatch) {\r\n        const existingIngredientGatherable = find(ingredientsGatherable, ig => get(ig, 'itemId') === itemId)\r\n        if (!!existingIngredientGatherable) {\r\n          const existingAmount = get(existingIngredientGatherable, 'amount')\r\n          set(existingIngredientGatherable, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsGatherable.push({ itemId, gatheringItemId, amount: amount * quantity, itemCategory })\r\n        }\r\n      }\r\n\r\n      if (!!ingredientRecipe) {\r\n        const existingIngredientCrafted = find(ingredientsCrafted, ir => get(ingredientRecipe, 'ID') === get(ir, 'ID'))\r\n        const existingAmount = get(existingIngredientCrafted, 'quantity', 0)\r\n        set(existingIngredientCrafted || ingredientRecipe, 'quantity', existingAmount + (quantity * amount))\r\n        if (!existingIngredientCrafted) {\r\n          nextRecipeResults.push(ingredientRecipe)\r\n          ingredientsCrafted.push(ingredientRecipe)\r\n        }\r\n      }\r\n\r\n      if (!gatheringItemId && !ingredientRecipe && !fishingSpotMatch && !!itemId) {\r\n        const existingIngredientOther = find(ingredientsOther, ip => get(ip, 'itemId') === itemId)\r\n        if (!!existingIngredientOther) {\r\n          const existingAmount = get(existingIngredientOther, 'amount')\r\n          set(existingIngredientOther, 'amount', existingAmount + (amount * quantity))\r\n        } else {\r\n          ingredientsOther.push({ itemId, amount: amount * quantity })\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  if (!!nextRecipeResults.length) {\r\n    await getAndSortRecipeResults(nextRecipeResults,\r\n      ingredientsGatherable,\r\n      ingredientsCrafted,\r\n      ingredientsPurchased,\r\n      ingredientsOther\r\n    )\r\n  }\r\n}\r\n","import * as T from './types'\r\nimport * as LocalStorageService from '../../service/localStorage'\r\nimport * as RecipeListService from '../../service/recipe'\r\nimport * as XivApiService from '../../service/xivApi'\r\n\r\nconst recipeListClear = () => ({\r\n  type: T.RECIPE_LIST_CLEAR\r\n})\r\n\r\nconst recipeListSave = recipeList => ({\r\n  type: T.RECIPE_LIST_SAVE,\r\n  recipeList\r\n})\r\n\r\nconst shoppingListClear = () => ({\r\n  type: T.SHOPPING_LIST_CLEAR\r\n})\r\n\r\nconst shoppingListCreate = shoppingList => ({\r\n  type: T.SHOPPING_LIST_CREATE,\r\n  shoppingList\r\n})\r\n\r\nconst recipeSearchRequest = params => ({\r\n  type: T.RECIPE_SEARCH_REQUEST,\r\n  params\r\n})\r\n\r\nconst apiRequestSuccess = (type, payload) => ({\r\n  type,\r\n  payload\r\n})\r\n\r\nconst apiRequestFailure = (type, error) => ({\r\n  type, error\r\n})\r\n\r\nconst recipeSearchClear = () => ({\r\n  type: T.RECIPE_SEARCH_CLEAR\r\n})\r\n\r\nexport const saveMyRecipeList = recipeList => dispatch => {\r\n  LocalStorageService.storeMyRecipeList(recipeList)\r\n  dispatch(recipeListSave(recipeList))\r\n  dispatch(createMyShoppingList(recipeList))\r\n}\r\n\r\nexport const clearMyRecipeList = () => dispatch => {\r\n  LocalStorageService.clearMyRecipeList()\r\n  dispatch(recipeListClear())\r\n  dispatch(clearMyShoppingList())\r\n}\r\n\r\nexport const createMyShoppingList = recipeList => async dispatch => {\r\n  const result = await RecipeListService.getIngredientListForRecipes(recipeList)\r\n  LocalStorageService.storeMyShoppingList(result)\r\n  dispatch(shoppingListCreate(result))\r\n}\r\n\r\nexport const clearMyShoppingList = () => dispatch => {\r\n  LocalStorageService.clearMyShoppingList()\r\n  dispatch(shoppingListClear())\r\n}\r\n\r\nexport const searchRecipes = (string, params) => async dispatch => {\r\n  dispatch(recipeSearchRequest({string, ...params}))\r\n  try {\r\n    const result = await XivApiService.recipeSearch(string, params)\r\n    dispatch(apiRequestSuccess(T.RECIPE_SEARCH_SUCCESS, result))\r\n  } catch (err) {\r\n    dispatch(apiRequestFailure(T.RECIPE_SEARCH_FAILURE, err))\r\n  }\r\n}\r\n\r\nexport const clearRecipeSearch = () => dispatch => {\r\n  dispatch(recipeSearchClear())\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SortableTableHeaderCell extends React.Component {\r\n  render () {\r\n    const { className, text, sortFunc, applySorting } = this.props\r\n    return (\r\n      <th className={className} onClick={applySorting.bind(this, sortFunc)}\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {text}\r\n        <FontAwesomeIcon\r\n          className=\"margin-left\"\r\n          icon={faSort}\r\n        />\r\n      </th>\r\n    )\r\n  }\r\n}\r\n\r\nSortableTableHeaderCell.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  sortFunc: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\r\n  applySorting: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SortableTableHeaderCell\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { get } from 'lodash'\r\nimport { Badge, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\nexport default class XivIcon extends React.Component {\r\n  render () {\r\n    const { badge, className, image, tooltip } = this.props\r\n\r\n    const htmlImage = (\r\n      <img src={image.url} alt={image.altText} />\r\n    )\r\n\r\n    const content = get(tooltip, 'text') ? (\r\n      <OverlayTrigger overlay={(\r\n        <Tooltip>\r\n          {get(tooltip, 'text')}\r\n        </Tooltip>\r\n      )}>\r\n        {htmlImage}\r\n      </OverlayTrigger>\r\n    ) : htmlImage\r\n\r\n    const htmlBadge = get(badge, 'text') ? (\r\n      <React.Fragment>\r\n        <br />\r\n        <Badge variant={get(badge, 'variant', 'primary')} className=\"xiv-icon-badge\">\r\n          {get(badge, 'text')}\r\n        </Badge>\r\n      </React.Fragment>\r\n    ) : null\r\n\r\n    return (\r\n      <div className={cx(className)}>\r\n        {content}\r\n        {htmlBadge}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nXivIcon.propTypes = {\r\n  badge: PropTypes.shape({\r\n    variant: PropTypes.oneOf(['primary', 'secondary', 'success', 'warning', 'danger', 'light', 'dark']),\r\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\r\n  }),\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n  image: PropTypes.shape({\r\n    altText: PropTypes.string.isRequired,\r\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n    url: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  tooltip: PropTypes.shape({\r\n    text: PropTypes.string.isRequired\r\n  })\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { FormControl, Table } from 'react-bootstrap'\r\nimport { clone, filter, get, includes, isEqual, orderBy, pull } from 'lodash'\r\nimport { getIconUrl } from '../../service/xivApi'\r\nimport { clearObtainedItems, getObtainedItems, storeObtainedItems } from '../../service/localStorage'\r\nimport SortableTableHeaderCell from '../common/SortableTableHeaderCell'\r\nimport XivIcon from '../common/XivIcon'\r\n\r\n/**\r\n * Scrolls to a position on the screen.\r\n *\r\n * @param {number} x The X coordinate for scrolling.\r\n * @param {number} y The Y coodrinate for scrolling.\r\n */\r\nfunction scrollToPosition (x, y) {\r\n  window.scrollTo(x, y)\r\n}\r\n\r\n/**\r\n * The number of columns in a row.  This allows the subheadings to take up the full width of the table.\r\n * @type {number}\r\n */\r\nconst headingColumns = 7\r\n\r\nexport default class ShoppingList extends React.Component {\r\n  state = {\r\n    ingredientsGatherableSort: {\r\n      func: 'name',\r\n      direction: 'asc'\r\n    },\r\n    itemsOwned: getObtainedItems()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.updateGatherableIngredients()\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    const { shoppingList } = this.props\r\n\r\n    if (!isEqual(shoppingList, prevProps.shoppingList)) {\r\n      this.updateGatherableIngredients()\r\n    }\r\n  }\r\n\r\n  updateGatherableIngredients () {\r\n    const { shoppingList } = this.props\r\n    const {\r\n      // ingredientsCrafted,\r\n      // ingredientsPurchased,\r\n      ingredientsGatherable\r\n      // ingredientsOther\r\n    } = shoppingList\r\n\r\n    const gatherableStateVars = {}\r\n    if (ingredientsGatherable) {\r\n      ingredientsGatherable.forEach(item => {\r\n        const key = `gatherable-${item.itemId}-location`\r\n        gatherableStateVars[key] = get(item, 'pointData[0]', {})\r\n      })\r\n    }\r\n\r\n    clearObtainedItems()\r\n\r\n    this.setState({\r\n      ...gatherableStateVars,\r\n      ingredientsGatherable: filter(ingredientsGatherable, ig => get(ig, 'itemCategory') !== 58),\r\n      ingredientsCrystals: filter(ingredientsGatherable, ig => get(ig, 'itemCategory') === 58),\r\n      itemsOwned: []\r\n    })\r\n  }\r\n\r\n  handleLocationUpdate (event) {\r\n    event.preventDefault()\r\n\r\n    const { target: { value, id } } = event\r\n\r\n    this.setState({\r\n      [id]: JSON.parse(value)\r\n    })\r\n  }\r\n\r\n  handleApplyIngredientsGatherableSort (sortFunc) {\r\n    const { ingredientsGatherableSort } = this.state\r\n\r\n    const sortDirection =\r\n      // isEqual(JSON.stringify(sortFunc), JSON.stringify(ingredientsGatherableSort.func)) && ingredientsGatherableSort.direction === 'asc'\r\n      isEqual(\r\n        JSON.stringify(sortFunc),\r\n        JSON.stringify(ingredientsGatherableSort.func)\r\n      ) && ingredientsGatherableSort.direction === 'asc'\r\n        ? 'desc'\r\n        : 'asc'\r\n\r\n    const newIngredientsGatherableSort = {\r\n      func: sortFunc,\r\n      direction: sortDirection\r\n    }\r\n\r\n    this.setState({\r\n      ingredientsGatherableSort: newIngredientsGatherableSort\r\n    })\r\n  }\r\n\r\n  handleToggleItemOwned (itemId) {\r\n    const { scrollX, scrollY } = window\r\n    const itemsOwned = clone(get(this.state, 'itemsOwned', []))\r\n\r\n    if (includes(itemsOwned, itemId)) {\r\n      pull(itemsOwned, itemId)\r\n    } else {\r\n      itemsOwned.push(itemId)\r\n    }\r\n\r\n    storeObtainedItems(itemsOwned)\r\n\r\n    this.setState({\r\n      itemsOwned\r\n    }, scrollToPosition.bind(this, scrollX, scrollY))\r\n  }\r\n\r\n  handleOwnershipSort (item) {\r\n    const itemId = get(item, 'itemId', get(item, 'ItemResult.ID'))\r\n    return includes(get(this.state, 'itemsOwned', []), itemId)\r\n    // return !!itemId\r\n  }\r\n\r\n  render () {\r\n    const { shoppingList: { ingredientsCrafted, ingredientsPurchased, ingredientsOther } } = this.props\r\n    const { ingredientsCrystals, ingredientsGatherable, ingredientsGatherableSort } = this.state\r\n\r\n    if (!get(ingredientsGatherable, 'length') && !ingredientsCrafted && !ingredientsPurchased) {\r\n      return (\r\n        <div className=\"tc\">\r\n          No Results to Display\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"flex flex-row justify-center items-center\">\r\n          {!!ingredientsCrystals && (\r\n            ingredientsCrystals.map(ic => {\r\n              const { amount, name, icon } = ic\r\n              return (\r\n                <span key={name} className=\"ph1\">\r\n                  <XivIcon\r\n                    badge={{ text: amount }}\r\n                    image={{ url: icon, altText: name }}\r\n                    tooltip={{ text: name }}\r\n                  />\r\n                </span>\r\n              )\r\n            })\r\n          )}\r\n        </div>\r\n        <Table hover striped className=\"shopping-list\">\r\n          {!!ingredientsGatherable && !!ingredientsGatherable.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Gatherable Items</th>\r\n              </tr>\r\n              <tr>\r\n                <th />\r\n                <SortableTableHeaderCell\r\n                  text=\"Name\"\r\n                  sortFunc=\"name\"\r\n                  applySorting={this.handleApplyIngredientsGatherableSort.bind(this)}\r\n                />\r\n                <th>Required Class</th>\r\n                <th>Required Level</th>\r\n                <th>Quantity</th>\r\n                <SortableTableHeaderCell\r\n                  text=\"Location\"\r\n                  sortFunc={ig => {\r\n                    const point = get(this.state, `gatherable-${ig.itemId}-location`)\r\n                    return `${point.region} - ${point.area} - ${point.name}`\r\n                  }}\r\n                  applySorting={this.handleApplyIngredientsGatherableSort.bind(this)}\r\n                />\r\n                <th>Obtained</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {orderBy(\r\n                ingredientsGatherable,\r\n                [this.handleOwnershipSort.bind(this), ingredientsGatherableSort.func],\r\n                ['asc', ingredientsGatherableSort.direction]\r\n              ).map(item => {\r\n                const { name, icon, itemId, amount, pointData } = item\r\n                const key = `gatherable-${itemId}`\r\n                const locationSelectId = `${key}-location`\r\n                const gatheringClass = get(this.state, `${locationSelectId}.gatheringClass`)\r\n                const gatheringType = get(this.state, `${locationSelectId}.type`)\r\n                const level = get(this.state, `${locationSelectId}.level`)\r\n                const owned = includes(get(this.state, 'itemsOwned', []), itemId)\r\n\r\n                return (\r\n                  <tr key={key} className={cx(owned ? 'owned' : '')}>\r\n                    <td><XivIcon image={{ url: icon, altText: name }} /></td>\r\n                    <td>{name}</td>\r\n                    <td>{gatheringClass}{!!gatheringType && ` (${gatheringType})`}</td>\r\n                    <td>{level}</td>\r\n                    <td>{amount}</td>\r\n                    <td>\r\n                      {pointData.length === 1 && (\r\n                        <React.Fragment>\r\n                          {pointData[0].region} - {pointData[0].area} {pointData[0].name ? `- ${pointData[0].name}` : '(Unspoiled)'}\r\n                        </React.Fragment>\r\n                      )}\r\n                      {pointData.length > 1 && (\r\n                        <FormControl\r\n                          id={locationSelectId}\r\n                          as=\"select\"\r\n                          onChange={this.handleLocationUpdate.bind(this)}\r\n                        >\r\n                          {pointData.map((point, key) => (\r\n                            <option key={key} value={JSON.stringify(point)}>\r\n                              {point.region} - {point.area} {point.name ? `- ${point.name}` : '(Unspoiled)'} (Level {point.level}, {point.gatheringClass})\r\n                            </option>\r\n                          ))}\r\n                        </FormControl>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={itemId}\r\n                        checked={owned}\r\n                        onChange={this.handleToggleItemOwned.bind(this, itemId)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsOther && !!ingredientsOther.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Items Obtained Elsewhere</th>\r\n              </tr>\r\n              <tr>\r\n                <th />\r\n                <th>Name</th>\r\n                <th />\r\n                <th />\r\n                <th>Quantity</th>\r\n                <th>Location</th>\r\n                <th>Obtained</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {orderBy(\r\n                ingredientsOther,\r\n                this.handleOwnershipSort.bind(this),\r\n                'asc'\r\n              ).map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                const owned = includes(get(this.state, 'itemsOwned', []), itemId)\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`} className={cx(owned ? 'owned' : '')}>\r\n                    <td><XivIcon image={{ url: icon, altText: name }} /></td>\r\n                    <td>{name}</td>\r\n                    <td />\r\n                    <td />\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={itemId}\r\n                        checked={owned}\r\n                        onChange={this.handleToggleItemOwned.bind(this, itemId)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsPurchased && !!ingredientsPurchased.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Purchasable Items</th>\r\n              </tr>\r\n              <tr>\r\n                <th />\r\n                <th>Name</th>\r\n                <th>Currency</th>\r\n                <th>Cost</th>\r\n                <th>Quantity</th>\r\n                <th>Location</th>\r\n                <th>Obtained</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {orderBy(\r\n                ingredientsPurchased,\r\n                this.handleOwnershipSort.bind(this),\r\n                'asc'\r\n              ).map(item => {\r\n                const { name, icon, itemId, amount } = item\r\n                const owned = includes(get(this.state, 'itemsOwned', []), itemId)\r\n                return (\r\n                  <tr key={`purchasable-${itemId}`} className={cx(owned ? 'owned' : '')}>\r\n                    <td><XivIcon image={{ url: icon, altText: name }} /></td>\r\n                    <td>{name}</td>\r\n                    <td>???</td>\r\n                    <td>???</td>\r\n                    <td>{amount}</td>\r\n                    <td>???</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={itemId}\r\n                        checked={owned}\r\n                        onChange={this.handleToggleItemOwned.bind(this, itemId)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n          {!!ingredientsCrafted && !!ingredientsCrafted.length && (\r\n            <React.Fragment>\r\n              <thead>\r\n              <tr className=\"section-head\">\r\n                <th colSpan={headingColumns}>Prerequisite Crafts</th>\r\n              </tr>\r\n              <tr>\r\n                <th />\r\n                <th>Name</th>\r\n                <th>Required Class</th>\r\n                <th>Required Level</th>\r\n                <th>Quantity</th>\r\n                <th>Location</th>\r\n                <th>Obtained</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {orderBy(\r\n                ingredientsCrafted,\r\n                [this.handleOwnershipSort.bind(this), 'ItemResult.Name_en'],\r\n                ['asc', 'asc']\r\n              ).map(item => {\r\n                const name = get(item, 'ItemResult.Name_en')\r\n                const icon = get(item, 'ItemResult.Icon')\r\n                const id = get(item, 'ID')\r\n                const quantity = get(item, 'quantity')\r\n                const craftClass = get(item, 'ClassJob.NameEnglish')\r\n                const craftLevel = get(item, 'RecipeLevelTable.ClassJobLevel')\r\n                const itemId = get(item, 'ItemResult.ID')\r\n                const owned = includes(get(this.state, 'itemsOwned', []), itemId)\r\n                return (\r\n                  <tr key={`crafted-${id}`} className={cx(owned ? 'owned' : '')}>\r\n                    <td><XivIcon image={{ url: getIconUrl(icon), altText: name }} /></td>\r\n                    <td>{name}</td>\r\n                    <td>{craftClass}</td>\r\n                    <td>{craftLevel}</td>\r\n                    <td>{quantity}</td>\r\n                    <td>N/A</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={itemId}\r\n                        checked={owned}\r\n                        onChange={this.handleToggleItemOwned.bind(this, itemId)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </React.Fragment>\r\n          )}\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  shoppingList: PropTypes.shape().isRequired\r\n}\r\n\r\nShoppingList.defaultProps = {\r\n  shoppingList: {}\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport { orderBy } from 'lodash'\r\nimport CRAFTING_CLASSES from '../../data/crafting-classes'\r\n\r\nexport default class FilterDropdown extends React.Component {\r\n  render () {\r\n    const { label, applyFilterFunc } = this.props\r\n    return (\r\n      <DropdownButton title={`Showing ${label}`}>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => !!c)}>\r\n          All\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'crafting')}>\r\n          Crafting Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={applyFilterFunc.bind(this, c => c.type === 'gathering')}>\r\n          Gathering Classes\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider/>\r\n        {orderBy(CRAFTING_CLASSES, 'name').map((craftingClass, key) => (\r\n          <Dropdown.Item\r\n            key={key}\r\n            onClick={applyFilterFunc.bind(this, c => c.abbreviation === craftingClass.abbreviation)}\r\n          >\r\n            {craftingClass.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n    )\r\n  }\r\n}\r\n\r\nFilterDropdown.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  applyFilterFunc: PropTypes.func.isRequired\r\n}\r\n","export function calculateRemainingExp (currentExp, totalExp) {\r\n  return Math.max(totalExp - currentExp, 0)\r\n}\r\n\r\nexport function calculateRemainingItems (remainingExp, expPerItem) {\r\n  return Math.ceil(remainingExp / expPerItem)\r\n}\r\n\r\nexport function calculateProgressPercentage (currentExp, totalExp) {\r\n  return totalExp <= 0 ? 0 : Math.floor((currentExp / totalExp) * 100)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport SortableTableHeaderCell from '../common/SortableTableHeaderCell'\r\n\r\nconst tableHeaders = [\r\n  { name: 'Class', sortFunc: 'name' },\r\n  { name: 'Level', sortFunc: 'currentLevel' },\r\n  { name: 'Current Exp.', sortFunc: 'currentExperience' },\r\n  { name: 'Required Exp.', sortFunc: undefined },\r\n  { name: 'Remaining Exp.', sortFunc: c => calculateRemainingExp(c.currentExperience, c.totalExperience) },\r\n  { name: 'Exp. Per Item', sortFunc: 'experiencePerItem' },\r\n  {\r\n    name: 'Remaining Items',\r\n    sortFunc: c => calculateRemainingItems(\r\n      calculateRemainingExp(c.currentExperience, c.totalExperience), c.experiencePerItem\r\n    )\r\n  },\r\n  { name: 'Progress', sortFunc: c => calculateProgressPercentage(c.currentExperience, c.totalExperience) }\r\n]\r\n\r\nexport default class CalculationsTableHeader extends React.Component {\r\n  render () {\r\n    const { applySortFunc } = this.props\r\n    return (\r\n      <thead>\r\n      <tr>\r\n        {tableHeaders.map((h, key) => {\r\n          if (h.sortFunc) {\r\n            return (\r\n              <SortableTableHeaderCell\r\n                key={key}\r\n                text={h.name}\r\n                sortFunc={h.sortFunc}\r\n                applySorting={applySortFunc}\r\n              />\r\n            )\r\n          } else {\r\n            return (\r\n              <th key={key}>\r\n                {h.name}\r\n              </th>\r\n            )\r\n          }\r\n        })}\r\n      </tr>\r\n      </thead>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableHeader.propTypes = {\r\n  applySortFunc: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { calculateProgressPercentage, calculateRemainingExp, calculateRemainingItems } from '../../service/calculations'\r\nimport Form from 'react-bootstrap/es/Form'\r\nimport { OverlayTrigger, Popover, ProgressBar } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfoCircle as faIcon } from '@fortawesome/free-solid-svg-icons'\r\nimport { find, set, toNumber } from 'lodash'\r\nimport LEVELING_GUIDE_LINKS from '../../data/leveling-guide-links'\r\n\r\nclass CalculationsTableBody extends React.Component {\r\n  state = {\r\n    focusedRow: undefined\r\n  }\r\n\r\n  getLevelingGuidePageUrl (abbreviation, currentLevel) {\r\n    const classGuideData = find(LEVELING_GUIDE_LINKS, g => g.abbreviation === abbreviation)\r\n    const { levelingGuide } = classGuideData\r\n\r\n    const matchedPage = find(levelingGuide.pages, p => {\r\n      const { maxLevel, minLevel } = p\r\n\r\n      if (currentLevel >= minLevel && currentLevel <= maxLevel) {\r\n        return true\r\n      }\r\n    })\r\n\r\n    return !!matchedPage ? `${levelingGuide.url}/${matchedPage.page}/` : levelingGuide.url\r\n  }\r\n\r\n  validateNumericFieldChange (abbreviation, event) {\r\n    const { target: { value, max, min } } = event\r\n    const { updateField } = this.props\r\n\r\n    if (!!min && toNumber(value) < min) {\r\n      set(event, 'target.value', min)\r\n    }\r\n\r\n    if (!!max && toNumber(value) > max) {\r\n      set(event, 'target.value', max)\r\n    }\r\n\r\n    updateField(abbreviation, event)\r\n  }\r\n\r\n  handleRowFocus (abbreviation, focused) {\r\n    this.setState({\r\n      focusedRow: focused ? abbreviation : undefined\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { craftingClasses } = this.props\r\n    return (\r\n      <tbody>\r\n      {craftingClasses.map(c => {\r\n        const remainingExperience = calculateRemainingExp(c.currentExperience, c.totalExperience)\r\n        const remainingItems = calculateRemainingItems(remainingExperience, c.experiencePerItem)\r\n        const progressPercentage = calculateProgressPercentage(c.currentExperience, c.totalExperience)\r\n\r\n        const popover = (\r\n          <Popover id={`links-${c.name}`}>\r\n            <a\r\n              href={this.getLevelingGuidePageUrl(c.abbreviation, c.currentLevel)}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Leveling Guide\r\n            </a>\r\n          </Popover>\r\n        )\r\n\r\n        return (\r\n          <tr\r\n            key={`calculationTableRow${c.abbreviation}`}\r\n            onFocus={this.handleRowFocus.bind(this, c.abbreviation, true)}\r\n            onBlur={this.handleRowFocus.bind(this, c.abbreviation, false)}\r\n            className={cx(this.state.focusedRow === c.abbreviation ? 'focused' : undefined)}\r\n          >\r\n            <td>\r\n              <div className=\"flex justify-between items-center\">\r\n                {c.name}\r\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\r\n                  <FontAwesomeIcon icon={faIcon} className=\"text-primary pointer\" />\r\n                </OverlayTrigger>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentLevel\"\r\n                type=\"number\"\r\n                value={c.currentLevel}\r\n                min=\"1\"\r\n                max=\"70\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"currentExperience\"\r\n                type=\"number\"\r\n                value={c.currentExperience}\r\n                min=\"0\"\r\n                max={c.totalExperience}\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{c.totalExperience}</td>\r\n            <td>{remainingExperience}</td>\r\n            <td>\r\n              <Form.Control\r\n                name=\"experiencePerItem\"\r\n                type=\"number\"\r\n                value={c.experiencePerItem}\r\n                min=\"1\"\r\n                onChange={this.validateNumericFieldChange.bind(this, c.abbreviation)}\r\n              />\r\n            </td>\r\n            <td>{remainingItems}</td>\r\n            <td>\r\n              <ProgressBar\r\n                now={progressPercentage}\r\n                label={`${c.currentExperience} / ${c.totalExperience} (${progressPercentage}%)`}\r\n              />\r\n            </td>\r\n          </tr>\r\n        )\r\n      })}\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nCalculationsTableBody.propTypes = {\r\n  craftingClasses: PropTypes.arrayOf(PropTypes.shape()).isRequired\r\n}\r\n\r\nexport default CalculationsTableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TIME_TO_WAIT = 15\r\n\r\nexport default class FirstTimeImport extends React.Component {\r\n  state = {}\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { show } = this.props\r\n    const { timer } = this.state\r\n\r\n    if (show !== prevProps.show) {\r\n      if (!timer && show) {\r\n        this.startTimer()\r\n      } else {\r\n        this.endTimer()\r\n      }\r\n    }\r\n  }\r\n\r\n  async executeTimer () {\r\n    const { getLodestoneCharacterData } = this.props\r\n    const { timeLeft = 0 } = this.state\r\n\r\n    if (!timeLeft) {\r\n      this.endTimer()\r\n      await getLodestoneCharacterData()\r\n      if (this.props.show) {\r\n        this.startTimer()\r\n      }\r\n    } else {\r\n      this.setState({\r\n        timeLeft: timeLeft - 1\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  startTimer () {\r\n    this.setState({\r\n      timeLeft: TIME_TO_WAIT,\r\n      timer: setInterval(this.executeTimer.bind(this), 1000)\r\n    })\r\n  }\r\n\r\n  endTimer () {\r\n    const { timer } = this.state\r\n    if (!!timer) {\r\n      this.setState({\r\n        timer: clearInterval(timer)\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { show } = this.props\r\n    const { timeLeft } = this.state\r\n\r\n    if (!show) {\r\n      return null\r\n    }\r\n\r\n    const timeLeftMessage = `Your data is currently being loaded.  Please wait ${timeLeft} `\r\n      + `second${timeLeft > 1 ? 's' : ''} while the import processes, after which your data will attempt to load `\r\n      + `automatically.  If you are experiencing continued difficulty, please try your import again.`\r\n    const doneMessage = `Checking your import for completeness, please wait...`\r\n\r\n    return (\r\n      <div className=\"w-100 pb3 tc alert alert-info\">\r\n        Thanks for importing! {timeLeft ? timeLeftMessage : doneMessage}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nFirstTimeImport.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  getLodestoneCharacterData: PropTypes.func.isRequired\r\n}\r\n\r\nFirstTimeImport.defaultProps = {\r\n  show: false\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Table } from 'react-bootstrap'\r\nimport { concat, filter, find, get, isEqual, orderBy, set, toNumber } from 'lodash'\r\nimport FilterDropdown from './FilterDropdown'\r\nimport CalculationsTableHeader from './CalculationsTableHeader'\r\nimport CalculationsTableBody from './CalculationsTableBody'\r\nimport EXP_PER_LEVEL from '../../data/exp-per-level'\r\nimport { saveLocalClassData, getLodestoneCharacterData } from '../../store/local/actions'\r\nimport FirstTimeImport from './FirstTimeImport'\r\n\r\nclass CraftingGatheringCalculator extends React.Component {\r\n  state = {\r\n    sort: {\r\n      func: 'name',\r\n      direction: 'asc'\r\n    },\r\n    filter: {\r\n      func: undefined,\r\n      label: 'All'\r\n    }\r\n  }\r\n\r\n  applySort (sortFunc) {\r\n    const { sort } = this.state\r\n    const sortDirection = isEqual(sortFunc, sort.func) && sort.direction === 'asc' ? 'desc' : 'asc'\r\n    this.setState({\r\n      sort: {\r\n        func: sortFunc,\r\n        direction: sortDirection\r\n      }\r\n    })\r\n  }\r\n\r\n  applyFilter (filterFunc, event) {\r\n    this.setState({\r\n      filter: {\r\n        func: filterFunc,\r\n        label: event.target.innerText\r\n      }\r\n    })\r\n  }\r\n\r\n  getSortedCraftingClassData (craftingClassData) {\r\n    const { sort } = this.state\r\n    return orderBy(craftingClassData, sort.func, sort.direction)\r\n  }\r\n\r\n  getFilteredCraftingClassData (craftingClassData) {\r\n    const { filter: { func } } = this.state\r\n    return filter(craftingClassData, func)\r\n  }\r\n\r\n  updateField (abbreviation, event) {\r\n    const { target: { value, name } } = event\r\n    const { craftingClassData, saveLocalClassData } = this.props\r\n\r\n    const targetCraftingClass = find(craftingClassData, c => c.abbreviation === abbreviation)\r\n    const otherCraftingClasses = filter(craftingClassData, c => c.abbreviation !== abbreviation)\r\n    set(targetCraftingClass, name, toNumber(value))\r\n\r\n    if (name === 'currentLevel') {\r\n      set(targetCraftingClass, 'totalExperience', EXP_PER_LEVEL[value])\r\n    }\r\n\r\n    const updatedCraftingClasses = orderBy(concat(otherCraftingClasses, targetCraftingClass), ['type', 'name'])\r\n\r\n    saveLocalClassData(updatedCraftingClasses)\r\n  }\r\n\r\n  render () {\r\n    const { craftingClassData, characterData, getLodestoneCharacterData } = this.props\r\n    const sortedAndFilteredCraftingClassData = this.getSortedCraftingClassData(\r\n      this.getFilteredCraftingClassData(craftingClassData)\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <FirstTimeImport\r\n          show={get(characterData, 'Character') === null}\r\n          getLodestoneCharacterData={getLodestoneCharacterData.bind(this, get(characterData, 'characterId'))}\r\n        />\r\n        <div className=\"w-100 pb3 tc\">\r\n          <FilterDropdown label={this.state.filter.label} applyFilterFunc={this.applyFilter.bind(this)} />\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <Table className=\"calculations\" striped hover>\r\n            <CalculationsTableHeader applySortFunc={this.applySort.bind(this)} />\r\n            <CalculationsTableBody\r\n              craftingClasses={sortedAndFilteredCraftingClassData}\r\n              updateField={this.updateField.bind(this)}\r\n            />\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCraftingGatheringCalculator.propTypes = {\r\n  craftingClassData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  characterData: PropTypes.shape()\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveLocalClassData: classData => dispatch(saveLocalClassData(classData)),\r\n  getLodestoneCharacterData: characterId => dispatch(getLodestoneCharacterData(characterId))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CraftingGatheringCalculator)\r\n","import React from 'react'\r\nimport { Badge, Tab, Tabs } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { cloneDeep, find, get, includes, indexOf, omit, reject, sortBy, toNumber } from 'lodash'\r\nimport { getCurrentTab, storeCurrentTab } from '../service/localStorage'\r\nimport RecipeSearch from './recipes/RecipeSearch'\r\nimport MyList from './recipes/MyList'\r\nimport * as recipeActions from '../store/recipeList/actions'\r\nimport ShoppingList from './recipes/ShoppingList'\r\nimport CraftingGatheringCalculator from './calculator/CraftingGatheringCalculator'\r\n\r\nclass RecipeHelper extends React.Component {\r\n  state = {\r\n    recipeSearchClasses: [],\r\n    recipeSearchExact: false,\r\n    recipeSearchString: '',\r\n    recipeSearchIncludeMaster: false,\r\n    recipeSearchIsInvalid: false,\r\n    myList: [],\r\n    lastSearch: undefined\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n      key: getCurrentTab()\r\n    })\r\n  }\r\n\r\n  handleToggleRecipeSearchClass (event) {\r\n    const recipeSearchClasses = cloneDeep(get(this.state, 'recipeSearchClasses', []))\r\n    const abbreviation = get(event, 'target.value', event)\r\n\r\n    if (includes(recipeSearchClasses, abbreviation)) {\r\n      recipeSearchClasses.splice(recipeSearchClasses.indexOf(abbreviation), 1)\r\n    } else {\r\n      recipeSearchClasses.push(abbreviation)\r\n    }\r\n\r\n    this.setState({\r\n      recipeSearchClasses: sortBy(recipeSearchClasses, s => s.toLowerCase())\r\n    })\r\n  }\r\n\r\n  handleToggleRecipeSearchExact (event) {\r\n    const recipeSearchExact = get(event, 'target.checked', false)\r\n    this.setState({\r\n      recipeSearchExact\r\n    })\r\n  }\r\n\r\n  handleToggleRecipeIncludeMaster (event) {\r\n    const checked = get(event, 'target.checked')\r\n\r\n    this.setState({\r\n      recipeSearchIncludeMaster: checked\r\n    })\r\n  }\r\n\r\n  handleFieldUpdate (event) {\r\n    const { target: { name, value } } = event\r\n\r\n    let recipeSearchIsInvalid = false\r\n    if (!value) {\r\n      recipeSearchIsInvalid = true\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      recipeSearchIsInvalid\r\n    })\r\n  }\r\n\r\n  handleClearList () {\r\n    const { clearMyRecipeList } = this.props\r\n    clearMyRecipeList()\r\n    this.handleTabChange('search')\r\n  }\r\n\r\n  search (page = 1) {\r\n    const { searchRecipes } = this.props\r\n    const { recipeSearchClasses, recipeSearchExact, recipeSearchIncludeMaster, recipeSearchString } = this.state\r\n    const params = {\r\n      page,\r\n      abbreviation: recipeSearchClasses,\r\n      exact: recipeSearchExact,\r\n      includeMasterRecipes: recipeSearchIncludeMaster\r\n    }\r\n\r\n    searchRecipes(recipeSearchString, params)\r\n  }\r\n\r\n  handleUpdateQuantity (item, event) {\r\n    const newValue = Math.max(1, toNumber(event.target.value))\r\n\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    const myListItemIndex = indexOf(myRecipeList, item)\r\n    myRecipeList[myListItemIndex].quantity = newValue\r\n    saveMyRecipeList(myRecipeList)\r\n  }\r\n\r\n  handleSearch (event) {\r\n    event.preventDefault()\r\n    const page = get(event, 'target.value', 1)\r\n    const { recipeSearchString } = this.state\r\n    if (!recipeSearchString) {\r\n      document.getElementsByName('recipeSearchString')[0].focus()\r\n      this.setState({\r\n        recipeSearchIsInvalid: true\r\n      })\r\n      return\r\n    }\r\n\r\n    this.search(page)\r\n  }\r\n\r\n  handleClear () {\r\n    document.getElementsByName('recipeSearchString')[0].focus()\r\n    this.setState({\r\n      recipeSearchIsInvalid: false,\r\n      recipeSearchString: ''\r\n    })\r\n  }\r\n\r\n  handlePageChange (event) {\r\n    this.handleSearch(event)\r\n  }\r\n\r\n  handleTabChange (key) {\r\n    storeCurrentTab(key)\r\n    this.setState({ key })\r\n  }\r\n\r\n  toggleListItem (item) {\r\n    item = omit(item, 'quantity')\r\n    const { myRecipeList, saveMyRecipeList } = this.props\r\n    let myClonedList = cloneDeep(myRecipeList)\r\n    const foundItem = find(myRecipeList, i => get(i, 'ID') === get(item, 'ID'))\r\n\r\n    if (!!foundItem) {\r\n      myClonedList = reject(myRecipeList, item)\r\n    } else {\r\n      item.quantity = 1\r\n      myClonedList.push(item)\r\n    }\r\n\r\n    saveMyRecipeList(myClonedList)\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      recipeSearchExact,\r\n      recipeSearchClasses,\r\n      recipeSearchIncludeMaster,\r\n      recipeSearchIsInvalid,\r\n      recipeSearchString\r\n    } = this.state\r\n\r\n    const {\r\n      characterData,\r\n      clearRecipeSearch,\r\n      craftingClassData,\r\n      myRecipeList,\r\n      myShoppingList,\r\n      recipeSearchResults\r\n    } = this.props\r\n\r\n    return (\r\n      <div className=\"recipe-list pt3\">\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleTabChange.bind(this)}\r\n        >\r\n          <Tab eventKey=\"calculator\" title=\"Calculations\">\r\n            <div className=\"recipe-tab\">\r\n              <CraftingGatheringCalculator characterData={characterData} craftingClassData={craftingClassData} />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"search\" title=\"Recipe Search\">\r\n            <div className=\"recipe-tab\">\r\n              <RecipeSearch\r\n                clearRecipeSearch={clearRecipeSearch.bind(this)}\r\n                handleChange={this.handleFieldUpdate.bind(this)}\r\n                handlePageChange={this.handlePageChange.bind(this)}\r\n                handleReset={this.handleClear.bind(this)}\r\n                handleSubmit={this.handleSearch.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleRecipeIncludeMaster={this.handleToggleRecipeIncludeMaster.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                handleToggleRecipeSearchClass={this.handleToggleRecipeSearchClass.bind(this)}\r\n                handleToggleRecipeSearchExact={this.handleToggleRecipeSearchExact.bind(this)}\r\n                myList={myRecipeList}\r\n                recipeSearchIncludeMaster={recipeSearchIncludeMaster}\r\n                recipeSearchClasses={recipeSearchClasses}\r\n                recipeSearchExact={recipeSearchExact}\r\n                recipeSearchResults={recipeSearchResults}\r\n                recipeSearchIsInvalid={recipeSearchIsInvalid}\r\n                recipeSearchString={recipeSearchString}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"recipe-list\" title={`My Recipe List (${myRecipeList.length})`}>\r\n            <div className=\"recipe-tab\">\r\n              <MyList\r\n                list={myRecipeList}\r\n                handleClearList={this.handleClearList.bind(this)}\r\n                handleTabChange={this.handleTabChange.bind(this)}\r\n                handleToggleListItem={this.toggleListItem.bind(this)}\r\n                handleUpdateQuantity={this.handleUpdateQuantity.bind(this)}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"shopping-list\" title={(\r\n            <span>\r\n              Shopping List <Badge variant=\"primary\">Beta</Badge>\r\n            </span>\r\n          )}>\r\n            <div className=\"recipe-tab\">\r\n              <ShoppingList\r\n                shoppingList={myShoppingList}\r\n              />\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  myRecipeList: get(state, 'recipeList.myRecipeList', []),\r\n  myShoppingList: get(state, 'recipeList.myShoppingList', {}),\r\n  recipeSearchResults: get(state, 'recipeList.recipeSearchResults', {})\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveMyRecipeList: recipeList => dispatch(recipeActions.saveMyRecipeList(recipeList)),\r\n  clearMyRecipeList: () => dispatch(recipeActions.clearMyRecipeList()),\r\n  createMyShoppingList: recipeList => dispatch(recipeActions.createMyShoppingList(recipeList)),\r\n  clearMyShoppingList: () => dispatch(recipeActions.clearMyShoppingList()),\r\n  searchRecipes: (string, params) => dispatch(recipeActions.searchRecipes(string, params)),\r\n  clearRecipeSearch: () => dispatch(recipeActions.clearRecipeSearch())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeHelper)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport default class LoadingOverlay extends React.Component {\r\n  render () {\r\n    const { show } = this.props\r\n\r\n    if (!show) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className=\"loading-overlay\">\r\n        <div>\r\n          <Spinner animation=\"border\" variant=\"light\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLoadingOverlay.propTypes = {\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nLoadingOverlay.defaultProps = {\r\n  show: false\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container } from 'react-bootstrap'\r\nimport { get } from 'lodash'\r\nimport * as actions from '../store/local/actions'\r\nimport Navigation from './navigation/Navigation'\r\nimport RecipeHelper from './RecipeHelper'\r\nimport LoadingOverlay from './common/LoadingOverlay'\r\n\r\nconst externalLink = (url, text) => (\r\n  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    {text}\r\n  </a>\r\n)\r\n\r\nclass XivCraftingGatheringHelper extends React.Component {\r\n  componentDidMount () {\r\n    this.props.getLocalClassData()\r\n    this.props.getLocalCharacterData()\r\n  }\r\n\r\n  render () {\r\n    const { characterData, craftingClassData, loading } = this.props\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Navigation\r\n          characterData={characterData}\r\n          craftingClassData={craftingClassData}\r\n        />\r\n        <Container fluid>\r\n          <RecipeHelper characterData={characterData} craftingClassData={craftingClassData} />\r\n          <hr />\r\n          <div className=\"tc text-muted pb3\">\r\n            Created by {externalLink('https://na.finalfantasyxiv.com/lodestone/character/22858010/',\r\n            'Xythyt')} with the help of {externalLink('https://www.xivapi.com', 'XIVAPI')}.\r\n            <br />\r\n            Version {process.env.REACT_APP_VERSION}\r\n          </div>\r\n        </Container>\r\n        <LoadingOverlay show={loading} />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  craftingClassData: get(state, 'local.classData'),\r\n  characterData: get(state, 'local.characterData'),\r\n  loading: (\r\n    Object.keys(get(state, 'local.loading', {})).length > 0 ||\r\n    Object.keys(get(state, 'recipeList.loading', {})).length > 0\r\n  )\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getLocalCharacterData: () => dispatch(actions.getLocalCharacterData()),\r\n  getLocalClassData: () => dispatch(actions.getLocalClassData())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(XivCraftingGatheringHelper)\r\n","import { get, set, unset } from 'lodash'\r\nimport * as LocalStorage from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  classData: LocalStorage.getDefaultCraftingClasses(),\r\n  loading: {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  const { loading } = state\r\n  switch (action.type) {\r\n    case T.LODESTONE_CHARACTER_DATA_REQUEST:\r\n      set(loading, 'characterData', true)\r\n      return {\r\n        ...state,\r\n        loading\r\n      }\r\n    case T.LOCAL_CLASS_DATA_STORE:\r\n    case T.LOCAL_CLASS_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        classData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        characterData: undefined\r\n      }\r\n    case T.LOCAL_CHARACTER_DATA_STORE:\r\n    case T.LOCAL_CHARACTER_DATA_RETRIEVAL:\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'localData')\r\n      }\r\n    case T.LOCAL_CLASS_DATA_CLEAR:\r\n      return {\r\n        ...state,\r\n        classData: LocalStorage.getDefaultCraftingClasses()\r\n      }\r\n    case T.LODESTONE_CHARACTER_DATA_SUCCESS:\r\n      unset(loading, 'characterData')\r\n      return {\r\n        ...state,\r\n        characterData: get(action, 'payload'),\r\n        loading\r\n      }\r\n    case T.API_REQUEST_FAILURE:\r\n      unset(loading, 'characterData')\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { set, unset } from 'lodash'\r\nimport * as LocalStorageService from '../../service/localStorage'\r\nimport * as T from './types'\r\n\r\nconst INITIAL_STATE = {\r\n  loading: {},\r\n  myRecipeList: LocalStorageService.getMyRecipeList(),\r\n  myShoppingList: LocalStorageService.getMyShoppingList(),\r\n  recipeSearchResults: {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  const { loading } = state\r\n  unset(state, 'error')\r\n  switch (action.type) {\r\n    case T.SHOPPING_LIST_CREATE:\r\n      unset(loading, 'shoppingList')\r\n      return {\r\n        ...state,\r\n        myShoppingList: action.shoppingList,\r\n        loading\r\n      }\r\n    case T.SHOPPING_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myShoppingList: {}\r\n      }\r\n    case T.RECIPE_LIST_SAVE:\r\n      set(loading, 'shoppingList', true)\r\n      return {\r\n        ...state,\r\n        myRecipeList: action.recipeList,\r\n        loading\r\n      }\r\n    case T.RECIPE_LIST_CLEAR:\r\n      return {\r\n        ...state,\r\n        myRecipeList: []\r\n      }\r\n    case T.RECIPE_SEARCH_REQUEST:\r\n      set(loading, 'recipeSearch', true)\r\n      return {\r\n        ...state,\r\n        loading,\r\n        params: action.params\r\n      }\r\n    case T.RECIPE_SEARCH_SUCCESS:\r\n      unset(loading, 'recipeSearch')\r\n      return {\r\n        ...state,\r\n        loading,\r\n        recipeSearchResults: action.payload\r\n      }\r\n    case T.RECIPE_SEARCH_FAILURE:\r\n      unset(loading, 'recipeSearch')\r\n      return {\r\n        ...state,\r\n        loading,\r\n        error: action.error\r\n      }\r\n    case T.RECIPE_SEARCH_CLEAR:\r\n      unset(state, 'params')\r\n      return {\r\n        ...state,\r\n        recipeSearchResults: {}\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './local/reducer'\r\nimport recipeListReducer from './recipeList/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  local: reducer,\r\n  recipeList: recipeListReducer\r\n})\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n)\r\n","import React from 'react'\r\nimport XivCraftingGatheringHelper from './XivCraftingGatheringHelper'\r\nimport Provider from 'react-redux/es/components/Provider'\r\nimport store from '../store'\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n        <XivCraftingGatheringHelper />\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport './styles/index.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}